-module('Tianjiupai.UserServer.Callback').
-export(['init'/1, 'monitor_room'/1, 'reply'/2, 'no_reply'/1, 'handle_call'/3, 'handle_cast'/2, 'is_room_down'/2, 'handle_timeout'/1, 'handle_down'/4, 'handle_info'/2, 'terminate'/2]).
'init'(S2245InitArg) -> begin {S2246UserId, S2247UserName} = S2245InitArg, begin S2248Settings = #{user_id => S2246UserId, user_name => S2247UserName}, begin S2249State = #{belongs_to => 'error', settings => S2248Settings}, 'SesterlStdlib.GenServer':'init_ok'(S2249State, #{timeout => 'Tianjiupai.Constants':'user_expiration_timeout'()}) end end end.
'monitor_room'(S2251RoomId) -> 'Tianjiupai.Room':'monitor'(S2251RoomId).
'reply'(S2253Response, S2254State) -> 'SesterlStdlib.GenServer':'reply'(S2253Response, S2254State, #{timeout => 'Tianjiupai.Constants':'user_expiration_timeout'()}).
'no_reply'(S2256State) -> 'SesterlStdlib.GenServer':'no_reply'(S2256State, #{timeout => 'Tianjiupai.Constants':'user_expiration_timeout'()}).
'handle_call'(S2258Req, _, S2259State) -> case S2258Req of 'get_user_state' -> begin S2262BelongsTo = 'SesterlStdlib.Option':'map'(fun(S2260Pair) -> begin {S2261RoomId, _} = S2260Pair, S2261RoomId end end, maps:get(belongs_to, S2259State)), begin S2263UserState = #{belongs_to => S2262BelongsTo, user_name => maps:get(user_name, maps:get(settings, S2259State))}, 'Tianjiupai.UserServer.Callback':'reply'({'user_state_got', S2263UserState}, S2259State) end end; {'set_room', S2264RoomIdOpt} -> case S2264RoomIdOpt of 'error' -> begin _ = case maps:get(belongs_to, S2259State) of 'error' -> sesterl_internal_prim:'return'(ok); {'ok', {_, S2265MrefRoom}} -> 'SesterlStdlib.MonitorRef':'demonitor'(S2265MrefRoom) end, begin S2266State = maps:put(belongs_to, 'error', S2259State), 'Tianjiupai.UserServer.Callback':'reply'({'room_set', true}, S2266State) end end; {'ok', S2267RoomId} -> begin S2268MrefOpt = 'Tianjiupai.UserServer.Callback':'monitor_room'(S2267RoomId), case S2268MrefOpt of 'error' -> 'Tianjiupai.UserServer.Callback':'reply'({'room_set', false}, S2259State); {'ok', S2269MrefRoomNew} -> begin _ = case maps:get(belongs_to, S2259State) of 'error' -> sesterl_internal_prim:'return'(ok); {'ok', {_, S2270MrefRoom}} -> 'SesterlStdlib.MonitorRef':'demonitor'(S2270MrefRoom) end, begin S2271State = maps:put(belongs_to, {'ok', {S2267RoomId, S2269MrefRoomNew}}, S2259State), 'Tianjiupai.UserServer.Callback':'reply'({'room_set', true}, S2271State) end end end end end end.
'handle_cast'(S2273Msg, S2274State) -> begin _ = begin S3003 = 'Tianjiupai.Logger':'warning'({"unexpected cast message (message: ~p, state: ~p)", 2}, {S2273Msg, S2274State}), S3003(<<"UserServer.sest">>, 143) end, 'Tianjiupai.UserServer.Callback':'no_reply'(S2274State) end.
'is_room_down'(S2276Mref, S2277State) -> case maps:get(belongs_to, S2277State) of 'error' -> false; {'ok', {_, S2278MrefRoom}} -> 'SesterlStdlib.MonitorRef':'equal'(S2276Mref, S2278MrefRoom) end.
'handle_timeout'(S2280State) -> begin _ = begin S3006 = 'Tianjiupai.Logger':'info'({"timeout (user_id: ~s)", 1}, {maps:get(user_id, maps:get(settings, S2280State))}), S3006(<<"UserServer.sest">>, 153) end, 'SesterlStdlib.GenServer':'no_reply_and_stop'('SesterlStdlib.StopReason':'normal'(), S2280State) end.
'handle_down'(S2282Mref, S2283Pid, S2284Reason, S2285State) -> begin S2286UserId = maps:get(user_id, maps:get(settings, S2285State)), begin S2287State = case 'Tianjiupai.UserServer.Callback':'is_room_down'(S2282Mref, S2285State) of true -> begin _ = begin S3008 = 'Tianjiupai.Logger':'debug'({"room closed (user_id: ~s, reason: ~p)", 2}, {S2286UserId, S2284Reason}), S3008(<<"UserServer.sest">>, 160) end, sesterl_internal_prim:'return'(maps:put(belongs_to, 'error', S2285State)) end; false -> begin _ = begin S3009 = 'Tianjiupai.Logger':'warning'({"unexpected down (user_id: ~s, mref: ~p, pid: ~p, reason: ~p, state: ~p)", 5}, {S2286UserId, S2282Mref, S2283Pid, S2284Reason, S2285State}), S3009(<<"UserServer.sest">>, 164) end, sesterl_internal_prim:'return'(S2285State) end end, 'Tianjiupai.UserServer.Callback':'no_reply'(S2287State) end end.
'handle_info'(S2289Info, S2290State) -> begin _ = begin S3011 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S2289Info, S2290State}), S3011(<<"UserServer.sest">>, 174) end, 'Tianjiupai.UserServer.Callback':'no_reply'(S2290State) end.
'terminate'(S2292Reason, S2293State) -> begin _ = begin S3013 = 'Tianjiupai.Logger':'debug'({"terminate (reason: ~p, user_id: ~s)", 2}, {S2292Reason, maps:get(user_id, maps:get(settings, S2293State))}), S3013(<<"UserServer.sest">>, 178) end, sesterl_internal_prim:'return'(ok) end.
