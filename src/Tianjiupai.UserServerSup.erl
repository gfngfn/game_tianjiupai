-module('Tianjiupai.UserServerSup').
-export(['start_child_impl'/1, 'start_link'/0, 'start_child'/2, 'which_children'/0, 'terminate_child'/1, 'as_pid'/1]).
'start_child_impl'(S2162StartArg) -> begin {S2163UserId, S2164UserName} = S2162StartArg, 'SesterlStdlib.SupervisorDynamic':'make_child_proc'(fun() -> begin S2165Res = 'Tianjiupai.UserServer':'start_link'(S2163UserId, S2164UserName), sesterl_internal_prim:'return'('SesterlStdlib.Result':'map'((fun 'Tianjiupai.UserServer':'as_pid'/1), S2165Res)) end end) end.
'start_link'() -> 'Tianjiupai.UserServerSup.Impl':'start_link_name'(ok, {'global', ok}).
'start_child'(S2186UserId, S2187UserName) -> begin S2188Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2188Opt of {'ok', S2189Proc} -> begin S2190Res = 'Tianjiupai.UserServerSup.Impl':'start_child'(S2189Proc, {S2186UserId, S2187UserName}), sesterl_internal_prim:'return'('SesterlStdlib.Result':'map'((fun 'Tianjiupai.UserServer':'from_pid'/1), S2190Res)) end; 'error' -> sesterl_internal_prim:'return'({'error', 'SesterlStdlib.RawValue':'forget'(<<"supervisor not found"/utf8>>)}) end end.
'which_children'() -> begin S2192Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2192Opt of {'ok', S2193Proc} -> begin S2194Pids = 'Tianjiupai.UserServerSup.Impl':'which_children'(S2193Proc), sesterl_internal_prim:'return'('SesterlStdlib.List':'map'((fun 'Tianjiupai.UserServer':'from_pid'/1), S2194Pids)) end; 'error' -> sesterl_internal_prim:'return'([]) end end.
'terminate_child'(S2196ChildProc) -> begin S2197Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2197Opt of {'ok', S2198Proc} -> begin S2199ChildPid = 'Tianjiupai.UserServer':'as_pid'(S2196ChildProc), 'Tianjiupai.UserServerSup.Impl':'terminate_child'(S2198Proc, S2199ChildPid) end; 'error' -> sesterl_internal_prim:'return'({'error', 'SesterlStdlib.RawValue':'forget'(<<"supervisor not found"/utf8>>)}) end end.
'as_pid'(S2201Proc) -> 'Tianjiupai.UserServerSup.Impl':'as_pid'(S2201Proc).
