-module('Tianjiupai.UserServerSup').
-export(['start_child_impl'/1, 'start_link'/0, 'start_child'/2, 'which_children'/0, 'terminate_child'/1, 'as_pid'/1]).
'start_child_impl'(S2381StartArg) -> begin {S2382UserId, S2383UserName} = S2381StartArg, 'SesterlStdlib.SupervisorDynamic':'make_child_proc'(fun() -> begin S2384Res = 'Tianjiupai.UserServer':'start_link'(S2382UserId, S2383UserName), sesterl_internal_prim:'return'('SesterlStdlib.Result':'map'((fun 'Tianjiupai.UserServer':'as_pid'/1), S2384Res)) end end) end.
'start_link'() -> 'Tianjiupai.UserServerSup.Impl':'start_link_name'(ok, {'global', ok}).
'start_child'(S2404UserId, S2405UserName) -> begin S2406Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2406Opt of {'ok', S2407Proc} -> begin S2408Res = 'Tianjiupai.UserServerSup.Impl':'start_child'(S2407Proc, {S2404UserId, S2405UserName}), sesterl_internal_prim:'return'('SesterlStdlib.Result':'map'((fun 'Tianjiupai.UserServer':'from_pid'/1), S2408Res)) end; 'error' -> sesterl_internal_prim:'return'({'error', 'SesterlStdlib.RawValue':'forget'(<<"supervisor not found"/utf8>>)}) end end.
'which_children'() -> begin S2410Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2410Opt of {'ok', S2411Proc} -> begin S2412Pids = 'Tianjiupai.UserServerSup.Impl':'which_children'(S2411Proc), sesterl_internal_prim:'return'('SesterlStdlib.List':'map'((fun 'Tianjiupai.UserServer':'from_pid'/1), S2412Pids)) end; 'error' -> sesterl_internal_prim:'return'([]) end end.
'terminate_child'(S2414ChildProc) -> begin S2415Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2415Opt of {'ok', S2416Proc} -> begin S2417ChildPid = 'Tianjiupai.UserServer':'as_pid'(S2414ChildProc), 'Tianjiupai.UserServerSup.Impl':'terminate_child'(S2416Proc, S2417ChildPid) end; 'error' -> sesterl_internal_prim:'return'({'error', 'SesterlStdlib.RawValue':'forget'(<<"supervisor not found"/utf8>>)}) end end.
'as_pid'(S2419Proc) -> 'Tianjiupai.UserServerSup.Impl':'as_pid'(S2419Proc).
