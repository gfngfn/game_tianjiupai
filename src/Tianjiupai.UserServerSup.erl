-module('Tianjiupai.UserServerSup').
-export(['start_child_impl'/1, 'start_link'/0, 'start_child'/2, 'which_children'/0, 'terminate_child'/1, 'as_pid'/1]).
'start_child_impl'(S2163StartArg) -> begin {S2164UserId, S2165UserName} = S2163StartArg, 'SesterlStdlib.SupervisorDynamic':'make_child_proc'(fun() -> begin S2166Res = 'Tianjiupai.UserServer':'start_link'(S2164UserId, S2165UserName), sesterl_internal_prim:'return'('SesterlStdlib.Result':'map'((fun 'Tianjiupai.UserServer':'as_pid'/1), S2166Res)) end end) end.
'start_link'() -> 'Tianjiupai.UserServerSup.Impl':'start_link_name'(ok, {'global', ok}).
'start_child'(S2187UserId, S2188UserName) -> begin S2189Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2189Opt of {'ok', S2190Proc} -> begin S2191Res = 'Tianjiupai.UserServerSup.Impl':'start_child'(S2190Proc, {S2187UserId, S2188UserName}), sesterl_internal_prim:'return'('SesterlStdlib.Result':'map'((fun 'Tianjiupai.UserServer':'from_pid'/1), S2191Res)) end; 'error' -> sesterl_internal_prim:'return'({'error', 'SesterlStdlib.RawValue':'forget'(<<"supervisor not found"/utf8>>)}) end end.
'which_children'() -> begin S2193Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2193Opt of {'ok', S2194Proc} -> begin S2195Pids = 'Tianjiupai.UserServerSup.Impl':'which_children'(S2194Proc), sesterl_internal_prim:'return'('SesterlStdlib.List':'map'((fun 'Tianjiupai.UserServer':'from_pid'/1), S2195Pids)) end; 'error' -> sesterl_internal_prim:'return'([]) end end.
'terminate_child'(S2197ChildProc) -> begin S2198Opt = 'Tianjiupai.UserServerSup.Impl':'where_is_global'(ok), case S2198Opt of {'ok', S2199Proc} -> begin S2200ChildPid = 'Tianjiupai.UserServer':'as_pid'(S2197ChildProc), 'Tianjiupai.UserServerSup.Impl':'terminate_child'(S2199Proc, S2200ChildPid) end; 'error' -> sesterl_internal_prim:'return'({'error', 'SesterlStdlib.RawValue':'forget'(<<"supervisor not found"/utf8>>)}) end end.
'as_pid'(S2202Proc) -> 'Tianjiupai.UserServerSup.Impl':'as_pid'(S2202Proc).
