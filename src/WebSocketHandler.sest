import Models

module WebSocketHandler :> sig
  open Stdlib
  open Models

  #[doc(```
    The type for PIDs of `tianjiupai_websocket`.
  ```)]
  type proc :: o

  val where_is<$a> : fun(user_id) -> [$a]option<proc>

  val monitor<$a> : fun(proc) -> [$a]MonitorRef.t

end = struct
  open Stdlib
  open Models

  type proc = pid<RawValue.t>

  val where_is<$a> : fun(user_id) -> [$a]option<proc> = external 1 ```
    where_is(UserId) ->
        tianjiupai_websocket:where_is(UserId).
  ```

  val monitor(ws_proc : proc) = act
    MonitorRef.monitor(ws_proc)

end
