-module('Tianjiupai.PlazaServer.Callback').
-export(['init'/1, 'publish'/1, 'handle_delete_room_sync'/2, 'handle_call'/3, 'monitor_room'/1, 'handle_update_room'/2, 'handle_subscribe'/3, 'handle_unsubscribe'/2, 'handle_cast'/2, 'handle_down'/4, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S1374State = #{rooms => [], subscribers => []}, 'SesterlStdlib.GenServer':'init_ok'(S1374State) end.
'publish'(S1376State) -> begin S1378RoomSummaries = 'SesterlStdlib.List':'map'(fun(S1377Entry) -> maps:get(room_summary, S1377Entry) end, maps:get(rooms, S1376State)), 'SesterlStdlib.List':'foldl_effect'(fun(ok, S1379Subscriber) -> 'Tianjiupai.WebSocketHandler':'notify_by_proc'(maps:get(proc, S1379Subscriber), [{'notify_plaza_update', S1378RoomSummaries} | []]) end, ok, maps:get(subscribers, S1376State)) end.
'handle_delete_room_sync'(S1381RoomId, S1382State) -> begin S1385EntryAcc = 'SesterlStdlib.List':'foldl_effect'(fun(S1383EntryAcc, S1384Entry) -> case 'SesterlStdlib.Binary':'equal'(maps:get(room_id, maps:get(room, maps:get(room_summary, S1384Entry))), S1381RoomId) of true -> begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1384Entry)), sesterl_internal_prim:'return'(S1383EntryAcc) end; false -> sesterl_internal_prim:'return'([S1384Entry | S1383EntryAcc]) end end, [], maps:get(rooms, S1382State)), begin S1386State = maps:put(rooms, 'SesterlStdlib.List':'reverse'(S1385EntryAcc), S1382State), begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1386State), 'SesterlStdlib.GenServer':'reply'('room_deleted', S1386State) end end end.
'handle_call'(S1388Req, _, S1389State) -> case S1388Req of 'get_room_list' -> begin S1391RoomSummaries = 'SesterlStdlib.List':'map'(fun(S1390Entry) -> maps:get(room_summary, S1390Entry) end, maps:get(rooms, S1389State)), 'SesterlStdlib.GenServer':'reply'({'room_list_got', S1391RoomSummaries}, S1389State) end; {'delete_room_sync', S1392RoomId} -> 'Tianjiupai.PlazaServer.Callback':'handle_delete_room_sync'(S1392RoomId, S1389State) end.
      monitor_room(RoomId) ->
          'Tianjiupai.Room':monitor(RoomId).
    
'handle_update_room'(S1395RoomSummary0, S1396State) -> begin {S1400Found, S1401Acc} = 'SesterlStdlib.List':'foldl'(fun({S1397Found, S1398Acc}, S1399Entry) -> case 'SesterlStdlib.Binary':'equal'(maps:get(room_id, maps:get(room, S1395RoomSummary0)), maps:get(room_id, maps:get(room, maps:get(room_summary, S1399Entry)))) of true -> {true, [maps:put(room_summary, S1395RoomSummary0, S1399Entry) | S1398Acc]}; false -> {S1397Found, [S1399Entry | S1398Acc]} end end, {false, []}, maps:get(rooms, S1396State)), begin S1405Acc = case S1400Found of true -> sesterl_internal_prim:'return'(S1401Acc); false -> begin S1402MonitorOpt0 = 'Tianjiupai.PlazaServer.Callback':'monitor_room'(maps:get(room_id, maps:get(room, S1395RoomSummary0))), case S1402MonitorOpt0 of 'error' -> sesterl_internal_prim:'return'(S1401Acc); {'ok', S1403Monitor0} -> begin S1404Entry = #{monitor => S1403Monitor0, room_summary => S1395RoomSummary0}, sesterl_internal_prim:'return'([S1404Entry | S1401Acc]) end end end end, begin S1406RoomEntries = 'SesterlStdlib.List':'reverse'(S1405Acc), begin S1407State = maps:put(rooms, S1406RoomEntries, S1396State), begin _ = begin S3188 = 'Tianjiupai.Logger':'debug'({"update room (room_id: ~s, found: ~p)", 2}, {maps:get(room_id, maps:get(room, S1395RoomSummary0)), S1400Found}), S3188(<<"PlazaServer.sest">>, 144) end, begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1407State), 'SesterlStdlib.GenServer':'no_reply'(S1407State) end end end end end end.
'handle_subscribe'(S1409UserId0, S1410WsProc0, S1411State) -> begin S1412WsMref0 = 'Tianjiupai.WebSocketHandler':'monitor'(S1410WsProc0), begin S1413Subscriber0 = #{monitor => S1412WsMref0, proc => S1410WsProc0, user_id => S1409UserId0}, begin {S1417SubscriberFound, S1418SubscriberAcc} = 'SesterlStdlib.List':'foldl_effect'(fun({S1414SubscriberFound, S1415SubscriberAcc}, S1416Subscriber) -> case 'SesterlStdlib.Binary':'equal'(maps:get(user_id, S1416Subscriber), S1409UserId0) of true -> begin _ = begin S3190 = 'Tianjiupai.Logger':'warning'({"already subscribed (user_id: ~s, old: ~p, new: ~p)", 3}, {S1409UserId0, maps:get(proc, S1416Subscriber), S1410WsProc0}), S3190(<<"PlazaServer.sest">>, 162) end, begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1416Subscriber)), sesterl_internal_prim:'return'({true, [S1413Subscriber0 | S1415SubscriberAcc]}) end end; false -> sesterl_internal_prim:'return'({S1414SubscriberFound, [S1416Subscriber | S1415SubscriberAcc]}) end end, {false, []}, maps:get(subscribers, S1411State)), begin S1419SubscriberAcc = case S1417SubscriberFound of true -> S1418SubscriberAcc; false -> [S1413Subscriber0 | S1418SubscriberAcc] end, begin _ = begin S3191 = 'Tianjiupai.Logger':'debug'({"subscribe (user_id: ~s, pid: ~p)", 2}, {S1409UserId0, S1410WsProc0}), S3191(<<"PlazaServer.sest">>, 181) end, 'SesterlStdlib.GenServer':'no_reply'(maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1419SubscriberAcc), S1411State)) end end end end end.
'handle_unsubscribe'(S1421UserId0, S1422State) -> begin _ = begin S3193 = 'Tianjiupai.Logger':'debug'({"unsubscribe (user_id: ~s)", 1}, {S1421UserId0}), S3193(<<"PlazaServer.sest">>, 185) end, begin S1425SubscriberAcc = 'SesterlStdlib.List':'foldl_effect'(fun(S1423SubscriberAcc, S1424Subscriber) -> case 'SesterlStdlib.Binary':'equal'(maps:get(user_id, S1424Subscriber), S1421UserId0) of true -> begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1424Subscriber)), sesterl_internal_prim:'return'(S1423SubscriberAcc) end; false -> sesterl_internal_prim:'return'([S1424Subscriber | S1423SubscriberAcc]) end end, [], maps:get(subscribers, S1422State)), 'SesterlStdlib.GenServer':'no_reply'(maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1425SubscriberAcc), S1422State)) end end.
'handle_cast'(S1427Msg, S1428State) -> case S1427Msg of {'update_room', S1429RoomSummary0} -> 'Tianjiupai.PlazaServer.Callback':'handle_update_room'(S1429RoomSummary0, S1428State); {'subscribe', S1430UserId, S1431WsProc} -> 'Tianjiupai.PlazaServer.Callback':'handle_subscribe'(S1430UserId, S1431WsProc, S1428State); {'unsubscribe', S1432UserId} -> 'Tianjiupai.PlazaServer.Callback':'handle_unsubscribe'(S1432UserId, S1428State) end.
'handle_down'(S1434Mref, S1435Pid, S1436Reason, S1437State) -> begin {S1441RoomFound, S1442EntryAcc} = 'SesterlStdlib.List':'foldl'(fun({S1438RoomFound, S1439EntryAcc}, S1440Entry) -> case 'SesterlStdlib.MonitorRef':'equal'(maps:get(monitor, S1440Entry), S1434Mref) of true -> begin _ = begin S3196 = 'Tianjiupai.Logger':'debug'({"room down (room_id: ~s, pid: ~p, reason: ~p)", 3}, {maps:get(room_id, maps:get(room, maps:get(room_summary, S1440Entry))), S1435Pid, S1436Reason}), S3196(<<"PlazaServer.sest">>, 213) end, {true, S1439EntryAcc} end; false -> {S1438RoomFound, [S1440Entry | S1439EntryAcc]} end end, {false, []}, maps:get(rooms, S1437State)), case S1441RoomFound of true -> begin S1443State = maps:put(rooms, 'SesterlStdlib.List':'reverse'(S1442EntryAcc), S1437State), begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1443State), 'SesterlStdlib.GenServer':'no_reply'(S1443State) end end; false -> begin {S1447SubscriberFound, S1448SubscriberAcc} = 'SesterlStdlib.List':'foldl'(fun({S1444SubscriberFound, S1445SubscriberAcc}, S1446Subscriber) -> case 'SesterlStdlib.MonitorRef':'equal'(maps:get(monitor, S1446Subscriber), S1434Mref) of true -> begin _ = begin S3197 = 'Tianjiupai.Logger':'debug'({"subscriber down (user_id: ~s, pid: ~p, reason: ~p)", 3}, {maps:get(user_id, S1446Subscriber), S1435Pid, S1436Reason}), S3197(<<"PlazaServer.sest">>, 235) end, {true, S1445SubscriberAcc} end; false -> {S1444SubscriberFound, [S1446Subscriber | S1445SubscriberAcc]} end end, {false, []}, maps:get(subscribers, S1437State)), case S1447SubscriberFound of true -> begin S1449State = maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1448SubscriberAcc), S1437State), 'SesterlStdlib.GenServer':'no_reply'(S1449State) end; false -> begin _ = begin S3198 = 'Tianjiupai.Logger':'warning'({"unexpected monitor ref (mref: ~p, pid: ~p, reason: ~p)", 3}, {S1434Mref, S1435Pid, S1436Reason}), S3198(<<"PlazaServer.sest">>, 252) end, 'SesterlStdlib.GenServer':'no_reply'(S1437State) end end end end end.
'handle_timeout'(S1451State) -> 'SesterlStdlib.GenServer':'no_reply'(S1451State).
'handle_info'(S1453Info, S1454State) -> begin _ = begin S3201 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S1453Info, S1454State}), S3201(<<"PlazaServer.sest">>, 263) end, 'SesterlStdlib.GenServer':'no_reply'(S1454State) end.
'terminate'(S1456Reason, S1457State) -> begin _ = begin S3203 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S1456Reason, S1457State}), S3203(<<"PlazaServer.sest">>, 267) end, sesterl_internal_prim:'return'(ok) end.
