-module('Tianjiupai.PlazaServer.Callback').
-export(['init'/1, 'publish'/1, 'handle_delete_room_sync'/2, 'handle_call'/3, 'monitor_room'/1, 'handle_update_room'/2, 'handle_subscribe'/3, 'handle_unsubscribe'/2, 'handle_cast'/2, 'handle_down'/4, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S1366State = #{rooms => [], subscribers => []}, 'SesterlStdlib.GenServer':'init_ok'(S1366State) end.
'publish'(S1368State) -> begin S1370RoomSummaries = 'SesterlStdlib.List':'map'(fun(S1369Entry) -> maps:get(room_summary, S1369Entry) end, maps:get(rooms, S1368State)), 'SesterlStdlib.List':'foldl_effect'(fun(ok, S1371Subscriber) -> 'Tianjiupai.WebSocketHandler':'notify_by_proc'(maps:get(proc, S1371Subscriber), [{'notify_plaza_update', S1370RoomSummaries} | []]) end, ok, maps:get(subscribers, S1368State)) end.
'handle_delete_room_sync'(S1373RoomId, S1374State) -> begin S1377EntryAcc = 'SesterlStdlib.List':'foldl_effect'(fun(S1375EntryAcc, S1376Entry) -> case 'SesterlStdlib.Binary':'equal'(maps:get(room_id, maps:get(room, maps:get(room_summary, S1376Entry))), S1373RoomId) of true -> begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1376Entry)), sesterl_internal_prim:'return'(S1375EntryAcc) end; false -> sesterl_internal_prim:'return'([S1376Entry | S1375EntryAcc]) end end, [], maps:get(rooms, S1374State)), begin S1378State = maps:put(rooms, 'SesterlStdlib.List':'reverse'(S1377EntryAcc), S1374State), begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1378State), 'SesterlStdlib.GenServer':'reply'('room_deleted', S1378State) end end end.
'handle_call'(S1380Req, _, S1381State) -> case S1380Req of 'get_room_list' -> begin S1383RoomSummaries = 'SesterlStdlib.List':'map'(fun(S1382Entry) -> maps:get(room_summary, S1382Entry) end, maps:get(rooms, S1381State)), 'SesterlStdlib.GenServer':'reply'({'room_list_got', S1383RoomSummaries}, S1381State) end; {'delete_room_sync', S1384RoomId} -> 'Tianjiupai.PlazaServer.Callback':'handle_delete_room_sync'(S1384RoomId, S1381State) end.
      monitor_room(RoomId) ->
          'Tianjiupai.Room':monitor(RoomId).
    
'handle_update_room'(S1387RoomSummary0, S1388State) -> begin {S1392Found, S1393Acc} = 'SesterlStdlib.List':'foldl'(fun({S1389Found, S1390Acc}, S1391Entry) -> case 'SesterlStdlib.Binary':'equal'(maps:get(room_id, maps:get(room, S1387RoomSummary0)), maps:get(room_id, maps:get(room, maps:get(room_summary, S1391Entry)))) of true -> {true, [maps:put(room_summary, S1387RoomSummary0, S1391Entry) | S1390Acc]}; false -> {S1389Found, [S1391Entry | S1390Acc]} end end, {false, []}, maps:get(rooms, S1388State)), begin S1397Acc = case S1392Found of true -> sesterl_internal_prim:'return'(S1393Acc); false -> begin S1394MonitorOpt0 = 'Tianjiupai.PlazaServer.Callback':'monitor_room'(maps:get(room_id, maps:get(room, S1387RoomSummary0))), case S1394MonitorOpt0 of 'error' -> sesterl_internal_prim:'return'(S1393Acc); {'ok', S1395Monitor0} -> begin S1396Entry = #{monitor => S1395Monitor0, room_summary => S1387RoomSummary0}, sesterl_internal_prim:'return'([S1396Entry | S1393Acc]) end end end end, begin S1398RoomEntries = 'SesterlStdlib.List':'reverse'(S1397Acc), begin S1399State = maps:put(rooms, S1398RoomEntries, S1388State), begin _ = begin S3179 = 'Tianjiupai.Logger':'debug'({"update room (room_id: ~s, found: ~p)", 2}, {maps:get(room_id, maps:get(room, S1387RoomSummary0)), S1392Found}), S3179(<<"PlazaServer.sest">>, 144) end, begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1399State), 'SesterlStdlib.GenServer':'no_reply'(S1399State) end end end end end end.
'handle_subscribe'(S1401UserId0, S1402WsProc0, S1403State) -> begin S1404WsMref0 = 'Tianjiupai.WebSocketHandler':'monitor'(S1402WsProc0), begin S1405Subscriber0 = #{monitor => S1404WsMref0, proc => S1402WsProc0, user_id => S1401UserId0}, begin {S1409SubscriberFound, S1410SubscriberAcc} = 'SesterlStdlib.List':'foldl_effect'(fun({S1406SubscriberFound, S1407SubscriberAcc}, S1408Subscriber) -> case 'SesterlStdlib.Binary':'equal'(maps:get(user_id, S1408Subscriber), S1401UserId0) of true -> begin _ = begin S3181 = 'Tianjiupai.Logger':'warning'({"already subscribed (user_id: ~s, old: ~p, new: ~p)", 3}, {S1401UserId0, maps:get(proc, S1408Subscriber), S1402WsProc0}), S3181(<<"PlazaServer.sest">>, 162) end, begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1408Subscriber)), sesterl_internal_prim:'return'({true, [S1405Subscriber0 | S1407SubscriberAcc]}) end end; false -> sesterl_internal_prim:'return'({S1406SubscriberFound, [S1408Subscriber | S1407SubscriberAcc]}) end end, {false, []}, maps:get(subscribers, S1403State)), begin S1411SubscriberAcc = case S1409SubscriberFound of true -> S1410SubscriberAcc; false -> [S1405Subscriber0 | S1410SubscriberAcc] end, begin _ = begin S3182 = 'Tianjiupai.Logger':'debug'({"subscribe (user_id: ~s, pid: ~p)", 2}, {S1401UserId0, S1402WsProc0}), S3182(<<"PlazaServer.sest">>, 181) end, 'SesterlStdlib.GenServer':'no_reply'(maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1411SubscriberAcc), S1403State)) end end end end end.
'handle_unsubscribe'(S1413UserId0, S1414State) -> begin _ = begin S3184 = 'Tianjiupai.Logger':'debug'({"unsubscribe (user_id: ~s)", 1}, {S1413UserId0}), S3184(<<"PlazaServer.sest">>, 185) end, begin S1417SubscriberAcc = 'SesterlStdlib.List':'foldl_effect'(fun(S1415SubscriberAcc, S1416Subscriber) -> case 'SesterlStdlib.Binary':'equal'(maps:get(user_id, S1416Subscriber), S1413UserId0) of true -> begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1416Subscriber)), sesterl_internal_prim:'return'(S1415SubscriberAcc) end; false -> sesterl_internal_prim:'return'([S1416Subscriber | S1415SubscriberAcc]) end end, [], maps:get(subscribers, S1414State)), 'SesterlStdlib.GenServer':'no_reply'(maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1417SubscriberAcc), S1414State)) end end.
'handle_cast'(S1419Msg, S1420State) -> case S1419Msg of {'update_room', S1421RoomSummary0} -> 'Tianjiupai.PlazaServer.Callback':'handle_update_room'(S1421RoomSummary0, S1420State); {'subscribe', S1422UserId, S1423WsProc} -> 'Tianjiupai.PlazaServer.Callback':'handle_subscribe'(S1422UserId, S1423WsProc, S1420State); {'unsubscribe', S1424UserId} -> 'Tianjiupai.PlazaServer.Callback':'handle_unsubscribe'(S1424UserId, S1420State) end.
'handle_down'(S1426Mref, S1427Pid, S1428Reason, S1429State) -> begin {S1433RoomFound, S1434EntryAcc} = 'SesterlStdlib.List':'foldl'(fun({S1430RoomFound, S1431EntryAcc}, S1432Entry) -> case 'SesterlStdlib.MonitorRef':'equal'(maps:get(monitor, S1432Entry), S1426Mref) of true -> begin _ = begin S3187 = 'Tianjiupai.Logger':'debug'({"room down (room_id: ~s, pid: ~p, reason: ~p)", 3}, {maps:get(room_id, maps:get(room, maps:get(room_summary, S1432Entry))), S1427Pid, S1428Reason}), S3187(<<"PlazaServer.sest">>, 213) end, {true, S1431EntryAcc} end; false -> {S1430RoomFound, [S1432Entry | S1431EntryAcc]} end end, {false, []}, maps:get(rooms, S1429State)), case S1433RoomFound of true -> begin S1435State = maps:put(rooms, 'SesterlStdlib.List':'reverse'(S1434EntryAcc), S1429State), begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1435State), 'SesterlStdlib.GenServer':'no_reply'(S1435State) end end; false -> begin {S1439SubscriberFound, S1440SubscriberAcc} = 'SesterlStdlib.List':'foldl'(fun({S1436SubscriberFound, S1437SubscriberAcc}, S1438Subscriber) -> case 'SesterlStdlib.MonitorRef':'equal'(maps:get(monitor, S1438Subscriber), S1426Mref) of true -> begin _ = begin S3188 = 'Tianjiupai.Logger':'debug'({"subscriber down (user_id: ~s, pid: ~p, reason: ~p)", 3}, {maps:get(user_id, S1438Subscriber), S1427Pid, S1428Reason}), S3188(<<"PlazaServer.sest">>, 235) end, {true, S1437SubscriberAcc} end; false -> {S1436SubscriberFound, [S1438Subscriber | S1437SubscriberAcc]} end end, {false, []}, maps:get(subscribers, S1429State)), case S1439SubscriberFound of true -> begin S1441State = maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1440SubscriberAcc), S1429State), 'SesterlStdlib.GenServer':'no_reply'(S1441State) end; false -> begin _ = begin S3189 = 'Tianjiupai.Logger':'warning'({"unexpected monitor ref (mref: ~p, pid: ~p, reason: ~p)", 3}, {S1426Mref, S1427Pid, S1428Reason}), S3189(<<"PlazaServer.sest">>, 252) end, 'SesterlStdlib.GenServer':'no_reply'(S1429State) end end end end end.
'handle_timeout'(S1443State) -> 'SesterlStdlib.GenServer':'no_reply'(S1443State).
'handle_info'(S1445Info, S1446State) -> begin _ = begin S3192 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S1445Info, S1446State}), S3192(<<"PlazaServer.sest">>, 263) end, 'SesterlStdlib.GenServer':'no_reply'(S1446State) end.
'terminate'(S1448Reason, S1449State) -> begin _ = begin S3194 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S1448Reason, S1449State}), S3194(<<"PlazaServer.sest">>, 267) end, sesterl_internal_prim:'return'(ok) end.
