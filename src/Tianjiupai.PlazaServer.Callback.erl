-module('Tianjiupai.PlazaServer.Callback').
-export(['init'/1, 'publish'/1, 'handle_delete_room_sync'/2, 'handle_call'/3, 'monitor_room'/1, 'handle_update_room'/2, 'handle_subscribe'/3, 'handle_unsubscribe'/2, 'handle_cast'/2, 'handle_down'/4, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S1357State = #{rooms => [], subscribers => []}, 'SesterlStdlib.GenServer':'init_ok'(S1357State) end.
'publish'(S1359State) -> begin S1361RoomSummaries = 'SesterlStdlib.List':'map'(fun(S1360Entry) -> maps:get(room_summary, S1360Entry) end, maps:get(rooms, S1359State)), 'SesterlStdlib.List':'foldl_effect'(fun(ok, S1362Subscriber) -> 'Tianjiupai.WebSocketHandler':'notify_by_proc'(maps:get(proc, S1362Subscriber), [{'notify_plaza_update', S1361RoomSummaries} | []]) end, ok, maps:get(subscribers, S1359State)) end.
'handle_delete_room_sync'(S1364RoomId, S1365State) -> begin S1368EntryAcc = 'SesterlStdlib.List':'foldl_effect'(fun(S1366EntryAcc, S1367Entry) -> case 'SesterlStdlib.Binary':'equal'(maps:get(room_id, maps:get(room, maps:get(room_summary, S1367Entry))), S1364RoomId) of true -> begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1367Entry)), sesterl_internal_prim:'return'(S1366EntryAcc) end; false -> sesterl_internal_prim:'return'([S1367Entry | S1366EntryAcc]) end end, [], maps:get(rooms, S1365State)), begin S1369State = maps:put(rooms, 'SesterlStdlib.List':'reverse'(S1368EntryAcc), S1365State), begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1369State), 'SesterlStdlib.GenServer':'reply'('room_deleted', S1369State) end end end.
'handle_call'(S1371Req, _, S1372State) -> case S1371Req of 'get_room_list' -> begin S1374RoomSummaries = 'SesterlStdlib.List':'map'(fun(S1373Entry) -> maps:get(room_summary, S1373Entry) end, maps:get(rooms, S1372State)), 'SesterlStdlib.GenServer':'reply'({'room_list_got', S1374RoomSummaries}, S1372State) end; {'delete_room_sync', S1375RoomId} -> 'Tianjiupai.PlazaServer.Callback':'handle_delete_room_sync'(S1375RoomId, S1372State) end.
      monitor_room(RoomId) ->
          'Tianjiupai.Room':monitor(RoomId).
    
'handle_update_room'(S1378RoomSummary0, S1379State) -> begin {S1383Found, S1384Acc} = 'SesterlStdlib.List':'foldl'(fun({S1380Found, S1381Acc}, S1382Entry) -> case 'SesterlStdlib.Binary':'equal'(maps:get(room_id, maps:get(room, S1378RoomSummary0)), maps:get(room_id, maps:get(room, maps:get(room_summary, S1382Entry)))) of true -> {true, [maps:put(room_summary, S1378RoomSummary0, S1382Entry) | S1381Acc]}; false -> {S1380Found, [S1382Entry | S1381Acc]} end end, {false, []}, maps:get(rooms, S1379State)), begin S1388Acc = case S1383Found of true -> sesterl_internal_prim:'return'(S1384Acc); false -> begin S1385MonitorOpt0 = 'Tianjiupai.PlazaServer.Callback':'monitor_room'(maps:get(room_id, maps:get(room, S1378RoomSummary0))), case S1385MonitorOpt0 of 'error' -> sesterl_internal_prim:'return'(S1384Acc); {'ok', S1386Monitor0} -> begin S1387Entry = #{monitor => S1386Monitor0, room_summary => S1378RoomSummary0}, sesterl_internal_prim:'return'([S1387Entry | S1384Acc]) end end end end, begin S1389RoomEntries = 'SesterlStdlib.List':'reverse'(S1388Acc), begin S1390State = maps:put(rooms, S1389RoomEntries, S1379State), begin _ = begin S2854 = 'Tianjiupai.Logger':'debug'({"update room (room_id: ~s, found: ~p)", 2}, {maps:get(room_id, maps:get(room, S1378RoomSummary0)), S1383Found}), S2854(<<"PlazaServer.sest">>, 144) end, begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1390State), 'SesterlStdlib.GenServer':'no_reply'(S1390State) end end end end end end.
'handle_subscribe'(S1392UserId0, S1393WsProc0, S1394State) -> begin S1395WsMref0 = 'Tianjiupai.WebSocketHandler':'monitor'(S1393WsProc0), begin S1396Subscriber0 = #{monitor => S1395WsMref0, proc => S1393WsProc0, user_id => S1392UserId0}, begin {S1400SubscriberFound, S1401SubscriberAcc} = 'SesterlStdlib.List':'foldl_effect'(fun({S1397SubscriberFound, S1398SubscriberAcc}, S1399Subscriber) -> case 'SesterlStdlib.Binary':'equal'(maps:get(user_id, S1399Subscriber), S1392UserId0) of true -> begin _ = begin S2856 = 'Tianjiupai.Logger':'warning'({"already subscribed (user_id: ~s, old: ~p, new: ~p)", 3}, {S1392UserId0, maps:get(proc, S1399Subscriber), S1393WsProc0}), S2856(<<"PlazaServer.sest">>, 162) end, begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1399Subscriber)), sesterl_internal_prim:'return'({true, [S1396Subscriber0 | S1398SubscriberAcc]}) end end; false -> sesterl_internal_prim:'return'({S1397SubscriberFound, [S1399Subscriber | S1398SubscriberAcc]}) end end, {false, []}, maps:get(subscribers, S1394State)), begin S1402SubscriberAcc = case S1400SubscriberFound of true -> S1401SubscriberAcc; false -> [S1396Subscriber0 | S1401SubscriberAcc] end, begin _ = begin S2857 = 'Tianjiupai.Logger':'debug'({"subscribe (user_id: ~s, pid: ~p)", 2}, {S1392UserId0, S1393WsProc0}), S2857(<<"PlazaServer.sest">>, 181) end, 'SesterlStdlib.GenServer':'no_reply'(maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1402SubscriberAcc), S1394State)) end end end end end.
'handle_unsubscribe'(S1404UserId0, S1405State) -> begin _ = begin S2859 = 'Tianjiupai.Logger':'debug'({"unsubscribe (user_id: ~s)", 1}, {S1404UserId0}), S2859(<<"PlazaServer.sest">>, 185) end, begin S1408SubscriberAcc = 'SesterlStdlib.List':'foldl_effect'(fun(S1406SubscriberAcc, S1407Subscriber) -> case 'SesterlStdlib.Binary':'equal'(maps:get(user_id, S1407Subscriber), S1404UserId0) of true -> begin _ = 'SesterlStdlib.MonitorRef':'demonitor'(maps:get(monitor, S1407Subscriber)), sesterl_internal_prim:'return'(S1406SubscriberAcc) end; false -> sesterl_internal_prim:'return'([S1407Subscriber | S1406SubscriberAcc]) end end, [], maps:get(subscribers, S1405State)), 'SesterlStdlib.GenServer':'no_reply'(maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1408SubscriberAcc), S1405State)) end end.
'handle_cast'(S1410Msg, S1411State) -> case S1410Msg of {'update_room', S1412RoomSummary0} -> 'Tianjiupai.PlazaServer.Callback':'handle_update_room'(S1412RoomSummary0, S1411State); {'subscribe', S1413UserId, S1414WsProc} -> 'Tianjiupai.PlazaServer.Callback':'handle_subscribe'(S1413UserId, S1414WsProc, S1411State); {'unsubscribe', S1415UserId} -> 'Tianjiupai.PlazaServer.Callback':'handle_unsubscribe'(S1415UserId, S1411State) end.
'handle_down'(S1417Mref, S1418Pid, S1419Reason, S1420State) -> begin {S1424RoomFound, S1425EntryAcc} = 'SesterlStdlib.List':'foldl'(fun({S1421RoomFound, S1422EntryAcc}, S1423Entry) -> case 'SesterlStdlib.MonitorRef':'equal'(maps:get(monitor, S1423Entry), S1417Mref) of true -> begin _ = begin S2862 = 'Tianjiupai.Logger':'debug'({"room down (room_id: ~s, pid: ~p, reason: ~p)", 3}, {maps:get(room_id, maps:get(room, maps:get(room_summary, S1423Entry))), S1418Pid, S1419Reason}), S2862(<<"PlazaServer.sest">>, 213) end, {true, S1422EntryAcc} end; false -> {S1421RoomFound, [S1423Entry | S1422EntryAcc]} end end, {false, []}, maps:get(rooms, S1420State)), case S1424RoomFound of true -> begin S1426State = maps:put(rooms, 'SesterlStdlib.List':'reverse'(S1425EntryAcc), S1420State), begin _ = 'Tianjiupai.PlazaServer.Callback':'publish'(S1426State), 'SesterlStdlib.GenServer':'no_reply'(S1426State) end end; false -> begin {S1430SubscriberFound, S1431SubscriberAcc} = 'SesterlStdlib.List':'foldl'(fun({S1427SubscriberFound, S1428SubscriberAcc}, S1429Subscriber) -> case 'SesterlStdlib.MonitorRef':'equal'(maps:get(monitor, S1429Subscriber), S1417Mref) of true -> begin _ = begin S2863 = 'Tianjiupai.Logger':'debug'({"subscriber down (user_id: ~s, pid: ~p, reason: ~p)", 3}, {maps:get(user_id, S1429Subscriber), S1418Pid, S1419Reason}), S2863(<<"PlazaServer.sest">>, 235) end, {true, S1428SubscriberAcc} end; false -> {S1427SubscriberFound, [S1429Subscriber | S1428SubscriberAcc]} end end, {false, []}, maps:get(subscribers, S1420State)), case S1430SubscriberFound of true -> begin S1432State = maps:put(subscribers, 'SesterlStdlib.List':'reverse'(S1431SubscriberAcc), S1420State), 'SesterlStdlib.GenServer':'no_reply'(S1432State) end; false -> begin _ = begin S2864 = 'Tianjiupai.Logger':'warning'({"unexpected monitor ref (mref: ~p, pid: ~p, reason: ~p)", 3}, {S1417Mref, S1418Pid, S1419Reason}), S2864(<<"PlazaServer.sest">>, 252) end, 'SesterlStdlib.GenServer':'no_reply'(S1420State) end end end end end.
'handle_timeout'(S1434State) -> 'SesterlStdlib.GenServer':'no_reply'(S1434State).
'handle_info'(S1436Info, S1437State) -> begin _ = begin S2867 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S1436Info, S1437State}), S2867(<<"PlazaServer.sest">>, 263) end, 'SesterlStdlib.GenServer':'no_reply'(S1437State) end.
'terminate'(S1439Reason, S1440State) -> begin _ = begin S2869 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S1439Reason, S1440State}), S2869(<<"PlazaServer.sest">>, 267) end, sesterl_internal_prim:'return'(ok) end.
