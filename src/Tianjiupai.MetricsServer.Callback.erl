-module('Tianjiupai.MetricsServer.Callback').
-export(['init'/1, 'handle_call'/3, 'handle_cast'/2, 'handle_down'/4, 'now_milliseconds'/0, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S2679Res = 'Tianjiupai.Socket':'connect'({127, 0, 0, 1}, 25888), begin S2682SocketOpt = case S2679Res of {'ok', S2680Socket} -> {'ok', S2680Socket}; {'error', S2681Err} -> begin _ = begin S3436 = 'Tianjiupai.Logger':'warning'({"failed to connect (reason: ~p)", 1}, {S2681Err}), S3436(<<"MetricsServer.sest">>, 50) end, 'error' end end, begin S2683State = #{socket => S2682SocketOpt}, 'SesterlStdlib.GenServer':'init_ok'(S2683State, #{timeout => 'Tianjiupai.Constants':'metrics_interval'()}) end end end.
'handle_call'('request_dummy', S2685From, S2686State) -> begin _ = begin S3438 = 'Tianjiupai.Logger':'warning'({"unexpected call (from: ~p, state: ~p)", 2}, {S2685From, S2686State}), S3438(<<"MetricsServer.sest">>, 58) end, 'SesterlStdlib.GenServer':'reply'('response_dummy', S2686State) end.
'handle_cast'('cast_dummy', S2688State) -> begin _ = begin S3440 = 'Tianjiupai.Logger':'warning'({"unexpected cast (state: ~p)", 1}, {S2688State}), S3440(<<"MetricsServer.sest">>, 62) end, 'SesterlStdlib.GenServer':'no_reply'(S2688State) end.
'handle_down'(S2690Mref, S2691Pid, S2692Reason, S2693State) -> begin S2694Tuple = {S2690Mref, S2691Pid, S2692Reason}, begin _ = begin S3442 = 'Tianjiupai.Logger':'warning'({"unexpected down (tuple: ~p, state: ~p)", 2}, {S2694Tuple, S2693State}), S3442(<<"MetricsServer.sest">>, 67) end, 'SesterlStdlib.GenServer':'no_reply'(S2693State) end end.
      now_milliseconds() ->
          os:system_time(milli_seconds).
    
'handle_timeout'(S2697State) -> begin S2698ResRooms = 'Tianjiupai.RoomResourceServer':'get_number_of_rooms'(), begin S2699ResUsers = 'Tianjiupai.UserResourceServer':'get_number_of_users'(), begin ok = case {S2698ResRooms, S2699ResUsers} of {{'ok', S2700NumRooms}, {'ok', S2701NumUsers}} -> begin _ = begin S3444 = 'Tianjiupai.Logger':'debug'({"num_rooms: ~p, num_users: ~p", 2}, {S2700NumRooms, S2701NumUsers}), S3444(<<"MetricsServer.sest">>, 81) end, begin S2702Timestamp = 'Tianjiupai.MetricsServer.Callback':'now_milliseconds'(), begin S2703Data = sesterl_internal_prim:'format'({"{\"_aws\": {\"Timestamp\": ~p, \"CloudWatchMetrics\": [{\"Namespace\": \"game-server-metrics\", \"Dimensions\": [[\"functionVersion\"]], \"Metrics\": [{\"Name\": \"num_rooms\": \"Unit\": \"Count\"}, {\"Name\": \"num_users\", \"Unit\": \"Count\"}]}]}, \"functionVersion\": \"$LATEST\", \"num_rooms\": ~p, \"num_users\": ~p}", 3}, {S2702Timestamp, S2700NumRooms, S2701NumUsers}), case maps:get(socket, S2697State) of {'ok', S2704Socket} -> begin S2705Res = 'Tianjiupai.Socket':'send'(S2704Socket, 'SesterlStdlib.Binary':'from_list'(S2703Data)), case S2705Res of {'ok', ok} -> sesterl_internal_prim:'return'(ok); {'error', S2706Err} -> begin _ = begin S3445 = 'Tianjiupai.Logger':'warning'({"failed to send metrics (reason: ~p)", 1}, {S2706Err}), S3445(<<"MetricsServer.sest">>, 96) end, sesterl_internal_prim:'return'(ok) end end end; 'error' -> sesterl_internal_prim:'return'(ok) end end end end; _ -> begin _ = begin S3446 = 'Tianjiupai.Logger':'warning'({"res_rooms: ~p, res_users: ~p", 2}, {S2698ResRooms, S2699ResUsers}), S3446(<<"MetricsServer.sest">>, 103) end, sesterl_internal_prim:'return'(ok) end end, 'SesterlStdlib.GenServer':'no_reply'(S2697State, #{timeout => 'Tianjiupai.Constants':'metrics_interval'()}) end end end.
'handle_info'(S2708Info, S2709State) -> begin _ = begin S3448 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S2708Info, S2709State}), S3448(<<"MetricsServer.sest">>, 110) end, 'SesterlStdlib.GenServer':'no_reply'(S2709State) end.
'terminate'(S2711Reason, S2712State) -> begin _ = begin S3450 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S2711Reason, S2712State}), S3450(<<"MetricsServer.sest">>, 114) end, sesterl_internal_prim:'return'(ok) end.
