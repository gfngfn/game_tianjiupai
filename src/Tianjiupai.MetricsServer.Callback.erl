-module('Tianjiupai.MetricsServer.Callback').
-export(['init'/1, 'handle_call'/3, 'handle_cast'/2, 'handle_down'/4, 'now_milliseconds'/0, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S2687Res = 'Tianjiupai.Socket':'connect'({127, 0, 0, 1}, 25888), begin S2690SocketOpt = case S2687Res of {'ok', S2688Socket} -> {'ok', S2688Socket}; {'error', S2689Err} -> begin _ = begin S3441 = 'Tianjiupai.Logger':'warning'({"failed to connect (reason: ~p)", 1}, {S2689Err}), S3441(<<"MetricsServer.sest">>, 51) end, 'error' end end, begin S2691State = #{socket => S2690SocketOpt}, begin _ = begin S3442 = 'Tianjiupai.Logger':'info'({"start (state: ~p)", 1}, {S2691State}), S3442(<<"MetricsServer.sest">>, 56) end, 'SesterlStdlib.GenServer':'init_ok'(S2691State, #{timeout => 'Tianjiupai.Constants':'metrics_interval'()}) end end end end.
'handle_call'('request_dummy', S2693From, S2694State) -> begin _ = begin S3444 = 'Tianjiupai.Logger':'warning'({"unexpected call (from: ~p, state: ~p)", 2}, {S2693From, S2694State}), S3444(<<"MetricsServer.sest">>, 60) end, 'SesterlStdlib.GenServer':'reply'('response_dummy', S2694State) end.
'handle_cast'('cast_dummy', S2696State) -> begin _ = begin S3446 = 'Tianjiupai.Logger':'warning'({"unexpected cast (state: ~p)", 1}, {S2696State}), S3446(<<"MetricsServer.sest">>, 64) end, 'SesterlStdlib.GenServer':'no_reply'(S2696State) end.
'handle_down'(S2698Mref, S2699Pid, S2700Reason, S2701State) -> begin S2702Tuple = {S2698Mref, S2699Pid, S2700Reason}, begin _ = begin S3448 = 'Tianjiupai.Logger':'warning'({"unexpected down (tuple: ~p, state: ~p)", 2}, {S2702Tuple, S2701State}), S3448(<<"MetricsServer.sest">>, 69) end, 'SesterlStdlib.GenServer':'no_reply'(S2701State) end end.
      now_milliseconds() ->
          os:system_time(milli_seconds).
    
'handle_timeout'(S2705State) -> begin S2706ResRooms = 'Tianjiupai.RoomResourceServer':'get_number_of_rooms'(), begin S2707ResUsers = 'Tianjiupai.UserResourceServer':'get_number_of_users'(), begin ok = case {S2706ResRooms, S2707ResUsers} of {{'ok', S2708NumRooms}, {'ok', S2709NumUsers}} -> begin _ = begin S3450 = 'Tianjiupai.Logger':'debug'({"num_rooms: ~p, num_users: ~p", 2}, {S2708NumRooms, S2709NumUsers}), S3450(<<"MetricsServer.sest">>, 83) end, begin S2710Timestamp = 'Tianjiupai.MetricsServer.Callback':'now_milliseconds'(), begin ok = 'Tianjiupai.MetricsLogger':'put'(S2708NumRooms, S2709NumUsers, S2710Timestamp), sesterl_internal_prim:'return'(ok) end end end; _ -> begin _ = begin S3451 = 'Tianjiupai.Logger':'warning'({"res_rooms: ~p, res_users: ~p", 2}, {S2706ResRooms, S2707ResUsers}), S3451(<<"MetricsServer.sest">>, 109) end, sesterl_internal_prim:'return'(ok) end end, 'SesterlStdlib.GenServer':'no_reply'(S2705State, #{timeout => 'Tianjiupai.Constants':'metrics_interval'()}) end end end.
'handle_info'(S2712Info, S2713State) -> begin _ = begin S3453 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S2712Info, S2713State}), S3453(<<"MetricsServer.sest">>, 116) end, 'SesterlStdlib.GenServer':'no_reply'(S2713State) end.
'terminate'(S2715Reason, S2716State) -> begin _ = begin S3455 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S2715Reason, S2716State}), S3455(<<"MetricsServer.sest">>, 120) end, sesterl_internal_prim:'return'(ok) end.
