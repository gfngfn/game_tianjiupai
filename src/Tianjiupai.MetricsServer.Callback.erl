-module('Tianjiupai.MetricsServer.Callback').
-export(['init'/1, 'handle_call'/3, 'handle_cast'/2, 'handle_down'/4, 'now_milliseconds'/0, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S2679Res = 'Tianjiupai.Socket':'connect'({127, 0, 0, 1}, 25888), begin S2682SocketOpt = case S2679Res of {'ok', S2680Socket} -> {'ok', S2680Socket}; {'error', S2681Err} -> begin _ = begin S3432 = 'Tianjiupai.Logger':'warning'({"failed to connect (reason: ~p)", 1}, {S2681Err}), S3432(<<"MetricsServer.sest">>, 50) end, 'error' end end, begin S2683State = #{socket => S2682SocketOpt}, 'SesterlStdlib.GenServer':'init_ok'(S2683State, #{timeout => 'Tianjiupai.Constants':'metrics_interval'()}) end end end.
'handle_call'('request_dummy', S2685From, S2686State) -> begin _ = begin S3434 = 'Tianjiupai.Logger':'warning'({"unexpected call (from: ~p, state: ~p)", 2}, {S2685From, S2686State}), S3434(<<"MetricsServer.sest">>, 58) end, 'SesterlStdlib.GenServer':'reply'('response_dummy', S2686State) end.
'handle_cast'('cast_dummy', S2688State) -> begin _ = begin S3436 = 'Tianjiupai.Logger':'warning'({"unexpected cast (state: ~p)", 1}, {S2688State}), S3436(<<"MetricsServer.sest">>, 62) end, 'SesterlStdlib.GenServer':'no_reply'(S2688State) end.
'handle_down'(S2690Mref, S2691Pid, S2692Reason, S2693State) -> begin S2694Tuple = {S2690Mref, S2691Pid, S2692Reason}, begin _ = begin S3438 = 'Tianjiupai.Logger':'warning'({"unexpected down (tuple: ~p, state: ~p)", 2}, {S2694Tuple, S2693State}), S3438(<<"MetricsServer.sest">>, 67) end, 'SesterlStdlib.GenServer':'no_reply'(S2693State) end end.
      now_milliseconds() ->
          os:system_time(milli_seconds).
    
'handle_timeout'(S2697State) -> begin S2698NumRooms = 'Tianjiupai.RoomResourceServer':'get_number_of_rooms'(), begin S2699NumUsers = 'Tianjiupai.UserResourceServer':'get_number_of_users'(), begin S2700Timestamp = 'Tianjiupai.MetricsServer.Callback':'now_milliseconds'(), begin S2701Data = sesterl_internal_prim:'format'({"{\"_aws\": {\"Timestamp\": ~p, \"CloudWatchMetrics\": [{\"Namespace\": \"game-server-metrics\", \"Dimensions\": [[\"functionVersion\"]], \"Metrics\": [{\"Name\": \"num_rooms\": \"Unit\": \"Count\"}, {\"Name\": \"num_users\", \"Unit\": \"Count\"}]}]}, \"functionVersion\": \"$LATEST\", \"num_rooms\": ~p, \"num_users\": ~p}", 3}, {S2700Timestamp, S2698NumRooms, S2699NumUsers}), begin {'ok', ok} = case maps:get(socket, S2697State) of {'ok', S2702Socket} -> 'Tianjiupai.Socket':'send'(S2702Socket, 'SesterlStdlib.Binary':'from_list'(S2701Data)); 'error' -> sesterl_internal_prim:'return'({'ok', ok}) end, 'SesterlStdlib.GenServer':'no_reply'(S2697State, #{timeout => 'Tianjiupai.Constants':'metrics_interval'()}) end end end end end.
'handle_info'(S2704Info, S2705State) -> begin _ = begin S3441 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S2704Info, S2705State}), S3441(<<"MetricsServer.sest">>, 94) end, 'SesterlStdlib.GenServer':'no_reply'(S2705State) end.
'terminate'(S2707Reason, S2708State) -> begin _ = begin S3443 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S2707Reason, S2708State}), S3443(<<"MetricsServer.sest">>, 98) end, sesterl_internal_prim:'return'(ok) end.
