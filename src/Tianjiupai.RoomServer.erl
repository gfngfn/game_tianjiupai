-module('Tianjiupai.RoomServer').
-export(['monitor'/1, 'start_link'/2, 'as_pid'/1, 'from_pid'/1, 'call'/3, 'get_whole_state'/1, 'get_personal_state'/2, 'send_chat'/3, 'attend'/3, 'exit'/2, 'submit'/3, 'ack'/3, 'require_next_inning'/3, 'set_connection'/3]).
'monitor'(S2085RoomId) -> begin S2086ProcOpt = 'Tianjiupai.RoomServer.Impl':'where_is_global'(S2085RoomId), case S2086ProcOpt of {'ok', S2087Proc} -> begin S2088Mref = 'SesterlStdlib.MonitorRef':'monitor'('Tianjiupai.RoomServer.Impl':'as_pid'(S2087Proc)), sesterl_internal_prim:'return'({'ok', S2088Mref}) end; 'error' -> sesterl_internal_prim:'return'('error') end end.
'start_link'(S2090RoomId, S2091RoomName) -> 'Tianjiupai.RoomServer.Impl':'start_link_name'({S2090RoomId, S2091RoomName}, {'global', S2090RoomId}).
'as_pid'(S2093Proc) -> 'Tianjiupai.RoomServer.Impl':'as_pid'(S2093Proc).
'from_pid'(S2095Proc) -> 'Tianjiupai.RoomServer.Impl':'from_pid'(S2095Proc).
'call'(S2097RoomId, S2098Req, S2099F) -> begin S2100ProcOpt = 'Tianjiupai.RoomServer.Impl':'where_is_global'(S2097RoomId), case S2100ProcOpt of 'error' -> sesterl_internal_prim:'return'('error'); {'ok', S2101Proc} -> begin S2102RespResult = 'Tianjiupai.RoomServer.Impl':'call'(S2101Proc, S2098Req), case S2102RespResult of {'ok', S2103Resp} -> S2099F(S2103Resp); {'error', S2104Err} -> begin _ = begin S3190 = 'Tianjiupai.Logger':'warning'({"call failed (room_id: ~s, req: ~p, proc: ~p, error: ~p)", 4}, {S2097RoomId, S2098Req, S2101Proc, S2104Err}), S3190(<<"RoomServer.sest">>, 1564) end, sesterl_internal_prim:'return'('error') end end end end end.
'get_whole_state'(S2106RoomId) -> 'Tianjiupai.RoomServer':'call'(S2106RoomId, 'get_whole_state', fun({'whole_state', S2107WholeState}) -> sesterl_internal_prim:'return'({'ok', S2107WholeState}) end).
'get_personal_state'(S2109RoomId, S2110UserId) -> 'Tianjiupai.RoomServer':'call'(S2109RoomId, {'get_personal_state', S2110UserId}, fun({'personal_state', S2111PersonalStateOpt}) -> sesterl_internal_prim:'return'(S2111PersonalStateOpt) end).
'send_chat'(S2113RoomId, S2114User, S2115Text) -> 'Tianjiupai.RoomServer':'call'(S2113RoomId, {'send_chat', S2114User, S2115Text}, fun('chat_sent') -> sesterl_internal_prim:'return'({'ok', ok}) end).
'attend'(S2117RoomId, S2118User, S2119WsProc) -> 'Tianjiupai.RoomServer':'call'(S2117RoomId, {'attend', S2118User, S2119WsProc}, fun({'attended', S2120GameStateOpt}) -> sesterl_internal_prim:'return'(S2120GameStateOpt) end).
'exit'(S2122RoomId, S2123UserId) -> 'Tianjiupai.RoomServer':'call'(S2122RoomId, {'exit', S2123UserId}, fun({'exited', S2124Success}) -> case S2124Success of true -> sesterl_internal_prim:'return'({'ok', ok}); false -> sesterl_internal_prim:'return'('error') end end).
'submit'(S2126RoomId, S2127UserId, S2128Cards) -> 'Tianjiupai.RoomServer':'call'(S2126RoomId, {'submit', S2127UserId, S2128Cards}, fun({'submission_done', S2129V}) -> sesterl_internal_prim:'return'(S2129V) end).
'ack'(S2131RoomId, S2132UserId, S2133SnapshotId) -> begin S2134ProcOpt = 'Tianjiupai.RoomServer.Impl':'where_is_global'(S2131RoomId), case S2134ProcOpt of 'error' -> sesterl_internal_prim:'return'(ok); {'ok', S2135Proc} -> 'Tianjiupai.RoomServer.Impl':'cast'(S2135Proc, {'ack', S2132UserId, S2133SnapshotId}) end end.
'require_next_inning'(S2137RoomId, S2138UserId, S2139SnapshotId) -> begin S2140ProcOpt = 'Tianjiupai.RoomServer.Impl':'where_is_global'(S2137RoomId), case S2140ProcOpt of 'error' -> sesterl_internal_prim:'return'(ok); {'ok', S2141Proc} -> 'Tianjiupai.RoomServer.Impl':'cast'(S2141Proc, {'require_next_inning', S2138UserId, S2139SnapshotId}) end end.
'set_connection'(S2143RoomId, S2144UserId, S2145WsProc) -> begin S2146ProcOpt = 'Tianjiupai.RoomServer.Impl':'where_is_global'(S2143RoomId), case S2146ProcOpt of 'error' -> sesterl_internal_prim:'return'(ok); {'ok', S2147Proc} -> 'Tianjiupai.RoomServer.Impl':'cast'(S2147Proc, {'set_connection', S2144UserId, S2145WsProc}) end end.
