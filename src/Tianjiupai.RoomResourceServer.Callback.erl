-module('Tianjiupai.RoomResourceServer.Callback').
-export(['init'/1, 'user_server_create_room'/3, 'handle_call'/3, 'handle_cast'/2, 'handle_down'/4, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S2196State = #{num_rooms => 0}, 'SesterlStdlib.GenServer':'init_ok'(S2196State) end.
      user_server_create_room(UserId, RoomId, RoomName) ->
        'Tianjiupai.UserServer':create_room(UserId, RoomId, RoomName).
    
'handle_call'(S2199Req, _, S2200State) -> case S2199Req of {'add_room', S2201UserId, S2202RoomId, S2203RoomName} -> begin S2204NumRooms = maps:get(num_rooms, S2200State), case (S2204NumRooms >= 'Tianjiupai.Constants':'maximum_num_rooms'()) of true -> 'SesterlStdlib.GenServer':'reply'({'room_added', {'error', 'SesterlStdlib.RawValue':'forget'(<<"capacity exceeded"/utf8>>)}}, S2200State); false -> begin S2205Res = 'Tianjiupai.RoomResourceServer.Callback':'user_server_create_room'(S2201UserId, S2202RoomId, S2203RoomName), case S2205Res of {'ok', S2206Proc} -> begin S2207Mref = 'SesterlStdlib.MonitorRef':'monitor'('Tianjiupai.RoomServer':'as_pid'(S2206Proc)), begin _ = begin S3312 = 'Tianjiupai.Logger':'info'({"increment num_rooms ~p --> ~p (proc: ~p, mref: ~p)", 4}, {S2204NumRooms, (S2204NumRooms + 1), S2206Proc, S2207Mref}), S3312(<<"RoomResourceServer.sest">>, 70) end, 'SesterlStdlib.GenServer':'reply'({'room_added', {'ok', S2206Proc}}, #{num_rooms => (S2204NumRooms + 1)}) end end; {'error', S2208Err} -> 'SesterlStdlib.GenServer':'reply'({'room_added', {'error', S2208Err}}, S2200State) end end end end; 'get_num_rooms' -> 'SesterlStdlib.GenServer':'reply'({'num_rooms_got', maps:get(num_rooms, S2200State)}, S2200State) end.
'handle_cast'(S2210Msg, S2211State) -> begin _ = begin S3314 = 'Tianjiupai.Logger':'warning'({"unexpected cast (message: ~p, state: ~p)", 2}, {S2210Msg, S2211State}), S3314(<<"RoomResourceServer.sest">>, 84) end, 'SesterlStdlib.GenServer':'no_reply'(S2211State) end.
'handle_down'(S2213Mref, S2214Pid, S2215Reason, S2216State) -> begin S2217NumRooms = maps:get(num_rooms, S2216State), begin _ = begin S3316 = 'Tianjiupai.Logger':'info'({"decrement num_rooms ~p --> ~p (pid: ~p, mref: ~p, reason: ~p)", 5}, {S2217NumRooms, (S2217NumRooms - 1), S2214Pid, S2213Mref, S2215Reason}), S3316(<<"RoomResourceServer.sest">>, 90) end, 'SesterlStdlib.GenServer':'no_reply'(#{num_rooms => (S2217NumRooms - 1)}) end end.
'handle_timeout'(S2219State) -> 'SesterlStdlib.GenServer':'no_reply'(S2219State).
'handle_info'(S2221Info, S2222State) -> begin _ = begin S3319 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S2221Info, S2222State}), S3319(<<"RoomResourceServer.sest">>, 100) end, 'SesterlStdlib.GenServer':'no_reply'(S2222State) end.
'terminate'(S2224Reason, S2225State) -> begin _ = begin S3321 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S2224Reason, S2225State}), S3321(<<"RoomResourceServer.sest">>, 104) end, sesterl_internal_prim:'return'(ok) end.
