-module('Tianjiupai.RoomResourceServer.Callback').
-export(['init'/1, 'user_server_create_room'/3, 'handle_call'/3, 'handle_cast'/2, 'handle_down'/4, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S2204State = #{num_rooms => 0}, 'SesterlStdlib.GenServer':'init_ok'(S2204State) end.
      user_server_create_room(UserId, RoomId, RoomName) ->
        'Tianjiupai.UserServer':create_room(UserId, RoomId, RoomName).
    
'handle_call'(S2207Req, _, S2208State) -> case S2207Req of {'add_room', S2209UserId, S2210RoomId, S2211RoomName} -> begin S2212NumRooms = maps:get(num_rooms, S2208State), case (S2212NumRooms >= 'Tianjiupai.Constants':'maximum_num_rooms'()) of true -> 'SesterlStdlib.GenServer':'reply'({'room_added', {'error', 'SesterlStdlib.RawValue':'forget'(<<"capacity exceeded"/utf8>>)}}, S2208State); false -> begin S2213Res = 'Tianjiupai.RoomResourceServer.Callback':'user_server_create_room'(S2209UserId, S2210RoomId, S2211RoomName), case S2213Res of {'ok', S2214Proc} -> begin S2215Mref = 'SesterlStdlib.MonitorRef':'monitor'('Tianjiupai.RoomServer':'as_pid'(S2214Proc)), begin _ = begin S3321 = 'Tianjiupai.Logger':'info'({"increment num_rooms ~p --> ~p (proc: ~p, mref: ~p)", 4}, {S2212NumRooms, (S2212NumRooms + 1), S2214Proc, S2215Mref}), S3321(<<"RoomResourceServer.sest">>, 70) end, 'SesterlStdlib.GenServer':'reply'({'room_added', {'ok', S2214Proc}}, #{num_rooms => (S2212NumRooms + 1)}) end end; {'error', S2216Err} -> 'SesterlStdlib.GenServer':'reply'({'room_added', {'error', S2216Err}}, S2208State) end end end end; 'get_num_rooms' -> 'SesterlStdlib.GenServer':'reply'({'num_rooms_got', maps:get(num_rooms, S2208State)}, S2208State) end.
'handle_cast'(S2218Msg, S2219State) -> begin _ = begin S3323 = 'Tianjiupai.Logger':'warning'({"unexpected cast (message: ~p, state: ~p)", 2}, {S2218Msg, S2219State}), S3323(<<"RoomResourceServer.sest">>, 84) end, 'SesterlStdlib.GenServer':'no_reply'(S2219State) end.
'handle_down'(S2221Mref, S2222Pid, S2223Reason, S2224State) -> begin S2225NumRooms = maps:get(num_rooms, S2224State), begin _ = begin S3325 = 'Tianjiupai.Logger':'info'({"decrement num_rooms ~p --> ~p (pid: ~p, mref: ~p, reason: ~p)", 5}, {S2225NumRooms, (S2225NumRooms - 1), S2222Pid, S2221Mref, S2223Reason}), S3325(<<"RoomResourceServer.sest">>, 90) end, 'SesterlStdlib.GenServer':'no_reply'(#{num_rooms => (S2225NumRooms - 1)}) end end.
'handle_timeout'(S2227State) -> 'SesterlStdlib.GenServer':'no_reply'(S2227State).
'handle_info'(S2229Info, S2230State) -> begin _ = begin S3328 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S2229Info, S2230State}), S3328(<<"RoomResourceServer.sest">>, 100) end, 'SesterlStdlib.GenServer':'no_reply'(S2230State) end.
'terminate'(S2232Reason, S2233State) -> begin _ = begin S3330 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S2232Reason, S2233State}), S3330(<<"RoomResourceServer.sest">>, 104) end, sesterl_internal_prim:'return'(ok) end.
