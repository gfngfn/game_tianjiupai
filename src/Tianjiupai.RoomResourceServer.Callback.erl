-module('Tianjiupai.RoomResourceServer.Callback').
-export(['init'/1, 'user_server_create_room'/3, 'handle_call'/3, 'handle_cast'/2, 'handle_down'/4, 'handle_timeout'/1, 'handle_info'/2, 'terminate'/2]).
'init'(ok) -> begin S2189State = #{num_rooms => 0}, 'SesterlStdlib.GenServer':'init_ok'(S2189State) end.
      user_server_create_room(UserId, RoomId, RoomName) ->
        'Tianjiupai.UserServer':create_room(UserId, RoomId, RoomName).
    
'handle_call'(S2192Req, _, S2193State) -> begin {'add_room', S2194UserId, S2195RoomId, S2196RoomName} = S2192Req, begin S2197NumRooms = maps:get(num_rooms, S2193State), case (S2197NumRooms >= 'Tianjiupai.Constants':'maximum_num_rooms'()) of true -> 'SesterlStdlib.GenServer':'reply'({'room_added', {'error', 'SesterlStdlib.RawValue':'forget'(<<"capacity exceeded"/utf8>>)}}, S2193State); false -> begin S2198Res = 'Tianjiupai.RoomResourceServer.Callback':'user_server_create_room'(S2194UserId, S2195RoomId, S2196RoomName), case S2198Res of {'ok', S2199Proc} -> begin S2200Mref = 'SesterlStdlib.MonitorRef':'monitor'('Tianjiupai.RoomServer':'as_pid'(S2199Proc)), begin _ = begin S3208 = 'Tianjiupai.Logger':'info'({"increment num_rooms ~p --> ~p (proc: ~p, mref: ~p)", 4}, {S2197NumRooms, (S2197NumRooms + 1), S2199Proc, S2200Mref}), S3208(<<"RoomResourceServer.sest">>, 67) end, 'SesterlStdlib.GenServer':'reply'({'room_added', {'ok', S2199Proc}}, #{num_rooms => (S2197NumRooms + 1)}) end end; {'error', S2201Err} -> 'SesterlStdlib.GenServer':'reply'({'room_added', {'error', S2201Err}}, S2193State) end end end end end.
'handle_cast'(S2203Msg, S2204State) -> begin _ = begin S3210 = 'Tianjiupai.Logger':'warning'({"unexpected cast (message: ~p, state: ~p)", 2}, {S2203Msg, S2204State}), S3210(<<"RoomResourceServer.sest">>, 78) end, 'SesterlStdlib.GenServer':'no_reply'(S2204State) end.
'handle_down'(S2206Mref, S2207Pid, S2208Reason, S2209State) -> begin S2210NumRooms = maps:get(num_rooms, S2209State), begin _ = begin S3212 = 'Tianjiupai.Logger':'info'({"decrement num_rooms ~p --> ~p (pid: ~p, mref: ~p, reason: ~p)", 5}, {S2210NumRooms, (S2210NumRooms - 1), S2207Pid, S2206Mref, S2208Reason}), S3212(<<"RoomResourceServer.sest">>, 84) end, 'SesterlStdlib.GenServer':'no_reply'(#{num_rooms => (S2210NumRooms - 1)}) end end.
'handle_timeout'(S2212State) -> 'SesterlStdlib.GenServer':'no_reply'(S2212State).
'handle_info'(S2214Info, S2215State) -> begin _ = begin S3215 = 'Tianjiupai.Logger':'warning'({"unexpected info (info: ~p, state: ~p)", 2}, {S2214Info, S2215State}), S3215(<<"RoomResourceServer.sest">>, 94) end, 'SesterlStdlib.GenServer':'no_reply'(S2215State) end.
'terminate'(S2217Reason, S2218State) -> begin _ = begin S3217 = 'Tianjiupai.Logger':'warning'({"terminate (reason: ~p, state: ~p)", 2}, {S2217Reason, S2218State}), S3217(<<"RoomResourceServer.sest">>, 98) end, sesterl_internal_prim:'return'(ok) end.
