-module('Tianjiupai.Models').
-export(['decode_big_with_design'/0, 'encode_big_with_design'/0, 'decode_bool'/0, 'encode_bool'/0, 'decode_card'/0, 'encode_card'/0, 'decode_card_big'/0, 'encode_card_big'/0, 'decode_card_wen'/0, 'encode_card_wen'/0, 'decode_card_wu'/0, 'encode_card_wu'/0, 'decode_card_wu_number'/0, 'encode_card_wu_number'/0, 'decode_change_per_trick_end'/0, 'encode_change_per_trick_end'/0, 'decode_change_reason'/0, 'encode_change_reason'/0, 'decode_closed_or'/1, 'encode_closed_or'/1, 'decode_command'/0, 'encode_command'/0, 'decode_comment'/0, 'encode_comment'/0, 'decode_connection'/0, 'encode_connection'/0, 'decode_create_room_request'/0, 'encode_create_room_request'/0, 'decode_create_room_response'/0, 'encode_create_room_response'/0, 'decode_create_user_request'/0, 'encode_create_user_request'/0, 'decode_create_user_response'/0, 'encode_create_user_response'/0, 'decode_design'/0, 'encode_design'/0, 'decode_enter_room_request'/0, 'encode_enter_room_request'/0, 'decode_enter_room_response'/0, 'encode_enter_room_response'/0, 'decode_exit_room_request'/0, 'encode_exit_room_request'/0, 'decode_exit_room_response'/0, 'encode_exit_room_response'/0, 'decode_exposed'/1, 'encode_exposed'/1, 'decode_flag_user'/0, 'encode_flag_user'/0, 'decode_flag_user_option'/0, 'encode_flag_user_option'/0, 'decode_game_index'/0, 'encode_game_index'/0, 'decode_game_meta'/0, 'encode_game_meta'/0, 'decode_game_player'/0, 'encode_game_player'/0, 'decode_get_all_rooms_response'/0, 'encode_get_all_rooms_response'/0, 'decode_get_room_response'/0, 'encode_get_room_response'/0, 'decode_int'/0, 'encode_int'/0, 'decode_last'/0, 'encode_last'/0, 'decode_list'/1, 'encode_list'/1, 'decode_log'/0, 'encode_log'/0, 'decode_midway_enter'/0, 'encode_midway_enter'/0, 'decode_notification'/0, 'encode_notification'/0, 'decode_observable_game_state'/0, 'encode_observable_game_state'/0, 'decode_observable_inning'/0, 'encode_observable_inning'/0, 'decode_observable_inning_state'/0, 'encode_observable_inning_state'/0, 'decode_observable_last'/0, 'encode_observable_last'/0, 'decode_observable_room_state'/0, 'encode_observable_room_state'/0, 'decode_option'/1, 'encode_option'/1, 'decode_per_seat'/1, 'encode_per_seat'/1, 'decode_personal_state'/0, 'encode_personal_state'/0, 'decode_room'/0, 'encode_room'/0, 'decode_room_id'/0, 'encode_room_id'/0, 'decode_room_name'/0, 'encode_room_name'/0, 'decode_room_request'/0, 'encode_room_request'/0, 'decode_room_summary'/0, 'encode_room_summary'/0, 'decode_seat'/0, 'encode_seat'/0, 'decode_snapshot_id'/0, 'encode_snapshot_id'/0, 'decode_special_inning_end'/0, 'encode_special_inning_end'/0, 'decode_special_trick_end'/0, 'encode_special_trick_end'/0, 'decode_string'/0, 'encode_string'/0, 'decode_submission'/0, 'encode_submission'/0, 'decode_submit_cards_request'/0, 'encode_submit_cards_request'/0, 'decode_submit_cards_response'/0, 'encode_submit_cards_response'/0, 'decode_table'/0, 'encode_table'/0, 'decode_user'/0, 'encode_user'/0, 'decode_user_id'/0, 'encode_user_id'/0, 'decode_user_name'/0, 'encode_user_name'/0, 'decode_wenzun_element'/0, 'encode_wenzun_element'/0, 'decode_wuzun_element'/0, 'encode_wuzun_element'/0]).
'decode_big_with_design'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"design"/utf8>>, 'Tianjiupai.Models':'decode_design'()), fun(S571LocalKeyDesign) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"main"/utf8>>, 'Tianjiupai.Models':'decode_card_big'()), fun(S572LocalKeyMain) -> 'SesterlJson.Decode':'pure'(#{design => S571LocalKeyDesign, main => S572LocalKeyMain}) end) end).
'encode_big_with_design'() -> fun(S573LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"design"/utf8>>, begin S574 = 'Tianjiupai.Models':'encode_design'(), S574(maps:get(design, S573LocalParamTemp)) end} | [{<<"main"/utf8>>, begin S575 = 'Tianjiupai.Models':'encode_card_big'(), S575(maps:get(main, S573LocalParamTemp)) end} | []]]) end.
'decode_bool'() -> 'SesterlJson.Decode':'bool'().
'encode_bool'() -> fun(S576V) -> 'SesterlJson.Encode':'bool'(S576V) end.
'decode_card'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S577Temp) -> case S577Temp of <<"Wen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S578LocalParamTemp) -> {'wen', S578LocalParamTemp} end, 'Tianjiupai.Models':'decode_card_wen'())); <<"Wu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S579LocalParamTemp) -> {'wu', S579LocalParamTemp} end, 'Tianjiupai.Models':'decode_card_wu'())); S580Other -> 'SesterlJson.Decode':'fail'(S580Other) end end).
'encode_card'() -> fun(S581Temp) -> case S581Temp of {'wen', S582Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S583 = 'Tianjiupai.Models':'encode_card_wen'(), S583(S582Sub) end} | []]]); {'wu', S584Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S585 = 'Tianjiupai.Models':'encode_card_wu'(), S585(S584Sub) end} | []]]) end end.
'decode_card_big'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S586Temp) -> case S586Temp of <<"BigA"/utf8>> -> 'SesterlJson.Decode':'pure'('big_a'); <<"BigB"/utf8>> -> 'SesterlJson.Decode':'pure'('big_b'); <<"BigC"/utf8>> -> 'SesterlJson.Decode':'pure'('big_c'); <<"BigD"/utf8>> -> 'SesterlJson.Decode':'pure'('big_d'); S587Other -> 'SesterlJson.Decode':'fail'(S587Other) end end).
'encode_card_big'() -> fun(S588Temp) -> case S588Temp of 'big_a' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigA"/utf8>>)} | []]); 'big_b' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigB"/utf8>>)} | []]); 'big_c' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigC"/utf8>>)} | []]); 'big_d' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigD"/utf8>>)} | []]) end end.
'decode_card_wen'() -> 'Tianjiupai.Models':'decode_int'().
'encode_card_wen'() -> 'Tianjiupai.Models':'encode_int'().
'decode_card_wu'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"design"/utf8>>, 'Tianjiupai.Models':'decode_design'()), fun(S589LocalKeyDesign) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"number"/utf8>>, 'Tianjiupai.Models':'decode_card_wu_number'()), fun(S590LocalKeyNumber) -> 'SesterlJson.Decode':'pure'(#{design => S589LocalKeyDesign, number => S590LocalKeyNumber}) end) end).
'encode_card_wu'() -> fun(S591LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"design"/utf8>>, begin S592 = 'Tianjiupai.Models':'encode_design'(), S592(maps:get(design, S591LocalParamTemp)) end} | [{<<"number"/utf8>>, begin S593 = 'Tianjiupai.Models':'encode_card_wu_number'(), S593(maps:get(number, S591LocalParamTemp)) end} | []]]) end.
'decode_card_wu_number'() -> 'Tianjiupai.Models':'decode_int'().
'encode_card_wu_number'() -> 'Tianjiupai.Models':'encode_int'().
'decode_change_per_trick_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"change_reason"/utf8>>, 'Tianjiupai.Models':'decode_change_reason'()), fun(S594LocalKeyChangeReason) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"diffs"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_int'())), fun(S595LocalKeyDiffs) -> 'SesterlJson.Decode':'pure'(#{change_reason => S594LocalKeyChangeReason, diffs => S595LocalKeyDiffs}) end) end).
'encode_change_per_trick_end'() -> fun(S596LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"change_reason"/utf8>>, begin S597 = 'Tianjiupai.Models':'encode_change_reason'(), S597(maps:get(change_reason, S596LocalParamTemp)) end} | [{<<"diffs"/utf8>>, begin S598 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_int'()), S598(maps:get(diffs, S596LocalParamTemp)) end} | []]]) end.
'decode_change_reason'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S599Temp) -> case S599Temp of <<"NormalInningEnd"/utf8>> -> 'SesterlJson.Decode':'pure'('normal_inning_end'); <<"SpecialInningEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S600LocalParamTemp) -> {'special_inning_end', S600LocalParamTemp} end, 'Tianjiupai.Models':'decode_special_inning_end'())); <<"SpecialTrickEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S601LocalParamTemp) -> {'special_trick_end', S601LocalParamTemp} end, 'Tianjiupai.Models':'decode_special_trick_end'())); S602Other -> 'SesterlJson.Decode':'fail'(S602Other) end end).
'encode_change_reason'() -> fun(S603Temp) -> case S603Temp of 'normal_inning_end' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NormalInningEnd"/utf8>>)} | []]); {'special_inning_end', S604Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SpecialInningEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S605 = 'Tianjiupai.Models':'encode_special_inning_end'(), S605(S604Sub) end} | []]]); {'special_trick_end', S606Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SpecialTrickEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S607 = 'Tianjiupai.Models':'encode_special_trick_end'(), S607(S606Sub) end} | []]]) end end.
'decode_closed_or'(S608LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S609Temp) -> case S609Temp of <<"Closed"/utf8>> -> 'SesterlJson.Decode':'pure'('closed'); <<"Open"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S610LocalParamTemp) -> {'open', S610LocalParamTemp} end, S608LocalParamA)); S611Other -> 'SesterlJson.Decode':'fail'(S611Other) end end).
'encode_closed_or'(S612LocalParamA) -> fun(S613Temp) -> case S613Temp of 'closed' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Closed"/utf8>>)} | []]); {'open', S614Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Open"/utf8>>)} | [{<<"_arg"/utf8>>, S612LocalParamA(S614Sub)} | []]]) end end.
'decode_command'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S615Temp) -> case S615Temp of <<"CommandAck"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S616LocalParamTemp) -> {'command_ack', S616LocalParamTemp} end, 'Tianjiupai.Models':'decode_snapshot_id'())); <<"CommandComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S617LocalParamTemp) -> {'command_comment', S617LocalParamTemp} end, 'Tianjiupai.Models':'decode_string'())); <<"CommandHeartbeat"/utf8>> -> 'SesterlJson.Decode':'pure'('command_heartbeat'); <<"CommandNextInning"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S618LocalParamTemp) -> {'command_next_inning', S618LocalParamTemp} end, 'Tianjiupai.Models':'decode_snapshot_id'())); S619Other -> 'SesterlJson.Decode':'fail'(S619Other) end end).
'encode_command'() -> fun(S620Temp) -> case S620Temp of {'command_ack', S621Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandAck"/utf8>>)} | [{<<"_arg"/utf8>>, begin S622 = 'Tianjiupai.Models':'encode_snapshot_id'(), S622(S621Sub) end} | []]]); {'command_comment', S623Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S624 = 'Tianjiupai.Models':'encode_string'(), S624(S623Sub) end} | []]]); 'command_heartbeat' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandHeartbeat"/utf8>>)} | []]); {'command_next_inning', S625Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandNextInning"/utf8>>)} | [{<<"_arg"/utf8>>, begin S626 = 'Tianjiupai.Models':'encode_snapshot_id'(), S626(S625Sub) end} | []]]) end end.
'decode_comment'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"from"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S627LocalKeyFrom) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"text"/utf8>>, 'Tianjiupai.Models':'decode_string'()), fun(S628LocalKeyText) -> 'SesterlJson.Decode':'pure'(#{from => S627LocalKeyFrom, text => S628LocalKeyText}) end) end).
'encode_comment'() -> fun(S629LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"from"/utf8>>, begin S630 = 'Tianjiupai.Models':'encode_user'(), S630(maps:get(from, S629LocalParamTemp)) end} | [{<<"text"/utf8>>, begin S631 = 'Tianjiupai.Models':'encode_string'(), S631(maps:get(text, S629LocalParamTemp)) end} | []]]) end.
'decode_connection'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_connected"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S632LocalKeyIsConnected) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S633LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{is_connected => S632LocalKeyIsConnected, user => S633LocalKeyUser}) end) end).
'encode_connection'() -> fun(S634LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_connected"/utf8>>, begin S635 = 'Tianjiupai.Models':'encode_bool'(), S635(maps:get(is_connected, S634LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S636 = 'Tianjiupai.Models':'encode_user'(), S636(maps:get(user, S634LocalParamTemp)) end} | []]]) end.
'decode_create_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_name"/utf8>>, 'Tianjiupai.Models':'decode_room_name'()), fun(S637LocalKeyRoomName) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S638LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{room_name => S637LocalKeyRoomName, user_id => S638LocalKeyUserId}) end) end).
'encode_create_room_request'() -> fun(S639LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_name"/utf8>>, begin S640 = 'Tianjiupai.Models':'encode_room_name'(), S640(maps:get(room_name, S639LocalParamTemp)) end} | [{<<"user_id"/utf8>>, begin S641 = 'Tianjiupai.Models':'encode_user_id'(), S641(maps:get(user_id, S639LocalParamTemp)) end} | []]]) end.
'decode_create_room_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_id"/utf8>>, 'Tianjiupai.Models':'decode_room_id'()), fun(S642LocalKeyRoomId) -> 'SesterlJson.Decode':'pure'(#{room_id => S642LocalKeyRoomId}) end).
'encode_create_room_response'() -> fun(S643LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_id"/utf8>>, begin S644 = 'Tianjiupai.Models':'encode_room_id'(), S644(maps:get(room_id, S643LocalParamTemp)) end} | []]) end.
'decode_create_user_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S645LocalKeyUserName) -> 'SesterlJson.Decode':'pure'(#{user_name => S645LocalKeyUserName}) end).
'encode_create_user_request'() -> fun(S646LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_name"/utf8>>, begin S647 = 'Tianjiupai.Models':'encode_user_name'(), S647(maps:get(user_name, S646LocalParamTemp)) end} | []]) end.
'decode_create_user_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S648LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S648LocalKeyUserId}) end).
'encode_create_user_response'() -> fun(S649LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S650 = 'Tianjiupai.Models':'encode_user_id'(), S650(maps:get(user_id, S649LocalParamTemp)) end} | []]) end.
'decode_design'() -> 'Tianjiupai.Models':'decode_bool'().
'encode_design'() -> 'Tianjiupai.Models':'encode_bool'().
'decode_enter_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S651LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S651LocalKeyUserId}) end).
'encode_enter_room_request'() -> fun(S652LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S653 = 'Tianjiupai.Models':'encode_user_id'(), S653(maps:get(user_id, S652LocalParamTemp)) end} | []]) end.
'decode_enter_room_response'() -> 'Tianjiupai.Models':'decode_personal_state'().
'encode_enter_room_response'() -> 'Tianjiupai.Models':'encode_personal_state'().
'decode_exit_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S654LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S654LocalKeyUserId}) end).
'encode_exit_room_request'() -> fun(S655LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S656 = 'Tianjiupai.Models':'encode_user_id'(), S656(maps:get(user_id, S655LocalParamTemp)) end} | []]) end.
'decode_exit_room_response'() -> 'SesterlJson.Decode':'pure'(ok).
'encode_exit_room_response'() -> fun(S657LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([]) end.
'decode_exposed'(S658LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"first"/utf8>>, S658LocalParamA), fun(S659LocalKeyFirst) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"subsequent"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_closed_or'(S658LocalParamA))), fun(S660LocalKeySubsequent) -> 'SesterlJson.Decode':'pure'(#{first => S659LocalKeyFirst, subsequent => S660LocalKeySubsequent}) end) end).
'encode_exposed'(S661LocalParamA) -> fun(S662LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"first"/utf8>>, S661LocalParamA(maps:get(first, S662LocalParamTemp))} | [{<<"subsequent"/utf8>>, begin S663 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_closed_or'(S661LocalParamA)), S663(maps:get(subsequent, S662LocalParamTemp)) end} | []]]) end.
'decode_flag_user'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"belongs_to"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_room_id'())), fun(S664LocalKeyBelongsTo) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S665LocalKeyId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S666LocalKeyName) -> 'SesterlJson.Decode':'pure'(#{belongs_to => S664LocalKeyBelongsTo, id => S665LocalKeyId, name => S666LocalKeyName}) end) end) end).
'encode_flag_user'() -> fun(S667LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"belongs_to"/utf8>>, begin S668 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_room_id'()), S668(maps:get(belongs_to, S667LocalParamTemp)) end} | [{<<"id"/utf8>>, begin S669 = 'Tianjiupai.Models':'encode_user_id'(), S669(maps:get(id, S667LocalParamTemp)) end} | [{<<"name"/utf8>>, begin S670 = 'Tianjiupai.Models':'encode_user_name'(), S670(maps:get(name, S667LocalParamTemp)) end} | []]]]) end.
'decode_flag_user_option'() -> 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_flag_user'()).
'encode_flag_user_option'() -> 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_flag_user'()).
'decode_game_index'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"inning_index"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S671LocalKeyInningIndex) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"num_consecutives"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S672LocalKeyNumConsecutives) -> 'SesterlJson.Decode':'pure'(#{inning_index => S671LocalKeyInningIndex, num_consecutives => S672LocalKeyNumConsecutives}) end) end).
'encode_game_index'() -> fun(S673LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"inning_index"/utf8>>, begin S674 = 'Tianjiupai.Models':'encode_int'(), S674(maps:get(inning_index, S673LocalParamTemp)) end} | [{<<"num_consecutives"/utf8>>, begin S675 = 'Tianjiupai.Models':'encode_int'(), S675(maps:get(num_consecutives, S673LocalParamTemp)) end} | []]]) end.
'decode_game_meta'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"inning_index"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S676LocalKeyInningIndex) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"num_consecutives"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S677LocalKeyNumConsecutives) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"parent_seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S678LocalKeyParentSeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"players"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_game_player'()))), fun(S679LocalKeyPlayers) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"scores"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_int'())), fun(S680LocalKeyScores) -> 'SesterlJson.Decode':'pure'(#{inning_index => S676LocalKeyInningIndex, num_consecutives => S677LocalKeyNumConsecutives, parent_seat => S678LocalKeyParentSeat, players => S679LocalKeyPlayers, scores => S680LocalKeyScores}) end) end) end) end) end).
'encode_game_meta'() -> fun(S681LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"inning_index"/utf8>>, begin S682 = 'Tianjiupai.Models':'encode_int'(), S682(maps:get(inning_index, S681LocalParamTemp)) end} | [{<<"num_consecutives"/utf8>>, begin S683 = 'Tianjiupai.Models':'encode_int'(), S683(maps:get(num_consecutives, S681LocalParamTemp)) end} | [{<<"parent_seat"/utf8>>, begin S684 = 'Tianjiupai.Models':'encode_seat'(), S684(maps:get(parent_seat, S681LocalParamTemp)) end} | [{<<"players"/utf8>>, begin S685 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_game_player'())), S685(maps:get(players, S681LocalParamTemp)) end} | [{<<"scores"/utf8>>, begin S686 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_int'()), S686(maps:get(scores, S681LocalParamTemp)) end} | []]]]]]) end.
'decode_game_player'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_connected"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S687LocalKeyIsConnected) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S688LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{is_connected => S687LocalKeyIsConnected, user => S688LocalKeyUser}) end) end).
'encode_game_player'() -> fun(S689LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_connected"/utf8>>, begin S690 = 'Tianjiupai.Models':'encode_bool'(), S690(maps:get(is_connected, S689LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S691 = 'Tianjiupai.Models':'encode_user'(), S691(maps:get(user, S689LocalParamTemp)) end} | []]]) end.
'decode_get_all_rooms_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"rooms"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_room_summary'())), fun(S692LocalKeyRooms) -> 'SesterlJson.Decode':'pure'(#{rooms => S692LocalKeyRooms}) end).
'encode_get_all_rooms_response'() -> fun(S693LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"rooms"/utf8>>, begin S694 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_room_summary'()), S694(maps:get(rooms, S693LocalParamTemp)) end} | []]) end.
'decode_get_room_response'() -> 'Tianjiupai.Models':'decode_personal_state'().
'encode_get_room_response'() -> 'Tianjiupai.Models':'encode_personal_state'().
'decode_int'() -> 'SesterlJson.Decode':'int'().
'encode_int'() -> fun(S695V) -> 'SesterlJson.Encode':'int'(S695V) end.
'decode_last'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"changes"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_change_per_trick_end'())), fun(S696LocalKeyChanges) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"hand"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S697LocalKeyHand) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S698LocalKeyTable) -> 'SesterlJson.Decode':'pure'(#{changes => S696LocalKeyChanges, hand => S697LocalKeyHand, table => S698LocalKeyTable}) end) end) end).
'encode_last'() -> fun(S699LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"changes"/utf8>>, begin S700 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_change_per_trick_end'()), S700(maps:get(changes, S699LocalParamTemp)) end} | [{<<"hand"/utf8>>, begin S701 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S701(maps:get(hand, S699LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S702 = 'Tianjiupai.Models':'encode_table'(), S702(maps:get(table, S699LocalParamTemp)) end} | []]]]) end.
'decode_list'(S703X) -> 'SesterlJson.Decode':'list'(S703X).
'encode_list'(S704Enc) -> fun(S705V) -> 'SesterlJson.Encode':'list'('SesterlStdlib.List':'map'(S704Enc, S705V)) end.
'decode_log'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S706Temp) -> case S706Temp of <<"LogChanges"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S707LocalParamTemp) -> {'log_changes', S707LocalParamTemp} end, 'Tianjiupai.Models':'decode_change_per_trick_end'())); <<"LogComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S708LocalParamTemp) -> {'log_comment', S708LocalParamTemp} end, 'Tianjiupai.Models':'decode_comment'())); <<"LogConnection"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S709LocalParamTemp) -> {'log_connection', S709LocalParamTemp} end, 'Tianjiupai.Models':'decode_connection'())); <<"LogEntered"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S710LocalParamTemp) -> {'log_entered', S710LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"LogExited"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S711LocalParamTemp) -> {'log_exited', S711LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"LogGameStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S712LocalParamTemp) -> {'log_game_start', S712LocalParamTemp} end, 'Tianjiupai.Models':'decode_game_index'())); S713Other -> 'SesterlJson.Decode':'fail'(S713Other) end end).
'encode_log'() -> fun(S714Temp) -> case S714Temp of {'log_changes', S715Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogChanges"/utf8>>)} | [{<<"_arg"/utf8>>, begin S716 = 'Tianjiupai.Models':'encode_change_per_trick_end'(), S716(S715Sub) end} | []]]); {'log_comment', S717Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S718 = 'Tianjiupai.Models':'encode_comment'(), S718(S717Sub) end} | []]]); {'log_connection', S719Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogConnection"/utf8>>)} | [{<<"_arg"/utf8>>, begin S720 = 'Tianjiupai.Models':'encode_connection'(), S720(S719Sub) end} | []]]); {'log_entered', S721Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogEntered"/utf8>>)} | [{<<"_arg"/utf8>>, begin S722 = 'Tianjiupai.Models':'encode_user'(), S722(S721Sub) end} | []]]); {'log_exited', S723Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogExited"/utf8>>)} | [{<<"_arg"/utf8>>, begin S724 = 'Tianjiupai.Models':'encode_user'(), S724(S723Sub) end} | []]]); {'log_game_start', S725Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogGameStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S726 = 'Tianjiupai.Models':'encode_game_index'(), S726(S725Sub) end} | []]]) end end.
'decode_midway_enter'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S727LocalKeySeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S728LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{seat => S727LocalKeySeat, user => S728LocalKeyUser}) end) end).
'encode_midway_enter'() -> fun(S729LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"seat"/utf8>>, begin S730 = 'Tianjiupai.Models':'encode_seat'(), S730(maps:get(seat, S729LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S731 = 'Tianjiupai.Models':'encode_user'(), S731(maps:get(user, S729LocalParamTemp)) end} | []]]) end.
'decode_notification'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S732Temp) -> case S732Temp of <<"NotifyComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S733LocalParamTemp) -> {'notify_comment', S733LocalParamTemp} end, 'Tianjiupai.Models':'decode_comment'())); <<"NotifyConnection"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S734LocalParamTemp) -> {'notify_connection', S734LocalParamTemp} end, 'Tianjiupai.Models':'decode_connection'())); <<"NotifyEntered"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S735LocalParamTemp) -> {'notify_entered', S735LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"NotifyEnteredMidway"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S736LocalParamTemp) -> {'notify_entered_midway', S736LocalParamTemp} end, 'Tianjiupai.Models':'decode_midway_enter'())); <<"NotifyExited"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S737LocalParamTemp) -> {'notify_exited', S737LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"NotifyGameStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S738LocalParamTemp) -> {'notify_game_start', S738LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_game_state'())); <<"NotifyNextStep"/utf8>> -> 'SesterlJson.Decode':'pure'('notify_next_step'); <<"NotifyRoomClose"/utf8>> -> 'SesterlJson.Decode':'pure'('notify_room_close'); <<"NotifySubmission"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S739LocalParamTemp) -> {'notify_submission', S739LocalParamTemp} end, 'Tianjiupai.Models':'decode_submission'())); S740Other -> 'SesterlJson.Decode':'fail'(S740Other) end end).
'encode_notification'() -> fun(S741Temp) -> case S741Temp of {'notify_comment', S742Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S743 = 'Tianjiupai.Models':'encode_comment'(), S743(S742Sub) end} | []]]); {'notify_connection', S744Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyConnection"/utf8>>)} | [{<<"_arg"/utf8>>, begin S745 = 'Tianjiupai.Models':'encode_connection'(), S745(S744Sub) end} | []]]); {'notify_entered', S746Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyEntered"/utf8>>)} | [{<<"_arg"/utf8>>, begin S747 = 'Tianjiupai.Models':'encode_user'(), S747(S746Sub) end} | []]]); {'notify_entered_midway', S748Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyEnteredMidway"/utf8>>)} | [{<<"_arg"/utf8>>, begin S749 = 'Tianjiupai.Models':'encode_midway_enter'(), S749(S748Sub) end} | []]]); {'notify_exited', S750Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyExited"/utf8>>)} | [{<<"_arg"/utf8>>, begin S751 = 'Tianjiupai.Models':'encode_user'(), S751(S750Sub) end} | []]]); {'notify_game_start', S752Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyGameStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S753 = 'Tianjiupai.Models':'encode_observable_game_state'(), S753(S752Sub) end} | []]]); 'notify_next_step' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyNextStep"/utf8>>)} | []]); 'notify_room_close' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyRoomClose"/utf8>>)} | []]); {'notify_submission', S754Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifySubmission"/utf8>>)} | [{<<"_arg"/utf8>>, begin S755 = 'Tianjiupai.Models':'encode_submission'(), S755(S754Sub) end} | []]]) end end.
'decode_observable_game_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"meta"/utf8>>, 'Tianjiupai.Models':'decode_game_meta'()), fun(S756LocalKeyMeta) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"observable_inning"/utf8>>, 'Tianjiupai.Models':'decode_observable_inning'()), fun(S757LocalKeyObservableInning) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"snapshot_id"/utf8>>, 'Tianjiupai.Models':'decode_snapshot_id'()), fun(S758LocalKeySnapshotId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"synchronizing"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S759LocalKeySynchronizing) -> 'SesterlJson.Decode':'pure'(#{meta => S756LocalKeyMeta, observable_inning => S757LocalKeyObservableInning, snapshot_id => S758LocalKeySnapshotId, synchronizing => S759LocalKeySynchronizing}) end) end) end) end).
'encode_observable_game_state'() -> fun(S760LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"meta"/utf8>>, begin S761 = 'Tianjiupai.Models':'encode_game_meta'(), S761(maps:get(meta, S760LocalParamTemp)) end} | [{<<"observable_inning"/utf8>>, begin S762 = 'Tianjiupai.Models':'encode_observable_inning'(), S762(maps:get(observable_inning, S760LocalParamTemp)) end} | [{<<"snapshot_id"/utf8>>, begin S763 = 'Tianjiupai.Models':'encode_snapshot_id'(), S763(maps:get(snapshot_id, S760LocalParamTemp)) end} | [{<<"synchronizing"/utf8>>, begin S764 = 'Tianjiupai.Models':'encode_bool'(), S764(maps:get(synchronizing, S760LocalParamTemp)) end} | []]]]]) end.
'decode_observable_inning'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S765Temp) -> case S765Temp of <<"ObservableDuringInning"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S766LocalParamTemp) -> {'observable_during_inning', S766LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_inning_state'())); <<"ObservableInningEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S767LocalParamTemp) -> {'observable_inning_end', S767LocalParamTemp} end, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())))); S768Other -> 'SesterlJson.Decode':'fail'(S768Other) end end).
'encode_observable_inning'() -> fun(S769Temp) -> case S769Temp of {'observable_during_inning', S770Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"ObservableDuringInning"/utf8>>)} | [{<<"_arg"/utf8>>, begin S771 = 'Tianjiupai.Models':'encode_observable_inning_state'(), S771(S770Sub) end} | []]]); {'observable_inning_end', S772Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"ObservableInningEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S773 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'())), S773(S772Sub) end} | []]]) end end.
'decode_observable_inning_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"gains"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'()))), fun(S774LocalKeyGains) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"starts_at"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S775LocalKeyStartsAt) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S776LocalKeyTable) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"your_hand"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S777LocalKeyYourHand) -> 'SesterlJson.Decode':'pure'(#{gains => S774LocalKeyGains, starts_at => S775LocalKeyStartsAt, table => S776LocalKeyTable, your_hand => S777LocalKeyYourHand}) end) end) end) end).
'encode_observable_inning_state'() -> fun(S778LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"gains"/utf8>>, begin S779 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'())), S779(maps:get(gains, S778LocalParamTemp)) end} | [{<<"starts_at"/utf8>>, begin S780 = 'Tianjiupai.Models':'encode_seat'(), S780(maps:get(starts_at, S778LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S781 = 'Tianjiupai.Models':'encode_table'(), S781(maps:get(table, S778LocalParamTemp)) end} | [{<<"your_hand"/utf8>>, begin S782 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S782(maps:get(your_hand, S778LocalParamTemp)) end} | []]]]]) end.
'decode_observable_last'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"changes"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_change_per_trick_end'())), fun(S783LocalKeyChanges) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S784LocalKeyTable) -> 'SesterlJson.Decode':'pure'(#{changes => S783LocalKeyChanges, table => S784LocalKeyTable}) end) end).
'encode_observable_last'() -> fun(S785LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"changes"/utf8>>, begin S786 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_change_per_trick_end'()), S786(maps:get(changes, S785LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S787 = 'Tianjiupai.Models':'encode_table'(), S787(maps:get(table, S785LocalParamTemp)) end} | []]]) end.
'decode_observable_room_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S788Temp) -> case S788Temp of <<"PlayingGame"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S789LocalParamTemp) -> {'playing_game', S789LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_game_state'())); <<"WaitingStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S790LocalParamTemp) -> {'waiting_start', S790LocalParamTemp} end, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_user'()))); S791Other -> 'SesterlJson.Decode':'fail'(S791Other) end end).
'encode_observable_room_state'() -> fun(S792Temp) -> case S792Temp of {'playing_game', S793Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"PlayingGame"/utf8>>)} | [{<<"_arg"/utf8>>, begin S794 = 'Tianjiupai.Models':'encode_observable_game_state'(), S794(S793Sub) end} | []]]); {'waiting_start', S795Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WaitingStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S796 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_user'()), S796(S795Sub) end} | []]]) end end.
'decode_option'(S797X) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S798Temp) -> case S798Temp of <<"None"/utf8>> -> 'SesterlJson.Decode':'pure'('error'); <<"Some"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S799Temp) -> {'ok', S799Temp} end, S797X)); S800Other -> 'SesterlJson.Decode':'fail'(S800Other) end end).
'encode_option'(S801Enc) -> fun(S802V) -> case S802V of 'error' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"None"/utf8>>)} | []]); {'ok', S803Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Some"/utf8>>)} | [{<<"_arg"/utf8>>, S801Enc(S803Sub)} | []]]) end end.
'decode_per_seat'(S804LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"east"/utf8>>, S804LocalParamA), fun(S805LocalKeyEast) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"north"/utf8>>, S804LocalParamA), fun(S806LocalKeyNorth) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"south"/utf8>>, S804LocalParamA), fun(S807LocalKeySouth) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"west"/utf8>>, S804LocalParamA), fun(S808LocalKeyWest) -> 'SesterlJson.Decode':'pure'(#{east => S805LocalKeyEast, north => S806LocalKeyNorth, south => S807LocalKeySouth, west => S808LocalKeyWest}) end) end) end) end).
'encode_per_seat'(S809LocalParamA) -> fun(S810LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"east"/utf8>>, S809LocalParamA(maps:get(east, S810LocalParamTemp))} | [{<<"north"/utf8>>, S809LocalParamA(maps:get(north, S810LocalParamTemp))} | [{<<"south"/utf8>>, S809LocalParamA(maps:get(south, S810LocalParamTemp))} | [{<<"west"/utf8>>, S809LocalParamA(maps:get(west, S810LocalParamTemp))} | []]]]]) end.
'decode_personal_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"game"/utf8>>, 'Tianjiupai.Models':'decode_observable_room_state'()), fun(S811LocalKeyGame) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"logs"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_log'())), fun(S812LocalKeyLogs) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room"/utf8>>, 'Tianjiupai.Models':'decode_room'()), fun(S813LocalKeyRoom) -> 'SesterlJson.Decode':'pure'(#{game => S811LocalKeyGame, logs => S812LocalKeyLogs, room => S813LocalKeyRoom}) end) end) end).
'encode_personal_state'() -> fun(S814LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"game"/utf8>>, begin S815 = 'Tianjiupai.Models':'encode_observable_room_state'(), S815(maps:get(game, S814LocalParamTemp)) end} | [{<<"logs"/utf8>>, begin S816 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_log'()), S816(maps:get(logs, S814LocalParamTemp)) end} | [{<<"room"/utf8>>, begin S817 = 'Tianjiupai.Models':'encode_room'(), S817(maps:get(room, S814LocalParamTemp)) end} | []]]]) end.
'decode_room'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_id"/utf8>>, 'Tianjiupai.Models':'decode_room_id'()), fun(S818LocalKeyRoomId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_name"/utf8>>, 'Tianjiupai.Models':'decode_room_name'()), fun(S819LocalKeyRoomName) -> 'SesterlJson.Decode':'pure'(#{room_id => S818LocalKeyRoomId, room_name => S819LocalKeyRoomName}) end) end).
'encode_room'() -> fun(S820LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_id"/utf8>>, begin S821 = 'Tianjiupai.Models':'encode_room_id'(), S821(maps:get(room_id, S820LocalParamTemp)) end} | [{<<"room_name"/utf8>>, begin S822 = 'Tianjiupai.Models':'encode_room_name'(), S822(maps:get(room_name, S820LocalParamTemp)) end} | []]]) end.
'decode_room_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_room_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_room_name'() -> 'Tianjiupai.Models':'decode_string'().
'encode_room_name'() -> 'Tianjiupai.Models':'encode_string'().
'decode_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S823Temp) -> case S823Temp of <<"RoomRequestToEnterRoom"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S824LocalParamTemp) -> {'room_request_to_enter_room', S824LocalParamTemp} end, 'Tianjiupai.Models':'decode_enter_room_request'())); <<"RoomRequestToExitRoom"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S825LocalParamTemp) -> {'room_request_to_exit_room', S825LocalParamTemp} end, 'Tianjiupai.Models':'decode_enter_room_request'())); <<"RoomRequestToSubmitCards"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S826LocalParamTemp) -> {'room_request_to_submit_cards', S826LocalParamTemp} end, 'Tianjiupai.Models':'decode_submit_cards_request'())); S827Other -> 'SesterlJson.Decode':'fail'(S827Other) end end).
'encode_room_request'() -> fun(S828Temp) -> case S828Temp of {'room_request_to_enter_room', S829Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToEnterRoom"/utf8>>)} | [{<<"_arg"/utf8>>, begin S830 = 'Tianjiupai.Models':'encode_enter_room_request'(), S830(S829Sub) end} | []]]); {'room_request_to_exit_room', S831Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToExitRoom"/utf8>>)} | [{<<"_arg"/utf8>>, begin S832 = 'Tianjiupai.Models':'encode_enter_room_request'(), S832(S831Sub) end} | []]]); {'room_request_to_submit_cards', S833Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToSubmitCards"/utf8>>)} | [{<<"_arg"/utf8>>, begin S834 = 'Tianjiupai.Models':'encode_submit_cards_request'(), S834(S833Sub) end} | []]]) end end.
'decode_room_summary'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_playing"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S835LocalKeyIsPlaying) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"members"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_user'())), fun(S836LocalKeyMembers) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room"/utf8>>, 'Tianjiupai.Models':'decode_room'()), fun(S837LocalKeyRoom) -> 'SesterlJson.Decode':'pure'(#{is_playing => S835LocalKeyIsPlaying, members => S836LocalKeyMembers, room => S837LocalKeyRoom}) end) end) end).
'encode_room_summary'() -> fun(S838LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_playing"/utf8>>, begin S839 = 'Tianjiupai.Models':'encode_bool'(), S839(maps:get(is_playing, S838LocalParamTemp)) end} | [{<<"members"/utf8>>, begin S840 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_user'()), S840(maps:get(members, S838LocalParamTemp)) end} | [{<<"room"/utf8>>, begin S841 = 'Tianjiupai.Models':'encode_room'(), S841(maps:get(room, S838LocalParamTemp)) end} | []]]]) end.
'decode_seat'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S842Temp) -> case S842Temp of <<"SeatA"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_a'); <<"SeatB"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_b'); <<"SeatC"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_c'); <<"SeatD"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_d'); S843Other -> 'SesterlJson.Decode':'fail'(S843Other) end end).
'encode_seat'() -> fun(S844Temp) -> case S844Temp of 'seat_a' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatA"/utf8>>)} | []]); 'seat_b' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatB"/utf8>>)} | []]); 'seat_c' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatC"/utf8>>)} | []]); 'seat_d' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatD"/utf8>>)} | []]) end end.
'decode_snapshot_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_snapshot_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_special_inning_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S845Temp) -> case S845Temp of <<"InningEndWithBazhijie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_bazhijie'); <<"InningEndWithQizhijie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_qizhijie'); <<"InningEndWithSidahe"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_sidahe'); <<"InningEndWithYaojie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_yaojie'); <<"InningEndWithZhizun"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_zhizun'); S846Other -> 'SesterlJson.Decode':'fail'(S846Other) end end).
'encode_special_inning_end'() -> fun(S847Temp) -> case S847Temp of 'inning_end_with_bazhijie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithBazhijie"/utf8>>)} | []]); 'inning_end_with_qizhijie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithQizhijie"/utf8>>)} | []]); 'inning_end_with_sidahe' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithSidahe"/utf8>>)} | []]); 'inning_end_with_yaojie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithYaojie"/utf8>>)} | []]); 'inning_end_with_zhizun' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithZhizun"/utf8>>)} | []]) end end.
'decode_special_trick_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S848Temp) -> case S848Temp of <<"TrickEndWithSidahe"/utf8>> -> 'SesterlJson.Decode':'pure'('trick_end_with_sidahe'); <<"TrickEndWithZhizun"/utf8>> -> 'SesterlJson.Decode':'pure'('trick_end_with_zhizun'); S849Other -> 'SesterlJson.Decode':'fail'(S849Other) end end).
'encode_special_trick_end'() -> fun(S850Temp) -> case S850Temp of 'trick_end_with_sidahe' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TrickEndWithSidahe"/utf8>>)} | []]); 'trick_end_with_zhizun' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TrickEndWithZhizun"/utf8>>)} | []]) end end.
'decode_string'() -> 'SesterlJson.Decode':'string'().
'encode_string'() -> fun(S851V) -> 'SesterlJson.Encode':'string'(S851V) end.
'decode_submission'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"new_state"/utf8>>, 'Tianjiupai.Models':'decode_observable_game_state'()), fun(S852LocalKeyNewState) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S853LocalKeySeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"submitted"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_card'()))), fun(S854LocalKeySubmitted) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"trick_last"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_observable_last'())), fun(S855LocalKeyTrickLast) -> 'SesterlJson.Decode':'pure'(#{new_state => S852LocalKeyNewState, seat => S853LocalKeySeat, submitted => S854LocalKeySubmitted, trick_last => S855LocalKeyTrickLast}) end) end) end) end).
'encode_submission'() -> fun(S856LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"new_state"/utf8>>, begin S857 = 'Tianjiupai.Models':'encode_observable_game_state'(), S857(maps:get(new_state, S856LocalParamTemp)) end} | [{<<"seat"/utf8>>, begin S858 = 'Tianjiupai.Models':'encode_seat'(), S858(maps:get(seat, S856LocalParamTemp)) end} | [{<<"submitted"/utf8>>, begin S859 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_card'())), S859(maps:get(submitted, S856LocalParamTemp)) end} | [{<<"trick_last"/utf8>>, begin S860 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_observable_last'()), S860(maps:get(trick_last, S856LocalParamTemp)) end} | []]]]]) end.
'decode_submit_cards_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"cards"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S861LocalKeyCards) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S862LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{cards => S861LocalKeyCards, user_id => S862LocalKeyUserId}) end) end).
'encode_submit_cards_request'() -> fun(S863LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"cards"/utf8>>, begin S864 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S864(maps:get(cards, S863LocalParamTemp)) end} | [{<<"user_id"/utf8>>, begin S865 = 'Tianjiupai.Models':'encode_user_id'(), S865(maps:get(user_id, S863LocalParamTemp)) end} | []]]) end.
'decode_submit_cards_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"new_state"/utf8>>, 'Tianjiupai.Models':'decode_observable_game_state'()), fun(S866LocalKeyNewState) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"trick_last"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_last'())), fun(S867LocalKeyTrickLast) -> 'SesterlJson.Decode':'pure'(#{new_state => S866LocalKeyNewState, trick_last => S867LocalKeyTrickLast}) end) end).
'encode_submit_cards_response'() -> fun(S868LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"new_state"/utf8>>, begin S869 = 'Tianjiupai.Models':'encode_observable_game_state'(), S869(maps:get(new_state, S868LocalParamTemp)) end} | [{<<"trick_last"/utf8>>, begin S870 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_last'()), S870(maps:get(trick_last, S868LocalParamTemp)) end} | []]]) end.
'decode_table'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S871Temp) -> case S871Temp of <<"DoubleBoth"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S872LocalParamTemp) -> {'double_both', S872LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_big_with_design'()))); <<"DoubleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S873LocalParamTemp) -> {'double_wen', S873LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wen'()))); <<"DoubleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S874LocalParamTemp) -> {'double_wu', S874LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wu_number'()))); <<"Quadruple"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S875LocalParamTemp) -> {'quadruple', S875LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_big'()))); <<"SingleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S876LocalParamTemp) -> {'single_wen', S876LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wen'()))); <<"SingleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S877LocalParamTemp) -> {'single_wu', S877LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wu'()))); <<"Starting"/utf8>> -> 'SesterlJson.Decode':'pure'('starting'); <<"TripleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S878LocalParamTemp) -> {'triple_wen', S878LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_big_with_design'()))); <<"TripleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S879LocalParamTemp) -> {'triple_wu', S879LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_big'()))); <<"Wenzun"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S880LocalParamTemp) -> {'wenzun', S880LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_wenzun_element'()))); <<"Wuzun"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S881LocalParamTemp) -> {'wuzun', S881LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_wuzun_element'()))); S882Other -> 'SesterlJson.Decode':'fail'(S882Other) end end).
'encode_table'() -> fun(S883Temp) -> case S883Temp of {'double_both', S884Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleBoth"/utf8>>)} | [{<<"_arg"/utf8>>, begin S885 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_big_with_design'()), S885(S884Sub) end} | []]]); {'double_wen', S886Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S887 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wen'()), S887(S886Sub) end} | []]]); {'double_wu', S888Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S889 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wu_number'()), S889(S888Sub) end} | []]]); {'quadruple', S890Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Quadruple"/utf8>>)} | [{<<"_arg"/utf8>>, begin S891 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_big'()), S891(S890Sub) end} | []]]); {'single_wen', S892Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SingleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S893 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wen'()), S893(S892Sub) end} | []]]); {'single_wu', S894Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SingleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S895 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wu'()), S895(S894Sub) end} | []]]); 'starting' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Starting"/utf8>>)} | []]); {'triple_wen', S896Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TripleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S897 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_big_with_design'()), S897(S896Sub) end} | []]]); {'triple_wu', S898Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TripleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S899 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_big'()), S899(S898Sub) end} | []]]); {'wenzun', S900Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wenzun"/utf8>>)} | [{<<"_arg"/utf8>>, begin S901 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_wenzun_element'()), S901(S900Sub) end} | []]]); {'wuzun', S902Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wuzun"/utf8>>)} | [{<<"_arg"/utf8>>, begin S903 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_wuzun_element'()), S903(S902Sub) end} | []]]) end end.
'decode_user'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S904LocalKeyUserId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S905LocalKeyUserName) -> 'SesterlJson.Decode':'pure'(#{user_id => S904LocalKeyUserId, user_name => S905LocalKeyUserName}) end) end).
'encode_user'() -> fun(S906LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S907 = 'Tianjiupai.Models':'encode_user_id'(), S907(maps:get(user_id, S906LocalParamTemp)) end} | [{<<"user_name"/utf8>>, begin S908 = 'Tianjiupai.Models':'encode_user_name'(), S908(maps:get(user_name, S906LocalParamTemp)) end} | []]]) end.
'decode_user_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_user_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_user_name'() -> 'Tianjiupai.Models':'decode_string'().
'encode_user_name'() -> 'Tianjiupai.Models':'encode_string'().
'decode_wenzun_element'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S909Temp) -> case S909Temp of <<"WenzunMajor"/utf8>> -> 'SesterlJson.Decode':'pure'('wenzun_major'); <<"WenzunMinor"/utf8>> -> 'SesterlJson.Decode':'pure'('wenzun_minor'); S910Other -> 'SesterlJson.Decode':'fail'(S910Other) end end).
'encode_wenzun_element'() -> fun(S911Temp) -> case S911Temp of 'wenzun_major' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WenzunMajor"/utf8>>)} | []]); 'wenzun_minor' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WenzunMinor"/utf8>>)} | []]) end end.
'decode_wuzun_element'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S912Temp) -> case S912Temp of <<"WuzunUnit"/utf8>> -> 'SesterlJson.Decode':'pure'('wuzun_unit'); S913Other -> 'SesterlJson.Decode':'fail'(S913Other) end end).
'encode_wuzun_element'() -> fun(S914Temp) -> begin 'wuzun_unit' = S914Temp, 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WuzunUnit"/utf8>>)} | []]) end end.
