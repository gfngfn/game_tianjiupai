-module('Tianjiupai.Models').
-export(['decode_big_with_design'/0, 'encode_big_with_design'/0, 'decode_bool'/0, 'encode_bool'/0, 'decode_card'/0, 'encode_card'/0, 'decode_card_big'/0, 'encode_card_big'/0, 'decode_card_wen'/0, 'encode_card_wen'/0, 'decode_card_wu'/0, 'encode_card_wu'/0, 'decode_card_wu_number'/0, 'encode_card_wu_number'/0, 'decode_change_per_trick_end'/0, 'encode_change_per_trick_end'/0, 'decode_change_reason'/0, 'encode_change_reason'/0, 'decode_closed_or'/1, 'encode_closed_or'/1, 'decode_command'/0, 'encode_command'/0, 'decode_comment'/0, 'encode_comment'/0, 'decode_connection'/0, 'encode_connection'/0, 'decode_create_room_request'/0, 'encode_create_room_request'/0, 'decode_create_room_response'/0, 'encode_create_room_response'/0, 'decode_create_user_request'/0, 'encode_create_user_request'/0, 'decode_create_user_response'/0, 'encode_create_user_response'/0, 'decode_design'/0, 'encode_design'/0, 'decode_enter_room_request'/0, 'encode_enter_room_request'/0, 'decode_enter_room_response'/0, 'encode_enter_room_response'/0, 'decode_exit_room_request'/0, 'encode_exit_room_request'/0, 'decode_exit_room_response'/0, 'encode_exit_room_response'/0, 'decode_exposed'/1, 'encode_exposed'/1, 'decode_flag_user'/0, 'encode_flag_user'/0, 'decode_flag_user_option'/0, 'encode_flag_user_option'/0, 'decode_game_index'/0, 'encode_game_index'/0, 'decode_game_meta'/0, 'encode_game_meta'/0, 'decode_game_player'/0, 'encode_game_player'/0, 'decode_get_all_rooms_response'/0, 'encode_get_all_rooms_response'/0, 'decode_get_room_response'/0, 'encode_get_room_response'/0, 'decode_int'/0, 'encode_int'/0, 'decode_last'/0, 'encode_last'/0, 'decode_list'/1, 'encode_list'/1, 'decode_log'/0, 'encode_log'/0, 'decode_midway_enter'/0, 'encode_midway_enter'/0, 'decode_notification'/0, 'encode_notification'/0, 'decode_observable_game_state'/0, 'encode_observable_game_state'/0, 'decode_observable_inning'/0, 'encode_observable_inning'/0, 'decode_observable_inning_state'/0, 'encode_observable_inning_state'/0, 'decode_observable_last'/0, 'encode_observable_last'/0, 'decode_observable_room_state'/0, 'encode_observable_room_state'/0, 'decode_option'/1, 'encode_option'/1, 'decode_per_seat'/1, 'encode_per_seat'/1, 'decode_personal_state'/0, 'encode_personal_state'/0, 'decode_room'/0, 'encode_room'/0, 'decode_room_id'/0, 'encode_room_id'/0, 'decode_room_name'/0, 'encode_room_name'/0, 'decode_room_request'/0, 'encode_room_request'/0, 'decode_room_summary'/0, 'encode_room_summary'/0, 'decode_seat'/0, 'encode_seat'/0, 'decode_snapshot_id'/0, 'encode_snapshot_id'/0, 'decode_special_inning_end'/0, 'encode_special_inning_end'/0, 'decode_special_trick_end'/0, 'encode_special_trick_end'/0, 'decode_string'/0, 'encode_string'/0, 'decode_submission'/0, 'encode_submission'/0, 'decode_submit_cards_request'/0, 'encode_submit_cards_request'/0, 'decode_submit_cards_response'/0, 'encode_submit_cards_response'/0, 'decode_table'/0, 'encode_table'/0, 'decode_user'/0, 'encode_user'/0, 'decode_user_id'/0, 'encode_user_id'/0, 'decode_user_name'/0, 'encode_user_name'/0, 'decode_wenzun_element'/0, 'encode_wenzun_element'/0, 'decode_wuzun_element'/0, 'encode_wuzun_element'/0]).
'decode_big_with_design'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"design"/utf8>>, 'Tianjiupai.Models':'decode_design'()), fun(S623LocalKeyDesign) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"main"/utf8>>, 'Tianjiupai.Models':'decode_card_big'()), fun(S624LocalKeyMain) -> 'SesterlJson.Decode':'pure'(#{design => S623LocalKeyDesign, main => S624LocalKeyMain}) end) end).
'encode_big_with_design'() -> fun(S625LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"design"/utf8>>, begin S626 = 'Tianjiupai.Models':'encode_design'(), S626(maps:get(design, S625LocalParamTemp)) end} | [{<<"main"/utf8>>, begin S627 = 'Tianjiupai.Models':'encode_card_big'(), S627(maps:get(main, S625LocalParamTemp)) end} | []]]) end.
'decode_bool'() -> 'SesterlJson.Decode':'bool'().
'encode_bool'() -> fun(S628V) -> 'SesterlJson.Encode':'bool'(S628V) end.
'decode_card'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S629Temp) -> case S629Temp of <<"Wen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S630LocalParamTemp) -> {'wen', S630LocalParamTemp} end, 'Tianjiupai.Models':'decode_card_wen'())); <<"Wu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S631LocalParamTemp) -> {'wu', S631LocalParamTemp} end, 'Tianjiupai.Models':'decode_card_wu'())); S632Other -> 'SesterlJson.Decode':'fail'(S632Other) end end).
'encode_card'() -> fun(S633Temp) -> case S633Temp of {'wen', S634Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S635 = 'Tianjiupai.Models':'encode_card_wen'(), S635(S634Sub) end} | []]]); {'wu', S636Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S637 = 'Tianjiupai.Models':'encode_card_wu'(), S637(S636Sub) end} | []]]) end end.
'decode_card_big'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S638Temp) -> case S638Temp of <<"BigA"/utf8>> -> 'SesterlJson.Decode':'pure'('big_a'); <<"BigB"/utf8>> -> 'SesterlJson.Decode':'pure'('big_b'); <<"BigC"/utf8>> -> 'SesterlJson.Decode':'pure'('big_c'); <<"BigD"/utf8>> -> 'SesterlJson.Decode':'pure'('big_d'); S639Other -> 'SesterlJson.Decode':'fail'(S639Other) end end).
'encode_card_big'() -> fun(S640Temp) -> case S640Temp of 'big_a' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigA"/utf8>>)} | []]); 'big_b' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigB"/utf8>>)} | []]); 'big_c' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigC"/utf8>>)} | []]); 'big_d' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigD"/utf8>>)} | []]) end end.
'decode_card_wen'() -> 'Tianjiupai.Models':'decode_int'().
'encode_card_wen'() -> 'Tianjiupai.Models':'encode_int'().
'decode_card_wu'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"design"/utf8>>, 'Tianjiupai.Models':'decode_design'()), fun(S641LocalKeyDesign) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"number"/utf8>>, 'Tianjiupai.Models':'decode_card_wu_number'()), fun(S642LocalKeyNumber) -> 'SesterlJson.Decode':'pure'(#{design => S641LocalKeyDesign, number => S642LocalKeyNumber}) end) end).
'encode_card_wu'() -> fun(S643LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"design"/utf8>>, begin S644 = 'Tianjiupai.Models':'encode_design'(), S644(maps:get(design, S643LocalParamTemp)) end} | [{<<"number"/utf8>>, begin S645 = 'Tianjiupai.Models':'encode_card_wu_number'(), S645(maps:get(number, S643LocalParamTemp)) end} | []]]) end.
'decode_card_wu_number'() -> 'Tianjiupai.Models':'decode_int'().
'encode_card_wu_number'() -> 'Tianjiupai.Models':'encode_int'().
'decode_change_per_trick_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"change_reason"/utf8>>, 'Tianjiupai.Models':'decode_change_reason'()), fun(S646LocalKeyChangeReason) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"diffs"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_int'())), fun(S647LocalKeyDiffs) -> 'SesterlJson.Decode':'pure'(#{change_reason => S646LocalKeyChangeReason, diffs => S647LocalKeyDiffs}) end) end).
'encode_change_per_trick_end'() -> fun(S648LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"change_reason"/utf8>>, begin S649 = 'Tianjiupai.Models':'encode_change_reason'(), S649(maps:get(change_reason, S648LocalParamTemp)) end} | [{<<"diffs"/utf8>>, begin S650 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_int'()), S650(maps:get(diffs, S648LocalParamTemp)) end} | []]]) end.
'decode_change_reason'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S651Temp) -> case S651Temp of <<"NormalInningEnd"/utf8>> -> 'SesterlJson.Decode':'pure'('normal_inning_end'); <<"SpecialInningEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S652LocalParamTemp) -> {'special_inning_end', S652LocalParamTemp} end, 'Tianjiupai.Models':'decode_special_inning_end'())); <<"SpecialTrickEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S653LocalParamTemp) -> {'special_trick_end', S653LocalParamTemp} end, 'Tianjiupai.Models':'decode_special_trick_end'())); S654Other -> 'SesterlJson.Decode':'fail'(S654Other) end end).
'encode_change_reason'() -> fun(S655Temp) -> case S655Temp of 'normal_inning_end' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NormalInningEnd"/utf8>>)} | []]); {'special_inning_end', S656Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SpecialInningEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S657 = 'Tianjiupai.Models':'encode_special_inning_end'(), S657(S656Sub) end} | []]]); {'special_trick_end', S658Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SpecialTrickEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S659 = 'Tianjiupai.Models':'encode_special_trick_end'(), S659(S658Sub) end} | []]]) end end.
'decode_closed_or'(S660LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S661Temp) -> case S661Temp of <<"Closed"/utf8>> -> 'SesterlJson.Decode':'pure'('closed'); <<"Open"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S662LocalParamTemp) -> {'open', S662LocalParamTemp} end, S660LocalParamA)); S663Other -> 'SesterlJson.Decode':'fail'(S663Other) end end).
'encode_closed_or'(S664LocalParamA) -> fun(S665Temp) -> case S665Temp of 'closed' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Closed"/utf8>>)} | []]); {'open', S666Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Open"/utf8>>)} | [{<<"_arg"/utf8>>, S664LocalParamA(S666Sub)} | []]]) end end.
'decode_command'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S667Temp) -> case S667Temp of <<"CommandAck"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S668LocalParamTemp) -> {'command_ack', S668LocalParamTemp} end, 'Tianjiupai.Models':'decode_snapshot_id'())); <<"CommandComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S669LocalParamTemp) -> {'command_comment', S669LocalParamTemp} end, 'Tianjiupai.Models':'decode_string'())); <<"CommandHeartbeat"/utf8>> -> 'SesterlJson.Decode':'pure'('command_heartbeat'); <<"CommandNextInning"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S670LocalParamTemp) -> {'command_next_inning', S670LocalParamTemp} end, 'Tianjiupai.Models':'decode_snapshot_id'())); S671Other -> 'SesterlJson.Decode':'fail'(S671Other) end end).
'encode_command'() -> fun(S672Temp) -> case S672Temp of {'command_ack', S673Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandAck"/utf8>>)} | [{<<"_arg"/utf8>>, begin S674 = 'Tianjiupai.Models':'encode_snapshot_id'(), S674(S673Sub) end} | []]]); {'command_comment', S675Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S676 = 'Tianjiupai.Models':'encode_string'(), S676(S675Sub) end} | []]]); 'command_heartbeat' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandHeartbeat"/utf8>>)} | []]); {'command_next_inning', S677Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandNextInning"/utf8>>)} | [{<<"_arg"/utf8>>, begin S678 = 'Tianjiupai.Models':'encode_snapshot_id'(), S678(S677Sub) end} | []]]) end end.
'decode_comment'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"from"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S679LocalKeyFrom) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"text"/utf8>>, 'Tianjiupai.Models':'decode_string'()), fun(S680LocalKeyText) -> 'SesterlJson.Decode':'pure'(#{from => S679LocalKeyFrom, text => S680LocalKeyText}) end) end).
'encode_comment'() -> fun(S681LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"from"/utf8>>, begin S682 = 'Tianjiupai.Models':'encode_user'(), S682(maps:get(from, S681LocalParamTemp)) end} | [{<<"text"/utf8>>, begin S683 = 'Tianjiupai.Models':'encode_string'(), S683(maps:get(text, S681LocalParamTemp)) end} | []]]) end.
'decode_connection'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_connected"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S684LocalKeyIsConnected) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S685LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{is_connected => S684LocalKeyIsConnected, user => S685LocalKeyUser}) end) end).
'encode_connection'() -> fun(S686LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_connected"/utf8>>, begin S687 = 'Tianjiupai.Models':'encode_bool'(), S687(maps:get(is_connected, S686LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S688 = 'Tianjiupai.Models':'encode_user'(), S688(maps:get(user, S686LocalParamTemp)) end} | []]]) end.
'decode_create_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_name"/utf8>>, 'Tianjiupai.Models':'decode_room_name'()), fun(S689LocalKeyRoomName) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S690LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{room_name => S689LocalKeyRoomName, user_id => S690LocalKeyUserId}) end) end).
'encode_create_room_request'() -> fun(S691LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_name"/utf8>>, begin S692 = 'Tianjiupai.Models':'encode_room_name'(), S692(maps:get(room_name, S691LocalParamTemp)) end} | [{<<"user_id"/utf8>>, begin S693 = 'Tianjiupai.Models':'encode_user_id'(), S693(maps:get(user_id, S691LocalParamTemp)) end} | []]]) end.
'decode_create_room_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_id"/utf8>>, 'Tianjiupai.Models':'decode_room_id'()), fun(S694LocalKeyRoomId) -> 'SesterlJson.Decode':'pure'(#{room_id => S694LocalKeyRoomId}) end).
'encode_create_room_response'() -> fun(S695LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_id"/utf8>>, begin S696 = 'Tianjiupai.Models':'encode_room_id'(), S696(maps:get(room_id, S695LocalParamTemp)) end} | []]) end.
'decode_create_user_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S697LocalKeyUserName) -> 'SesterlJson.Decode':'pure'(#{user_name => S697LocalKeyUserName}) end).
'encode_create_user_request'() -> fun(S698LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_name"/utf8>>, begin S699 = 'Tianjiupai.Models':'encode_user_name'(), S699(maps:get(user_name, S698LocalParamTemp)) end} | []]) end.
'decode_create_user_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S700LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S700LocalKeyUserId}) end).
'encode_create_user_response'() -> fun(S701LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S702 = 'Tianjiupai.Models':'encode_user_id'(), S702(maps:get(user_id, S701LocalParamTemp)) end} | []]) end.
'decode_design'() -> 'Tianjiupai.Models':'decode_bool'().
'encode_design'() -> 'Tianjiupai.Models':'encode_bool'().
'decode_enter_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S703LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S703LocalKeyUserId}) end).
'encode_enter_room_request'() -> fun(S704LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S705 = 'Tianjiupai.Models':'encode_user_id'(), S705(maps:get(user_id, S704LocalParamTemp)) end} | []]) end.
'decode_enter_room_response'() -> 'Tianjiupai.Models':'decode_personal_state'().
'encode_enter_room_response'() -> 'Tianjiupai.Models':'encode_personal_state'().
'decode_exit_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S706LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S706LocalKeyUserId}) end).
'encode_exit_room_request'() -> fun(S707LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S708 = 'Tianjiupai.Models':'encode_user_id'(), S708(maps:get(user_id, S707LocalParamTemp)) end} | []]) end.
'decode_exit_room_response'() -> 'SesterlJson.Decode':'pure'(ok).
'encode_exit_room_response'() -> fun(S709LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([]) end.
'decode_exposed'(S710LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"first"/utf8>>, S710LocalParamA), fun(S711LocalKeyFirst) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"subsequent"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_closed_or'(S710LocalParamA))), fun(S712LocalKeySubsequent) -> 'SesterlJson.Decode':'pure'(#{first => S711LocalKeyFirst, subsequent => S712LocalKeySubsequent}) end) end).
'encode_exposed'(S713LocalParamA) -> fun(S714LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"first"/utf8>>, S713LocalParamA(maps:get(first, S714LocalParamTemp))} | [{<<"subsequent"/utf8>>, begin S715 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_closed_or'(S713LocalParamA)), S715(maps:get(subsequent, S714LocalParamTemp)) end} | []]]) end.
'decode_flag_user'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"belongs_to"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_room_id'())), fun(S716LocalKeyBelongsTo) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S717LocalKeyId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S718LocalKeyName) -> 'SesterlJson.Decode':'pure'(#{belongs_to => S716LocalKeyBelongsTo, id => S717LocalKeyId, name => S718LocalKeyName}) end) end) end).
'encode_flag_user'() -> fun(S719LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"belongs_to"/utf8>>, begin S720 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_room_id'()), S720(maps:get(belongs_to, S719LocalParamTemp)) end} | [{<<"id"/utf8>>, begin S721 = 'Tianjiupai.Models':'encode_user_id'(), S721(maps:get(id, S719LocalParamTemp)) end} | [{<<"name"/utf8>>, begin S722 = 'Tianjiupai.Models':'encode_user_name'(), S722(maps:get(name, S719LocalParamTemp)) end} | []]]]) end.
'decode_flag_user_option'() -> 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_flag_user'()).
'encode_flag_user_option'() -> 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_flag_user'()).
'decode_game_index'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"inning_index"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S723LocalKeyInningIndex) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"num_consecutives"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S724LocalKeyNumConsecutives) -> 'SesterlJson.Decode':'pure'(#{inning_index => S723LocalKeyInningIndex, num_consecutives => S724LocalKeyNumConsecutives}) end) end).
'encode_game_index'() -> fun(S725LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"inning_index"/utf8>>, begin S726 = 'Tianjiupai.Models':'encode_int'(), S726(maps:get(inning_index, S725LocalParamTemp)) end} | [{<<"num_consecutives"/utf8>>, begin S727 = 'Tianjiupai.Models':'encode_int'(), S727(maps:get(num_consecutives, S725LocalParamTemp)) end} | []]]) end.
'decode_game_meta'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"inning_index"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S728LocalKeyInningIndex) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"num_consecutives"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S729LocalKeyNumConsecutives) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"parent_seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S730LocalKeyParentSeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"players"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_game_player'()))), fun(S731LocalKeyPlayers) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"scores"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_int'())), fun(S732LocalKeyScores) -> 'SesterlJson.Decode':'pure'(#{inning_index => S728LocalKeyInningIndex, num_consecutives => S729LocalKeyNumConsecutives, parent_seat => S730LocalKeyParentSeat, players => S731LocalKeyPlayers, scores => S732LocalKeyScores}) end) end) end) end) end).
'encode_game_meta'() -> fun(S733LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"inning_index"/utf8>>, begin S734 = 'Tianjiupai.Models':'encode_int'(), S734(maps:get(inning_index, S733LocalParamTemp)) end} | [{<<"num_consecutives"/utf8>>, begin S735 = 'Tianjiupai.Models':'encode_int'(), S735(maps:get(num_consecutives, S733LocalParamTemp)) end} | [{<<"parent_seat"/utf8>>, begin S736 = 'Tianjiupai.Models':'encode_seat'(), S736(maps:get(parent_seat, S733LocalParamTemp)) end} | [{<<"players"/utf8>>, begin S737 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_game_player'())), S737(maps:get(players, S733LocalParamTemp)) end} | [{<<"scores"/utf8>>, begin S738 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_int'()), S738(maps:get(scores, S733LocalParamTemp)) end} | []]]]]]) end.
'decode_game_player'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_connected"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S739LocalKeyIsConnected) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S740LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{is_connected => S739LocalKeyIsConnected, user => S740LocalKeyUser}) end) end).
'encode_game_player'() -> fun(S741LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_connected"/utf8>>, begin S742 = 'Tianjiupai.Models':'encode_bool'(), S742(maps:get(is_connected, S741LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S743 = 'Tianjiupai.Models':'encode_user'(), S743(maps:get(user, S741LocalParamTemp)) end} | []]]) end.
'decode_get_all_rooms_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"rooms"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_room_summary'())), fun(S744LocalKeyRooms) -> 'SesterlJson.Decode':'pure'(#{rooms => S744LocalKeyRooms}) end).
'encode_get_all_rooms_response'() -> fun(S745LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"rooms"/utf8>>, begin S746 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_room_summary'()), S746(maps:get(rooms, S745LocalParamTemp)) end} | []]) end.
'decode_get_room_response'() -> 'Tianjiupai.Models':'decode_personal_state'().
'encode_get_room_response'() -> 'Tianjiupai.Models':'encode_personal_state'().
'decode_int'() -> 'SesterlJson.Decode':'int'().
'encode_int'() -> fun(S747V) -> 'SesterlJson.Encode':'int'(S747V) end.
'decode_last'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"changes"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_change_per_trick_end'())), fun(S748LocalKeyChanges) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"hand"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S749LocalKeyHand) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S750LocalKeyTable) -> 'SesterlJson.Decode':'pure'(#{changes => S748LocalKeyChanges, hand => S749LocalKeyHand, table => S750LocalKeyTable}) end) end) end).
'encode_last'() -> fun(S751LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"changes"/utf8>>, begin S752 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_change_per_trick_end'()), S752(maps:get(changes, S751LocalParamTemp)) end} | [{<<"hand"/utf8>>, begin S753 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S753(maps:get(hand, S751LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S754 = 'Tianjiupai.Models':'encode_table'(), S754(maps:get(table, S751LocalParamTemp)) end} | []]]]) end.
'decode_list'(S755X) -> 'SesterlJson.Decode':'list'(S755X).
'encode_list'(S756Enc) -> fun(S757V) -> 'SesterlJson.Encode':'list'('SesterlStdlib.List':'map'(S756Enc, S757V)) end.
'decode_log'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S758Temp) -> case S758Temp of <<"LogChanges"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S759LocalParamTemp) -> {'log_changes', S759LocalParamTemp} end, 'Tianjiupai.Models':'decode_change_per_trick_end'())); <<"LogComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S760LocalParamTemp) -> {'log_comment', S760LocalParamTemp} end, 'Tianjiupai.Models':'decode_comment'())); <<"LogConnection"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S761LocalParamTemp) -> {'log_connection', S761LocalParamTemp} end, 'Tianjiupai.Models':'decode_connection'())); <<"LogEntered"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S762LocalParamTemp) -> {'log_entered', S762LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"LogExited"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S763LocalParamTemp) -> {'log_exited', S763LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"LogGameStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S764LocalParamTemp) -> {'log_game_start', S764LocalParamTemp} end, 'Tianjiupai.Models':'decode_game_index'())); S765Other -> 'SesterlJson.Decode':'fail'(S765Other) end end).
'encode_log'() -> fun(S766Temp) -> case S766Temp of {'log_changes', S767Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogChanges"/utf8>>)} | [{<<"_arg"/utf8>>, begin S768 = 'Tianjiupai.Models':'encode_change_per_trick_end'(), S768(S767Sub) end} | []]]); {'log_comment', S769Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S770 = 'Tianjiupai.Models':'encode_comment'(), S770(S769Sub) end} | []]]); {'log_connection', S771Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogConnection"/utf8>>)} | [{<<"_arg"/utf8>>, begin S772 = 'Tianjiupai.Models':'encode_connection'(), S772(S771Sub) end} | []]]); {'log_entered', S773Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogEntered"/utf8>>)} | [{<<"_arg"/utf8>>, begin S774 = 'Tianjiupai.Models':'encode_user'(), S774(S773Sub) end} | []]]); {'log_exited', S775Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogExited"/utf8>>)} | [{<<"_arg"/utf8>>, begin S776 = 'Tianjiupai.Models':'encode_user'(), S776(S775Sub) end} | []]]); {'log_game_start', S777Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogGameStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S778 = 'Tianjiupai.Models':'encode_game_index'(), S778(S777Sub) end} | []]]) end end.
'decode_midway_enter'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S779LocalKeySeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S780LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{seat => S779LocalKeySeat, user => S780LocalKeyUser}) end) end).
'encode_midway_enter'() -> fun(S781LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"seat"/utf8>>, begin S782 = 'Tianjiupai.Models':'encode_seat'(), S782(maps:get(seat, S781LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S783 = 'Tianjiupai.Models':'encode_user'(), S783(maps:get(user, S781LocalParamTemp)) end} | []]]) end.
'decode_notification'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S784Temp) -> case S784Temp of <<"NotifyComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S785LocalParamTemp) -> {'notify_comment', S785LocalParamTemp} end, 'Tianjiupai.Models':'decode_comment'())); <<"NotifyConnection"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S786LocalParamTemp) -> {'notify_connection', S786LocalParamTemp} end, 'Tianjiupai.Models':'decode_connection'())); <<"NotifyEntered"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S787LocalParamTemp) -> {'notify_entered', S787LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"NotifyEnteredMidway"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S788LocalParamTemp) -> {'notify_entered_midway', S788LocalParamTemp} end, 'Tianjiupai.Models':'decode_midway_enter'())); <<"NotifyExited"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S789LocalParamTemp) -> {'notify_exited', S789LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"NotifyGameStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S790LocalParamTemp) -> {'notify_game_start', S790LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_game_state'())); <<"NotifyNextStep"/utf8>> -> 'SesterlJson.Decode':'pure'('notify_next_step'); <<"NotifyPlazaUpdate"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S791LocalParamTemp) -> {'notify_plaza_update', S791LocalParamTemp} end, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_room_summary'()))); <<"NotifyRoomClose"/utf8>> -> 'SesterlJson.Decode':'pure'('notify_room_close'); <<"NotifySubmission"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S792LocalParamTemp) -> {'notify_submission', S792LocalParamTemp} end, 'Tianjiupai.Models':'decode_submission'())); S793Other -> 'SesterlJson.Decode':'fail'(S793Other) end end).
'encode_notification'() -> fun(S794Temp) -> case S794Temp of {'notify_comment', S795Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S796 = 'Tianjiupai.Models':'encode_comment'(), S796(S795Sub) end} | []]]); {'notify_connection', S797Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyConnection"/utf8>>)} | [{<<"_arg"/utf8>>, begin S798 = 'Tianjiupai.Models':'encode_connection'(), S798(S797Sub) end} | []]]); {'notify_entered', S799Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyEntered"/utf8>>)} | [{<<"_arg"/utf8>>, begin S800 = 'Tianjiupai.Models':'encode_user'(), S800(S799Sub) end} | []]]); {'notify_entered_midway', S801Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyEnteredMidway"/utf8>>)} | [{<<"_arg"/utf8>>, begin S802 = 'Tianjiupai.Models':'encode_midway_enter'(), S802(S801Sub) end} | []]]); {'notify_exited', S803Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyExited"/utf8>>)} | [{<<"_arg"/utf8>>, begin S804 = 'Tianjiupai.Models':'encode_user'(), S804(S803Sub) end} | []]]); {'notify_game_start', S805Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyGameStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S806 = 'Tianjiupai.Models':'encode_observable_game_state'(), S806(S805Sub) end} | []]]); 'notify_next_step' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyNextStep"/utf8>>)} | []]); {'notify_plaza_update', S807Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyPlazaUpdate"/utf8>>)} | [{<<"_arg"/utf8>>, begin S808 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_room_summary'()), S808(S807Sub) end} | []]]); 'notify_room_close' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyRoomClose"/utf8>>)} | []]); {'notify_submission', S809Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifySubmission"/utf8>>)} | [{<<"_arg"/utf8>>, begin S810 = 'Tianjiupai.Models':'encode_submission'(), S810(S809Sub) end} | []]]) end end.
'decode_observable_game_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"meta"/utf8>>, 'Tianjiupai.Models':'decode_game_meta'()), fun(S811LocalKeyMeta) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"observable_inning"/utf8>>, 'Tianjiupai.Models':'decode_observable_inning'()), fun(S812LocalKeyObservableInning) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"snapshot_id"/utf8>>, 'Tianjiupai.Models':'decode_snapshot_id'()), fun(S813LocalKeySnapshotId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"synchronizing"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S814LocalKeySynchronizing) -> 'SesterlJson.Decode':'pure'(#{meta => S811LocalKeyMeta, observable_inning => S812LocalKeyObservableInning, snapshot_id => S813LocalKeySnapshotId, synchronizing => S814LocalKeySynchronizing}) end) end) end) end).
'encode_observable_game_state'() -> fun(S815LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"meta"/utf8>>, begin S816 = 'Tianjiupai.Models':'encode_game_meta'(), S816(maps:get(meta, S815LocalParamTemp)) end} | [{<<"observable_inning"/utf8>>, begin S817 = 'Tianjiupai.Models':'encode_observable_inning'(), S817(maps:get(observable_inning, S815LocalParamTemp)) end} | [{<<"snapshot_id"/utf8>>, begin S818 = 'Tianjiupai.Models':'encode_snapshot_id'(), S818(maps:get(snapshot_id, S815LocalParamTemp)) end} | [{<<"synchronizing"/utf8>>, begin S819 = 'Tianjiupai.Models':'encode_bool'(), S819(maps:get(synchronizing, S815LocalParamTemp)) end} | []]]]]) end.
'decode_observable_inning'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S820Temp) -> case S820Temp of <<"ObservableDuringInning"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S821LocalParamTemp) -> {'observable_during_inning', S821LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_inning_state'())); <<"ObservableInningEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S822LocalParamTemp) -> {'observable_inning_end', S822LocalParamTemp} end, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())))); S823Other -> 'SesterlJson.Decode':'fail'(S823Other) end end).
'encode_observable_inning'() -> fun(S824Temp) -> case S824Temp of {'observable_during_inning', S825Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"ObservableDuringInning"/utf8>>)} | [{<<"_arg"/utf8>>, begin S826 = 'Tianjiupai.Models':'encode_observable_inning_state'(), S826(S825Sub) end} | []]]); {'observable_inning_end', S827Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"ObservableInningEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S828 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'())), S828(S827Sub) end} | []]]) end end.
'decode_observable_inning_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"gains"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'()))), fun(S829LocalKeyGains) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"starts_at"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S830LocalKeyStartsAt) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S831LocalKeyTable) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"your_hand"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S832LocalKeyYourHand) -> 'SesterlJson.Decode':'pure'(#{gains => S829LocalKeyGains, starts_at => S830LocalKeyStartsAt, table => S831LocalKeyTable, your_hand => S832LocalKeyYourHand}) end) end) end) end).
'encode_observable_inning_state'() -> fun(S833LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"gains"/utf8>>, begin S834 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'())), S834(maps:get(gains, S833LocalParamTemp)) end} | [{<<"starts_at"/utf8>>, begin S835 = 'Tianjiupai.Models':'encode_seat'(), S835(maps:get(starts_at, S833LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S836 = 'Tianjiupai.Models':'encode_table'(), S836(maps:get(table, S833LocalParamTemp)) end} | [{<<"your_hand"/utf8>>, begin S837 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S837(maps:get(your_hand, S833LocalParamTemp)) end} | []]]]]) end.
'decode_observable_last'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"changes"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_change_per_trick_end'())), fun(S838LocalKeyChanges) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S839LocalKeyTable) -> 'SesterlJson.Decode':'pure'(#{changes => S838LocalKeyChanges, table => S839LocalKeyTable}) end) end).
'encode_observable_last'() -> fun(S840LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"changes"/utf8>>, begin S841 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_change_per_trick_end'()), S841(maps:get(changes, S840LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S842 = 'Tianjiupai.Models':'encode_table'(), S842(maps:get(table, S840LocalParamTemp)) end} | []]]) end.
'decode_observable_room_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S843Temp) -> case S843Temp of <<"PlayingGame"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S844LocalParamTemp) -> {'playing_game', S844LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_game_state'())); <<"WaitingStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S845LocalParamTemp) -> {'waiting_start', S845LocalParamTemp} end, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_user'()))); S846Other -> 'SesterlJson.Decode':'fail'(S846Other) end end).
'encode_observable_room_state'() -> fun(S847Temp) -> case S847Temp of {'playing_game', S848Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"PlayingGame"/utf8>>)} | [{<<"_arg"/utf8>>, begin S849 = 'Tianjiupai.Models':'encode_observable_game_state'(), S849(S848Sub) end} | []]]); {'waiting_start', S850Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WaitingStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S851 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_user'()), S851(S850Sub) end} | []]]) end end.
'decode_option'(S852X) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S853Temp) -> case S853Temp of <<"None"/utf8>> -> 'SesterlJson.Decode':'pure'('error'); <<"Some"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S854Temp) -> {'ok', S854Temp} end, S852X)); S855Other -> 'SesterlJson.Decode':'fail'(S855Other) end end).
'encode_option'(S856Enc) -> fun(S857V) -> case S857V of 'error' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"None"/utf8>>)} | []]); {'ok', S858Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Some"/utf8>>)} | [{<<"_arg"/utf8>>, S856Enc(S858Sub)} | []]]) end end.
'decode_per_seat'(S859LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"east"/utf8>>, S859LocalParamA), fun(S860LocalKeyEast) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"north"/utf8>>, S859LocalParamA), fun(S861LocalKeyNorth) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"south"/utf8>>, S859LocalParamA), fun(S862LocalKeySouth) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"west"/utf8>>, S859LocalParamA), fun(S863LocalKeyWest) -> 'SesterlJson.Decode':'pure'(#{east => S860LocalKeyEast, north => S861LocalKeyNorth, south => S862LocalKeySouth, west => S863LocalKeyWest}) end) end) end) end).
'encode_per_seat'(S864LocalParamA) -> fun(S865LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"east"/utf8>>, S864LocalParamA(maps:get(east, S865LocalParamTemp))} | [{<<"north"/utf8>>, S864LocalParamA(maps:get(north, S865LocalParamTemp))} | [{<<"south"/utf8>>, S864LocalParamA(maps:get(south, S865LocalParamTemp))} | [{<<"west"/utf8>>, S864LocalParamA(maps:get(west, S865LocalParamTemp))} | []]]]]) end.
'decode_personal_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"game"/utf8>>, 'Tianjiupai.Models':'decode_observable_room_state'()), fun(S866LocalKeyGame) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"logs"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_log'())), fun(S867LocalKeyLogs) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room"/utf8>>, 'Tianjiupai.Models':'decode_room'()), fun(S868LocalKeyRoom) -> 'SesterlJson.Decode':'pure'(#{game => S866LocalKeyGame, logs => S867LocalKeyLogs, room => S868LocalKeyRoom}) end) end) end).
'encode_personal_state'() -> fun(S869LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"game"/utf8>>, begin S870 = 'Tianjiupai.Models':'encode_observable_room_state'(), S870(maps:get(game, S869LocalParamTemp)) end} | [{<<"logs"/utf8>>, begin S871 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_log'()), S871(maps:get(logs, S869LocalParamTemp)) end} | [{<<"room"/utf8>>, begin S872 = 'Tianjiupai.Models':'encode_room'(), S872(maps:get(room, S869LocalParamTemp)) end} | []]]]) end.
'decode_room'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_id"/utf8>>, 'Tianjiupai.Models':'decode_room_id'()), fun(S873LocalKeyRoomId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_name"/utf8>>, 'Tianjiupai.Models':'decode_room_name'()), fun(S874LocalKeyRoomName) -> 'SesterlJson.Decode':'pure'(#{room_id => S873LocalKeyRoomId, room_name => S874LocalKeyRoomName}) end) end).
'encode_room'() -> fun(S875LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_id"/utf8>>, begin S876 = 'Tianjiupai.Models':'encode_room_id'(), S876(maps:get(room_id, S875LocalParamTemp)) end} | [{<<"room_name"/utf8>>, begin S877 = 'Tianjiupai.Models':'encode_room_name'(), S877(maps:get(room_name, S875LocalParamTemp)) end} | []]]) end.
'decode_room_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_room_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_room_name'() -> 'Tianjiupai.Models':'decode_string'().
'encode_room_name'() -> 'Tianjiupai.Models':'encode_string'().
'decode_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S878Temp) -> case S878Temp of <<"RoomRequestToEnterRoom"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S879LocalParamTemp) -> {'room_request_to_enter_room', S879LocalParamTemp} end, 'Tianjiupai.Models':'decode_enter_room_request'())); <<"RoomRequestToExitRoom"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S880LocalParamTemp) -> {'room_request_to_exit_room', S880LocalParamTemp} end, 'Tianjiupai.Models':'decode_enter_room_request'())); <<"RoomRequestToSubmitCards"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S881LocalParamTemp) -> {'room_request_to_submit_cards', S881LocalParamTemp} end, 'Tianjiupai.Models':'decode_submit_cards_request'())); S882Other -> 'SesterlJson.Decode':'fail'(S882Other) end end).
'encode_room_request'() -> fun(S883Temp) -> case S883Temp of {'room_request_to_enter_room', S884Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToEnterRoom"/utf8>>)} | [{<<"_arg"/utf8>>, begin S885 = 'Tianjiupai.Models':'encode_enter_room_request'(), S885(S884Sub) end} | []]]); {'room_request_to_exit_room', S886Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToExitRoom"/utf8>>)} | [{<<"_arg"/utf8>>, begin S887 = 'Tianjiupai.Models':'encode_enter_room_request'(), S887(S886Sub) end} | []]]); {'room_request_to_submit_cards', S888Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToSubmitCards"/utf8>>)} | [{<<"_arg"/utf8>>, begin S889 = 'Tianjiupai.Models':'encode_submit_cards_request'(), S889(S888Sub) end} | []]]) end end.
'decode_room_summary'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_playing"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S890LocalKeyIsPlaying) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"members"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_user'())), fun(S891LocalKeyMembers) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room"/utf8>>, 'Tianjiupai.Models':'decode_room'()), fun(S892LocalKeyRoom) -> 'SesterlJson.Decode':'pure'(#{is_playing => S890LocalKeyIsPlaying, members => S891LocalKeyMembers, room => S892LocalKeyRoom}) end) end) end).
'encode_room_summary'() -> fun(S893LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_playing"/utf8>>, begin S894 = 'Tianjiupai.Models':'encode_bool'(), S894(maps:get(is_playing, S893LocalParamTemp)) end} | [{<<"members"/utf8>>, begin S895 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_user'()), S895(maps:get(members, S893LocalParamTemp)) end} | [{<<"room"/utf8>>, begin S896 = 'Tianjiupai.Models':'encode_room'(), S896(maps:get(room, S893LocalParamTemp)) end} | []]]]) end.
'decode_seat'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S897Temp) -> case S897Temp of <<"SeatA"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_a'); <<"SeatB"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_b'); <<"SeatC"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_c'); <<"SeatD"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_d'); S898Other -> 'SesterlJson.Decode':'fail'(S898Other) end end).
'encode_seat'() -> fun(S899Temp) -> case S899Temp of 'seat_a' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatA"/utf8>>)} | []]); 'seat_b' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatB"/utf8>>)} | []]); 'seat_c' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatC"/utf8>>)} | []]); 'seat_d' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatD"/utf8>>)} | []]) end end.
'decode_snapshot_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_snapshot_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_special_inning_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S900Temp) -> case S900Temp of <<"InningEndWithBazhijie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_bazhijie'); <<"InningEndWithQizhijie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_qizhijie'); <<"InningEndWithSidahe"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_sidahe'); <<"InningEndWithYaojie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_yaojie'); <<"InningEndWithZhizun"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_zhizun'); S901Other -> 'SesterlJson.Decode':'fail'(S901Other) end end).
'encode_special_inning_end'() -> fun(S902Temp) -> case S902Temp of 'inning_end_with_bazhijie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithBazhijie"/utf8>>)} | []]); 'inning_end_with_qizhijie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithQizhijie"/utf8>>)} | []]); 'inning_end_with_sidahe' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithSidahe"/utf8>>)} | []]); 'inning_end_with_yaojie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithYaojie"/utf8>>)} | []]); 'inning_end_with_zhizun' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithZhizun"/utf8>>)} | []]) end end.
'decode_special_trick_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S903Temp) -> case S903Temp of <<"TrickEndWithSidahe"/utf8>> -> 'SesterlJson.Decode':'pure'('trick_end_with_sidahe'); <<"TrickEndWithZhizun"/utf8>> -> 'SesterlJson.Decode':'pure'('trick_end_with_zhizun'); S904Other -> 'SesterlJson.Decode':'fail'(S904Other) end end).
'encode_special_trick_end'() -> fun(S905Temp) -> case S905Temp of 'trick_end_with_sidahe' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TrickEndWithSidahe"/utf8>>)} | []]); 'trick_end_with_zhizun' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TrickEndWithZhizun"/utf8>>)} | []]) end end.
'decode_string'() -> 'SesterlJson.Decode':'string'().
'encode_string'() -> fun(S906V) -> 'SesterlJson.Encode':'string'(S906V) end.
'decode_submission'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"new_state"/utf8>>, 'Tianjiupai.Models':'decode_observable_game_state'()), fun(S907LocalKeyNewState) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S908LocalKeySeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"submitted"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_card'()))), fun(S909LocalKeySubmitted) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"trick_last"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_observable_last'())), fun(S910LocalKeyTrickLast) -> 'SesterlJson.Decode':'pure'(#{new_state => S907LocalKeyNewState, seat => S908LocalKeySeat, submitted => S909LocalKeySubmitted, trick_last => S910LocalKeyTrickLast}) end) end) end) end).
'encode_submission'() -> fun(S911LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"new_state"/utf8>>, begin S912 = 'Tianjiupai.Models':'encode_observable_game_state'(), S912(maps:get(new_state, S911LocalParamTemp)) end} | [{<<"seat"/utf8>>, begin S913 = 'Tianjiupai.Models':'encode_seat'(), S913(maps:get(seat, S911LocalParamTemp)) end} | [{<<"submitted"/utf8>>, begin S914 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_card'())), S914(maps:get(submitted, S911LocalParamTemp)) end} | [{<<"trick_last"/utf8>>, begin S915 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_observable_last'()), S915(maps:get(trick_last, S911LocalParamTemp)) end} | []]]]]) end.
'decode_submit_cards_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"cards"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S916LocalKeyCards) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S917LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{cards => S916LocalKeyCards, user_id => S917LocalKeyUserId}) end) end).
'encode_submit_cards_request'() -> fun(S918LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"cards"/utf8>>, begin S919 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S919(maps:get(cards, S918LocalParamTemp)) end} | [{<<"user_id"/utf8>>, begin S920 = 'Tianjiupai.Models':'encode_user_id'(), S920(maps:get(user_id, S918LocalParamTemp)) end} | []]]) end.
'decode_submit_cards_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"new_state"/utf8>>, 'Tianjiupai.Models':'decode_observable_game_state'()), fun(S921LocalKeyNewState) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"trick_last"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_last'())), fun(S922LocalKeyTrickLast) -> 'SesterlJson.Decode':'pure'(#{new_state => S921LocalKeyNewState, trick_last => S922LocalKeyTrickLast}) end) end).
'encode_submit_cards_response'() -> fun(S923LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"new_state"/utf8>>, begin S924 = 'Tianjiupai.Models':'encode_observable_game_state'(), S924(maps:get(new_state, S923LocalParamTemp)) end} | [{<<"trick_last"/utf8>>, begin S925 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_last'()), S925(maps:get(trick_last, S923LocalParamTemp)) end} | []]]) end.
'decode_table'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S926Temp) -> case S926Temp of <<"DoubleBoth"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S927LocalParamTemp) -> {'double_both', S927LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_big_with_design'()))); <<"DoubleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S928LocalParamTemp) -> {'double_wen', S928LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wen'()))); <<"DoubleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S929LocalParamTemp) -> {'double_wu', S929LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wu_number'()))); <<"Quadruple"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S930LocalParamTemp) -> {'quadruple', S930LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_big'()))); <<"SingleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S931LocalParamTemp) -> {'single_wen', S931LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wen'()))); <<"SingleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S932LocalParamTemp) -> {'single_wu', S932LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wu'()))); <<"Starting"/utf8>> -> 'SesterlJson.Decode':'pure'('starting'); <<"TripleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S933LocalParamTemp) -> {'triple_wen', S933LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_big_with_design'()))); <<"TripleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S934LocalParamTemp) -> {'triple_wu', S934LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_big'()))); <<"Wenzun"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S935LocalParamTemp) -> {'wenzun', S935LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_wenzun_element'()))); <<"Wuzun"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S936LocalParamTemp) -> {'wuzun', S936LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_wuzun_element'()))); S937Other -> 'SesterlJson.Decode':'fail'(S937Other) end end).
'encode_table'() -> fun(S938Temp) -> case S938Temp of {'double_both', S939Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleBoth"/utf8>>)} | [{<<"_arg"/utf8>>, begin S940 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_big_with_design'()), S940(S939Sub) end} | []]]); {'double_wen', S941Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S942 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wen'()), S942(S941Sub) end} | []]]); {'double_wu', S943Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S944 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wu_number'()), S944(S943Sub) end} | []]]); {'quadruple', S945Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Quadruple"/utf8>>)} | [{<<"_arg"/utf8>>, begin S946 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_big'()), S946(S945Sub) end} | []]]); {'single_wen', S947Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SingleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S948 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wen'()), S948(S947Sub) end} | []]]); {'single_wu', S949Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SingleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S950 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wu'()), S950(S949Sub) end} | []]]); 'starting' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Starting"/utf8>>)} | []]); {'triple_wen', S951Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TripleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S952 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_big_with_design'()), S952(S951Sub) end} | []]]); {'triple_wu', S953Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TripleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S954 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_big'()), S954(S953Sub) end} | []]]); {'wenzun', S955Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wenzun"/utf8>>)} | [{<<"_arg"/utf8>>, begin S956 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_wenzun_element'()), S956(S955Sub) end} | []]]); {'wuzun', S957Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wuzun"/utf8>>)} | [{<<"_arg"/utf8>>, begin S958 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_wuzun_element'()), S958(S957Sub) end} | []]]) end end.
'decode_user'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S959LocalKeyUserId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S960LocalKeyUserName) -> 'SesterlJson.Decode':'pure'(#{user_id => S959LocalKeyUserId, user_name => S960LocalKeyUserName}) end) end).
'encode_user'() -> fun(S961LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S962 = 'Tianjiupai.Models':'encode_user_id'(), S962(maps:get(user_id, S961LocalParamTemp)) end} | [{<<"user_name"/utf8>>, begin S963 = 'Tianjiupai.Models':'encode_user_name'(), S963(maps:get(user_name, S961LocalParamTemp)) end} | []]]) end.
'decode_user_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_user_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_user_name'() -> 'Tianjiupai.Models':'decode_string'().
'encode_user_name'() -> 'Tianjiupai.Models':'encode_string'().
'decode_wenzun_element'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S964Temp) -> case S964Temp of <<"WenzunMajor"/utf8>> -> 'SesterlJson.Decode':'pure'('wenzun_major'); <<"WenzunMinor"/utf8>> -> 'SesterlJson.Decode':'pure'('wenzun_minor'); S965Other -> 'SesterlJson.Decode':'fail'(S965Other) end end).
'encode_wenzun_element'() -> fun(S966Temp) -> case S966Temp of 'wenzun_major' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WenzunMajor"/utf8>>)} | []]); 'wenzun_minor' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WenzunMinor"/utf8>>)} | []]) end end.
'decode_wuzun_element'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S967Temp) -> case S967Temp of <<"WuzunUnit"/utf8>> -> 'SesterlJson.Decode':'pure'('wuzun_unit'); S968Other -> 'SesterlJson.Decode':'fail'(S968Other) end end).
'encode_wuzun_element'() -> fun(S969Temp) -> begin 'wuzun_unit' = S969Temp, 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WuzunUnit"/utf8>>)} | []]) end end.
