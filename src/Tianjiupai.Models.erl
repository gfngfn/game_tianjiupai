-module('Tianjiupai.Models').
-export(['decode_big_with_design'/0, 'encode_big_with_design'/0, 'decode_bool'/0, 'encode_bool'/0, 'decode_card'/0, 'encode_card'/0, 'decode_card_big'/0, 'encode_card_big'/0, 'decode_card_wen'/0, 'encode_card_wen'/0, 'decode_card_wu'/0, 'encode_card_wu'/0, 'decode_card_wu_number'/0, 'encode_card_wu_number'/0, 'decode_change_per_trick_end'/0, 'encode_change_per_trick_end'/0, 'decode_change_reason'/0, 'encode_change_reason'/0, 'decode_closed_or'/1, 'encode_closed_or'/1, 'decode_command'/0, 'encode_command'/0, 'decode_comment'/0, 'encode_comment'/0, 'decode_connection'/0, 'encode_connection'/0, 'decode_create_room_request'/0, 'encode_create_room_request'/0, 'decode_create_room_response'/0, 'encode_create_room_response'/0, 'decode_create_user_request'/0, 'encode_create_user_request'/0, 'decode_create_user_response'/0, 'encode_create_user_response'/0, 'decode_design'/0, 'encode_design'/0, 'decode_enter_room_request'/0, 'encode_enter_room_request'/0, 'decode_enter_room_response'/0, 'encode_enter_room_response'/0, 'decode_exit_room_request'/0, 'encode_exit_room_request'/0, 'decode_exit_room_response'/0, 'encode_exit_room_response'/0, 'decode_exposed'/1, 'encode_exposed'/1, 'decode_flag_user'/0, 'encode_flag_user'/0, 'decode_flag_user_option'/0, 'encode_flag_user_option'/0, 'decode_game_index'/0, 'encode_game_index'/0, 'decode_game_meta'/0, 'encode_game_meta'/0, 'decode_game_player'/0, 'encode_game_player'/0, 'decode_get_all_rooms_response'/0, 'encode_get_all_rooms_response'/0, 'decode_get_room_response'/0, 'encode_get_room_response'/0, 'decode_int'/0, 'encode_int'/0, 'decode_last'/0, 'encode_last'/0, 'decode_list'/1, 'encode_list'/1, 'decode_log'/0, 'encode_log'/0, 'decode_midway_enter'/0, 'encode_midway_enter'/0, 'decode_notification'/0, 'encode_notification'/0, 'decode_observable_game_state'/0, 'encode_observable_game_state'/0, 'decode_observable_inning'/0, 'encode_observable_inning'/0, 'decode_observable_inning_state'/0, 'encode_observable_inning_state'/0, 'decode_observable_last'/0, 'encode_observable_last'/0, 'decode_observable_room_state'/0, 'encode_observable_room_state'/0, 'decode_option'/1, 'encode_option'/1, 'decode_per_seat'/1, 'encode_per_seat'/1, 'decode_personal_state'/0, 'encode_personal_state'/0, 'decode_room'/0, 'encode_room'/0, 'decode_room_id'/0, 'encode_room_id'/0, 'decode_room_name'/0, 'encode_room_name'/0, 'decode_room_request'/0, 'encode_room_request'/0, 'decode_room_summary'/0, 'encode_room_summary'/0, 'decode_seat'/0, 'encode_seat'/0, 'decode_snapshot_id'/0, 'encode_snapshot_id'/0, 'decode_special_inning_end'/0, 'encode_special_inning_end'/0, 'decode_special_trick_end'/0, 'encode_special_trick_end'/0, 'decode_string'/0, 'encode_string'/0, 'decode_submission'/0, 'encode_submission'/0, 'decode_submit_cards_request'/0, 'encode_submit_cards_request'/0, 'decode_submit_cards_response'/0, 'encode_submit_cards_response'/0, 'decode_table'/0, 'encode_table'/0, 'decode_user'/0, 'encode_user'/0, 'decode_user_id'/0, 'encode_user_id'/0, 'decode_user_name'/0, 'encode_user_name'/0, 'decode_wenzun_element'/0, 'encode_wenzun_element'/0, 'decode_wuzun_element'/0, 'encode_wuzun_element'/0]).
'decode_big_with_design'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"design"/utf8>>, 'Tianjiupai.Models':'decode_design'()), fun(S572LocalKeyDesign) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"main"/utf8>>, 'Tianjiupai.Models':'decode_card_big'()), fun(S573LocalKeyMain) -> 'SesterlJson.Decode':'pure'(#{design => S572LocalKeyDesign, main => S573LocalKeyMain}) end) end).
'encode_big_with_design'() -> fun(S574LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"design"/utf8>>, begin S575 = 'Tianjiupai.Models':'encode_design'(), S575(maps:get(design, S574LocalParamTemp)) end} | [{<<"main"/utf8>>, begin S576 = 'Tianjiupai.Models':'encode_card_big'(), S576(maps:get(main, S574LocalParamTemp)) end} | []]]) end.
'decode_bool'() -> 'SesterlJson.Decode':'bool'().
'encode_bool'() -> fun(S577V) -> 'SesterlJson.Encode':'bool'(S577V) end.
'decode_card'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S578Temp) -> case S578Temp of <<"Wen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S579LocalParamTemp) -> {'wen', S579LocalParamTemp} end, 'Tianjiupai.Models':'decode_card_wen'())); <<"Wu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S580LocalParamTemp) -> {'wu', S580LocalParamTemp} end, 'Tianjiupai.Models':'decode_card_wu'())); S581Other -> 'SesterlJson.Decode':'fail'(S581Other) end end).
'encode_card'() -> fun(S582Temp) -> case S582Temp of {'wen', S583Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S584 = 'Tianjiupai.Models':'encode_card_wen'(), S584(S583Sub) end} | []]]); {'wu', S585Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S586 = 'Tianjiupai.Models':'encode_card_wu'(), S586(S585Sub) end} | []]]) end end.
'decode_card_big'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S587Temp) -> case S587Temp of <<"BigA"/utf8>> -> 'SesterlJson.Decode':'pure'('big_a'); <<"BigB"/utf8>> -> 'SesterlJson.Decode':'pure'('big_b'); <<"BigC"/utf8>> -> 'SesterlJson.Decode':'pure'('big_c'); <<"BigD"/utf8>> -> 'SesterlJson.Decode':'pure'('big_d'); S588Other -> 'SesterlJson.Decode':'fail'(S588Other) end end).
'encode_card_big'() -> fun(S589Temp) -> case S589Temp of 'big_a' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigA"/utf8>>)} | []]); 'big_b' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigB"/utf8>>)} | []]); 'big_c' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigC"/utf8>>)} | []]); 'big_d' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"BigD"/utf8>>)} | []]) end end.
'decode_card_wen'() -> 'Tianjiupai.Models':'decode_int'().
'encode_card_wen'() -> 'Tianjiupai.Models':'encode_int'().
'decode_card_wu'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"design"/utf8>>, 'Tianjiupai.Models':'decode_design'()), fun(S590LocalKeyDesign) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"number"/utf8>>, 'Tianjiupai.Models':'decode_card_wu_number'()), fun(S591LocalKeyNumber) -> 'SesterlJson.Decode':'pure'(#{design => S590LocalKeyDesign, number => S591LocalKeyNumber}) end) end).
'encode_card_wu'() -> fun(S592LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"design"/utf8>>, begin S593 = 'Tianjiupai.Models':'encode_design'(), S593(maps:get(design, S592LocalParamTemp)) end} | [{<<"number"/utf8>>, begin S594 = 'Tianjiupai.Models':'encode_card_wu_number'(), S594(maps:get(number, S592LocalParamTemp)) end} | []]]) end.
'decode_card_wu_number'() -> 'Tianjiupai.Models':'decode_int'().
'encode_card_wu_number'() -> 'Tianjiupai.Models':'encode_int'().
'decode_change_per_trick_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"change_reason"/utf8>>, 'Tianjiupai.Models':'decode_change_reason'()), fun(S595LocalKeyChangeReason) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"diffs"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_int'())), fun(S596LocalKeyDiffs) -> 'SesterlJson.Decode':'pure'(#{change_reason => S595LocalKeyChangeReason, diffs => S596LocalKeyDiffs}) end) end).
'encode_change_per_trick_end'() -> fun(S597LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"change_reason"/utf8>>, begin S598 = 'Tianjiupai.Models':'encode_change_reason'(), S598(maps:get(change_reason, S597LocalParamTemp)) end} | [{<<"diffs"/utf8>>, begin S599 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_int'()), S599(maps:get(diffs, S597LocalParamTemp)) end} | []]]) end.
'decode_change_reason'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S600Temp) -> case S600Temp of <<"NormalInningEnd"/utf8>> -> 'SesterlJson.Decode':'pure'('normal_inning_end'); <<"SpecialInningEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S601LocalParamTemp) -> {'special_inning_end', S601LocalParamTemp} end, 'Tianjiupai.Models':'decode_special_inning_end'())); <<"SpecialTrickEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S602LocalParamTemp) -> {'special_trick_end', S602LocalParamTemp} end, 'Tianjiupai.Models':'decode_special_trick_end'())); S603Other -> 'SesterlJson.Decode':'fail'(S603Other) end end).
'encode_change_reason'() -> fun(S604Temp) -> case S604Temp of 'normal_inning_end' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NormalInningEnd"/utf8>>)} | []]); {'special_inning_end', S605Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SpecialInningEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S606 = 'Tianjiupai.Models':'encode_special_inning_end'(), S606(S605Sub) end} | []]]); {'special_trick_end', S607Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SpecialTrickEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S608 = 'Tianjiupai.Models':'encode_special_trick_end'(), S608(S607Sub) end} | []]]) end end.
'decode_closed_or'(S609LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S610Temp) -> case S610Temp of <<"Closed"/utf8>> -> 'SesterlJson.Decode':'pure'('closed'); <<"Open"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S611LocalParamTemp) -> {'open', S611LocalParamTemp} end, S609LocalParamA)); S612Other -> 'SesterlJson.Decode':'fail'(S612Other) end end).
'encode_closed_or'(S613LocalParamA) -> fun(S614Temp) -> case S614Temp of 'closed' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Closed"/utf8>>)} | []]); {'open', S615Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Open"/utf8>>)} | [{<<"_arg"/utf8>>, S613LocalParamA(S615Sub)} | []]]) end end.
'decode_command'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S616Temp) -> case S616Temp of <<"CommandAck"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S617LocalParamTemp) -> {'command_ack', S617LocalParamTemp} end, 'Tianjiupai.Models':'decode_snapshot_id'())); <<"CommandComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S618LocalParamTemp) -> {'command_comment', S618LocalParamTemp} end, 'Tianjiupai.Models':'decode_string'())); <<"CommandHeartbeat"/utf8>> -> 'SesterlJson.Decode':'pure'('command_heartbeat'); <<"CommandNextInning"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S619LocalParamTemp) -> {'command_next_inning', S619LocalParamTemp} end, 'Tianjiupai.Models':'decode_snapshot_id'())); S620Other -> 'SesterlJson.Decode':'fail'(S620Other) end end).
'encode_command'() -> fun(S621Temp) -> case S621Temp of {'command_ack', S622Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandAck"/utf8>>)} | [{<<"_arg"/utf8>>, begin S623 = 'Tianjiupai.Models':'encode_snapshot_id'(), S623(S622Sub) end} | []]]); {'command_comment', S624Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S625 = 'Tianjiupai.Models':'encode_string'(), S625(S624Sub) end} | []]]); 'command_heartbeat' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandHeartbeat"/utf8>>)} | []]); {'command_next_inning', S626Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"CommandNextInning"/utf8>>)} | [{<<"_arg"/utf8>>, begin S627 = 'Tianjiupai.Models':'encode_snapshot_id'(), S627(S626Sub) end} | []]]) end end.
'decode_comment'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"from"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S628LocalKeyFrom) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"text"/utf8>>, 'Tianjiupai.Models':'decode_string'()), fun(S629LocalKeyText) -> 'SesterlJson.Decode':'pure'(#{from => S628LocalKeyFrom, text => S629LocalKeyText}) end) end).
'encode_comment'() -> fun(S630LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"from"/utf8>>, begin S631 = 'Tianjiupai.Models':'encode_user'(), S631(maps:get(from, S630LocalParamTemp)) end} | [{<<"text"/utf8>>, begin S632 = 'Tianjiupai.Models':'encode_string'(), S632(maps:get(text, S630LocalParamTemp)) end} | []]]) end.
'decode_connection'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_connected"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S633LocalKeyIsConnected) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S634LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{is_connected => S633LocalKeyIsConnected, user => S634LocalKeyUser}) end) end).
'encode_connection'() -> fun(S635LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_connected"/utf8>>, begin S636 = 'Tianjiupai.Models':'encode_bool'(), S636(maps:get(is_connected, S635LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S637 = 'Tianjiupai.Models':'encode_user'(), S637(maps:get(user, S635LocalParamTemp)) end} | []]]) end.
'decode_create_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_name"/utf8>>, 'Tianjiupai.Models':'decode_room_name'()), fun(S638LocalKeyRoomName) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S639LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{room_name => S638LocalKeyRoomName, user_id => S639LocalKeyUserId}) end) end).
'encode_create_room_request'() -> fun(S640LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_name"/utf8>>, begin S641 = 'Tianjiupai.Models':'encode_room_name'(), S641(maps:get(room_name, S640LocalParamTemp)) end} | [{<<"user_id"/utf8>>, begin S642 = 'Tianjiupai.Models':'encode_user_id'(), S642(maps:get(user_id, S640LocalParamTemp)) end} | []]]) end.
'decode_create_room_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_id"/utf8>>, 'Tianjiupai.Models':'decode_room_id'()), fun(S643LocalKeyRoomId) -> 'SesterlJson.Decode':'pure'(#{room_id => S643LocalKeyRoomId}) end).
'encode_create_room_response'() -> fun(S644LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_id"/utf8>>, begin S645 = 'Tianjiupai.Models':'encode_room_id'(), S645(maps:get(room_id, S644LocalParamTemp)) end} | []]) end.
'decode_create_user_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S646LocalKeyUserName) -> 'SesterlJson.Decode':'pure'(#{user_name => S646LocalKeyUserName}) end).
'encode_create_user_request'() -> fun(S647LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_name"/utf8>>, begin S648 = 'Tianjiupai.Models':'encode_user_name'(), S648(maps:get(user_name, S647LocalParamTemp)) end} | []]) end.
'decode_create_user_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S649LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S649LocalKeyUserId}) end).
'encode_create_user_response'() -> fun(S650LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S651 = 'Tianjiupai.Models':'encode_user_id'(), S651(maps:get(user_id, S650LocalParamTemp)) end} | []]) end.
'decode_design'() -> 'Tianjiupai.Models':'decode_bool'().
'encode_design'() -> 'Tianjiupai.Models':'encode_bool'().
'decode_enter_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S652LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S652LocalKeyUserId}) end).
'encode_enter_room_request'() -> fun(S653LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S654 = 'Tianjiupai.Models':'encode_user_id'(), S654(maps:get(user_id, S653LocalParamTemp)) end} | []]) end.
'decode_enter_room_response'() -> 'Tianjiupai.Models':'decode_personal_state'().
'encode_enter_room_response'() -> 'Tianjiupai.Models':'encode_personal_state'().
'decode_exit_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S655LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{user_id => S655LocalKeyUserId}) end).
'encode_exit_room_request'() -> fun(S656LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S657 = 'Tianjiupai.Models':'encode_user_id'(), S657(maps:get(user_id, S656LocalParamTemp)) end} | []]) end.
'decode_exit_room_response'() -> 'SesterlJson.Decode':'pure'(ok).
'encode_exit_room_response'() -> fun(S658LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([]) end.
'decode_exposed'(S659LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"first"/utf8>>, S659LocalParamA), fun(S660LocalKeyFirst) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"subsequent"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_closed_or'(S659LocalParamA))), fun(S661LocalKeySubsequent) -> 'SesterlJson.Decode':'pure'(#{first => S660LocalKeyFirst, subsequent => S661LocalKeySubsequent}) end) end).
'encode_exposed'(S662LocalParamA) -> fun(S663LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"first"/utf8>>, S662LocalParamA(maps:get(first, S663LocalParamTemp))} | [{<<"subsequent"/utf8>>, begin S664 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_closed_or'(S662LocalParamA)), S664(maps:get(subsequent, S663LocalParamTemp)) end} | []]]) end.
'decode_flag_user'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"belongs_to"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_room_id'())), fun(S665LocalKeyBelongsTo) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S666LocalKeyId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S667LocalKeyName) -> 'SesterlJson.Decode':'pure'(#{belongs_to => S665LocalKeyBelongsTo, id => S666LocalKeyId, name => S667LocalKeyName}) end) end) end).
'encode_flag_user'() -> fun(S668LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"belongs_to"/utf8>>, begin S669 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_room_id'()), S669(maps:get(belongs_to, S668LocalParamTemp)) end} | [{<<"id"/utf8>>, begin S670 = 'Tianjiupai.Models':'encode_user_id'(), S670(maps:get(id, S668LocalParamTemp)) end} | [{<<"name"/utf8>>, begin S671 = 'Tianjiupai.Models':'encode_user_name'(), S671(maps:get(name, S668LocalParamTemp)) end} | []]]]) end.
'decode_flag_user_option'() -> 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_flag_user'()).
'encode_flag_user_option'() -> 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_flag_user'()).
'decode_game_index'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"inning_index"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S672LocalKeyInningIndex) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"num_consecutives"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S673LocalKeyNumConsecutives) -> 'SesterlJson.Decode':'pure'(#{inning_index => S672LocalKeyInningIndex, num_consecutives => S673LocalKeyNumConsecutives}) end) end).
'encode_game_index'() -> fun(S674LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"inning_index"/utf8>>, begin S675 = 'Tianjiupai.Models':'encode_int'(), S675(maps:get(inning_index, S674LocalParamTemp)) end} | [{<<"num_consecutives"/utf8>>, begin S676 = 'Tianjiupai.Models':'encode_int'(), S676(maps:get(num_consecutives, S674LocalParamTemp)) end} | []]]) end.
'decode_game_meta'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"inning_index"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S677LocalKeyInningIndex) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"num_consecutives"/utf8>>, 'Tianjiupai.Models':'decode_int'()), fun(S678LocalKeyNumConsecutives) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"parent_seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S679LocalKeyParentSeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"players"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_game_player'()))), fun(S680LocalKeyPlayers) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"scores"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_int'())), fun(S681LocalKeyScores) -> 'SesterlJson.Decode':'pure'(#{inning_index => S677LocalKeyInningIndex, num_consecutives => S678LocalKeyNumConsecutives, parent_seat => S679LocalKeyParentSeat, players => S680LocalKeyPlayers, scores => S681LocalKeyScores}) end) end) end) end) end).
'encode_game_meta'() -> fun(S682LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"inning_index"/utf8>>, begin S683 = 'Tianjiupai.Models':'encode_int'(), S683(maps:get(inning_index, S682LocalParamTemp)) end} | [{<<"num_consecutives"/utf8>>, begin S684 = 'Tianjiupai.Models':'encode_int'(), S684(maps:get(num_consecutives, S682LocalParamTemp)) end} | [{<<"parent_seat"/utf8>>, begin S685 = 'Tianjiupai.Models':'encode_seat'(), S685(maps:get(parent_seat, S682LocalParamTemp)) end} | [{<<"players"/utf8>>, begin S686 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_game_player'())), S686(maps:get(players, S682LocalParamTemp)) end} | [{<<"scores"/utf8>>, begin S687 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_int'()), S687(maps:get(scores, S682LocalParamTemp)) end} | []]]]]]) end.
'decode_game_player'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_connected"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S688LocalKeyIsConnected) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S689LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{is_connected => S688LocalKeyIsConnected, user => S689LocalKeyUser}) end) end).
'encode_game_player'() -> fun(S690LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_connected"/utf8>>, begin S691 = 'Tianjiupai.Models':'encode_bool'(), S691(maps:get(is_connected, S690LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S692 = 'Tianjiupai.Models':'encode_user'(), S692(maps:get(user, S690LocalParamTemp)) end} | []]]) end.
'decode_get_all_rooms_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"rooms"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_room_summary'())), fun(S693LocalKeyRooms) -> 'SesterlJson.Decode':'pure'(#{rooms => S693LocalKeyRooms}) end).
'encode_get_all_rooms_response'() -> fun(S694LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"rooms"/utf8>>, begin S695 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_room_summary'()), S695(maps:get(rooms, S694LocalParamTemp)) end} | []]) end.
'decode_get_room_response'() -> 'Tianjiupai.Models':'decode_personal_state'().
'encode_get_room_response'() -> 'Tianjiupai.Models':'encode_personal_state'().
'decode_int'() -> 'SesterlJson.Decode':'int'().
'encode_int'() -> fun(S696V) -> 'SesterlJson.Encode':'int'(S696V) end.
'decode_last'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"changes"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_change_per_trick_end'())), fun(S697LocalKeyChanges) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"hand"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S698LocalKeyHand) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S699LocalKeyTable) -> 'SesterlJson.Decode':'pure'(#{changes => S697LocalKeyChanges, hand => S698LocalKeyHand, table => S699LocalKeyTable}) end) end) end).
'encode_last'() -> fun(S700LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"changes"/utf8>>, begin S701 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_change_per_trick_end'()), S701(maps:get(changes, S700LocalParamTemp)) end} | [{<<"hand"/utf8>>, begin S702 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S702(maps:get(hand, S700LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S703 = 'Tianjiupai.Models':'encode_table'(), S703(maps:get(table, S700LocalParamTemp)) end} | []]]]) end.
'decode_list'(S704X) -> 'SesterlJson.Decode':'list'(S704X).
'encode_list'(S705Enc) -> fun(S706V) -> 'SesterlJson.Encode':'list'('SesterlStdlib.List':'map'(S705Enc, S706V)) end.
'decode_log'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S707Temp) -> case S707Temp of <<"LogChanges"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S708LocalParamTemp) -> {'log_changes', S708LocalParamTemp} end, 'Tianjiupai.Models':'decode_change_per_trick_end'())); <<"LogComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S709LocalParamTemp) -> {'log_comment', S709LocalParamTemp} end, 'Tianjiupai.Models':'decode_comment'())); <<"LogConnection"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S710LocalParamTemp) -> {'log_connection', S710LocalParamTemp} end, 'Tianjiupai.Models':'decode_connection'())); <<"LogEntered"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S711LocalParamTemp) -> {'log_entered', S711LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"LogExited"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S712LocalParamTemp) -> {'log_exited', S712LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"LogGameStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S713LocalParamTemp) -> {'log_game_start', S713LocalParamTemp} end, 'Tianjiupai.Models':'decode_game_index'())); S714Other -> 'SesterlJson.Decode':'fail'(S714Other) end end).
'encode_log'() -> fun(S715Temp) -> case S715Temp of {'log_changes', S716Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogChanges"/utf8>>)} | [{<<"_arg"/utf8>>, begin S717 = 'Tianjiupai.Models':'encode_change_per_trick_end'(), S717(S716Sub) end} | []]]); {'log_comment', S718Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S719 = 'Tianjiupai.Models':'encode_comment'(), S719(S718Sub) end} | []]]); {'log_connection', S720Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogConnection"/utf8>>)} | [{<<"_arg"/utf8>>, begin S721 = 'Tianjiupai.Models':'encode_connection'(), S721(S720Sub) end} | []]]); {'log_entered', S722Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogEntered"/utf8>>)} | [{<<"_arg"/utf8>>, begin S723 = 'Tianjiupai.Models':'encode_user'(), S723(S722Sub) end} | []]]); {'log_exited', S724Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogExited"/utf8>>)} | [{<<"_arg"/utf8>>, begin S725 = 'Tianjiupai.Models':'encode_user'(), S725(S724Sub) end} | []]]); {'log_game_start', S726Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"LogGameStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S727 = 'Tianjiupai.Models':'encode_game_index'(), S727(S726Sub) end} | []]]) end end.
'decode_midway_enter'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S728LocalKeySeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user"/utf8>>, 'Tianjiupai.Models':'decode_user'()), fun(S729LocalKeyUser) -> 'SesterlJson.Decode':'pure'(#{seat => S728LocalKeySeat, user => S729LocalKeyUser}) end) end).
'encode_midway_enter'() -> fun(S730LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"seat"/utf8>>, begin S731 = 'Tianjiupai.Models':'encode_seat'(), S731(maps:get(seat, S730LocalParamTemp)) end} | [{<<"user"/utf8>>, begin S732 = 'Tianjiupai.Models':'encode_user'(), S732(maps:get(user, S730LocalParamTemp)) end} | []]]) end.
'decode_notification'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S733Temp) -> case S733Temp of <<"NotifyComment"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S734LocalParamTemp) -> {'notify_comment', S734LocalParamTemp} end, 'Tianjiupai.Models':'decode_comment'())); <<"NotifyConnection"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S735LocalParamTemp) -> {'notify_connection', S735LocalParamTemp} end, 'Tianjiupai.Models':'decode_connection'())); <<"NotifyEntered"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S736LocalParamTemp) -> {'notify_entered', S736LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"NotifyEnteredMidway"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S737LocalParamTemp) -> {'notify_entered_midway', S737LocalParamTemp} end, 'Tianjiupai.Models':'decode_midway_enter'())); <<"NotifyExited"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S738LocalParamTemp) -> {'notify_exited', S738LocalParamTemp} end, 'Tianjiupai.Models':'decode_user'())); <<"NotifyGameStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S739LocalParamTemp) -> {'notify_game_start', S739LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_game_state'())); <<"NotifyNextStep"/utf8>> -> 'SesterlJson.Decode':'pure'('notify_next_step'); <<"NotifyRoomClose"/utf8>> -> 'SesterlJson.Decode':'pure'('notify_room_close'); <<"NotifySubmission"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S740LocalParamTemp) -> {'notify_submission', S740LocalParamTemp} end, 'Tianjiupai.Models':'decode_submission'())); S741Other -> 'SesterlJson.Decode':'fail'(S741Other) end end).
'encode_notification'() -> fun(S742Temp) -> case S742Temp of {'notify_comment', S743Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyComment"/utf8>>)} | [{<<"_arg"/utf8>>, begin S744 = 'Tianjiupai.Models':'encode_comment'(), S744(S743Sub) end} | []]]); {'notify_connection', S745Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyConnection"/utf8>>)} | [{<<"_arg"/utf8>>, begin S746 = 'Tianjiupai.Models':'encode_connection'(), S746(S745Sub) end} | []]]); {'notify_entered', S747Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyEntered"/utf8>>)} | [{<<"_arg"/utf8>>, begin S748 = 'Tianjiupai.Models':'encode_user'(), S748(S747Sub) end} | []]]); {'notify_entered_midway', S749Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyEnteredMidway"/utf8>>)} | [{<<"_arg"/utf8>>, begin S750 = 'Tianjiupai.Models':'encode_midway_enter'(), S750(S749Sub) end} | []]]); {'notify_exited', S751Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyExited"/utf8>>)} | [{<<"_arg"/utf8>>, begin S752 = 'Tianjiupai.Models':'encode_user'(), S752(S751Sub) end} | []]]); {'notify_game_start', S753Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyGameStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S754 = 'Tianjiupai.Models':'encode_observable_game_state'(), S754(S753Sub) end} | []]]); 'notify_next_step' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyNextStep"/utf8>>)} | []]); 'notify_room_close' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifyRoomClose"/utf8>>)} | []]); {'notify_submission', S755Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"NotifySubmission"/utf8>>)} | [{<<"_arg"/utf8>>, begin S756 = 'Tianjiupai.Models':'encode_submission'(), S756(S755Sub) end} | []]]) end end.
'decode_observable_game_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"meta"/utf8>>, 'Tianjiupai.Models':'decode_game_meta'()), fun(S757LocalKeyMeta) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"observable_inning"/utf8>>, 'Tianjiupai.Models':'decode_observable_inning'()), fun(S758LocalKeyObservableInning) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"snapshot_id"/utf8>>, 'Tianjiupai.Models':'decode_snapshot_id'()), fun(S759LocalKeySnapshotId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"synchronizing"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S760LocalKeySynchronizing) -> 'SesterlJson.Decode':'pure'(#{meta => S757LocalKeyMeta, observable_inning => S758LocalKeyObservableInning, snapshot_id => S759LocalKeySnapshotId, synchronizing => S760LocalKeySynchronizing}) end) end) end) end).
'encode_observable_game_state'() -> fun(S761LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"meta"/utf8>>, begin S762 = 'Tianjiupai.Models':'encode_game_meta'(), S762(maps:get(meta, S761LocalParamTemp)) end} | [{<<"observable_inning"/utf8>>, begin S763 = 'Tianjiupai.Models':'encode_observable_inning'(), S763(maps:get(observable_inning, S761LocalParamTemp)) end} | [{<<"snapshot_id"/utf8>>, begin S764 = 'Tianjiupai.Models':'encode_snapshot_id'(), S764(maps:get(snapshot_id, S761LocalParamTemp)) end} | [{<<"synchronizing"/utf8>>, begin S765 = 'Tianjiupai.Models':'encode_bool'(), S765(maps:get(synchronizing, S761LocalParamTemp)) end} | []]]]]) end.
'decode_observable_inning'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S766Temp) -> case S766Temp of <<"ObservableDuringInning"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S767LocalParamTemp) -> {'observable_during_inning', S767LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_inning_state'())); <<"ObservableInningEnd"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S768LocalParamTemp) -> {'observable_inning_end', S768LocalParamTemp} end, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())))); S769Other -> 'SesterlJson.Decode':'fail'(S769Other) end end).
'encode_observable_inning'() -> fun(S770Temp) -> case S770Temp of {'observable_during_inning', S771Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"ObservableDuringInning"/utf8>>)} | [{<<"_arg"/utf8>>, begin S772 = 'Tianjiupai.Models':'encode_observable_inning_state'(), S772(S771Sub) end} | []]]); {'observable_inning_end', S773Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"ObservableInningEnd"/utf8>>)} | [{<<"_arg"/utf8>>, begin S774 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'())), S774(S773Sub) end} | []]]) end end.
'decode_observable_inning_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"gains"/utf8>>, 'Tianjiupai.Models':'decode_per_seat'('Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'()))), fun(S775LocalKeyGains) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"starts_at"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S776LocalKeyStartsAt) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S777LocalKeyTable) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"your_hand"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S778LocalKeyYourHand) -> 'SesterlJson.Decode':'pure'(#{gains => S775LocalKeyGains, starts_at => S776LocalKeyStartsAt, table => S777LocalKeyTable, your_hand => S778LocalKeyYourHand}) end) end) end) end).
'encode_observable_inning_state'() -> fun(S779LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"gains"/utf8>>, begin S780 = 'Tianjiupai.Models':'encode_per_seat'('Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'())), S780(maps:get(gains, S779LocalParamTemp)) end} | [{<<"starts_at"/utf8>>, begin S781 = 'Tianjiupai.Models':'encode_seat'(), S781(maps:get(starts_at, S779LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S782 = 'Tianjiupai.Models':'encode_table'(), S782(maps:get(table, S779LocalParamTemp)) end} | [{<<"your_hand"/utf8>>, begin S783 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S783(maps:get(your_hand, S779LocalParamTemp)) end} | []]]]]) end.
'decode_observable_last'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"changes"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_change_per_trick_end'())), fun(S784LocalKeyChanges) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"table"/utf8>>, 'Tianjiupai.Models':'decode_table'()), fun(S785LocalKeyTable) -> 'SesterlJson.Decode':'pure'(#{changes => S784LocalKeyChanges, table => S785LocalKeyTable}) end) end).
'encode_observable_last'() -> fun(S786LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"changes"/utf8>>, begin S787 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_change_per_trick_end'()), S787(maps:get(changes, S786LocalParamTemp)) end} | [{<<"table"/utf8>>, begin S788 = 'Tianjiupai.Models':'encode_table'(), S788(maps:get(table, S786LocalParamTemp)) end} | []]]) end.
'decode_observable_room_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S789Temp) -> case S789Temp of <<"PlayingGame"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S790LocalParamTemp) -> {'playing_game', S790LocalParamTemp} end, 'Tianjiupai.Models':'decode_observable_game_state'())); <<"WaitingStart"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S791LocalParamTemp) -> {'waiting_start', S791LocalParamTemp} end, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_user'()))); S792Other -> 'SesterlJson.Decode':'fail'(S792Other) end end).
'encode_observable_room_state'() -> fun(S793Temp) -> case S793Temp of {'playing_game', S794Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"PlayingGame"/utf8>>)} | [{<<"_arg"/utf8>>, begin S795 = 'Tianjiupai.Models':'encode_observable_game_state'(), S795(S794Sub) end} | []]]); {'waiting_start', S796Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WaitingStart"/utf8>>)} | [{<<"_arg"/utf8>>, begin S797 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_user'()), S797(S796Sub) end} | []]]) end end.
'decode_option'(S798X) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S799Temp) -> case S799Temp of <<"None"/utf8>> -> 'SesterlJson.Decode':'pure'('error'); <<"Some"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S800Temp) -> {'ok', S800Temp} end, S798X)); S801Other -> 'SesterlJson.Decode':'fail'(S801Other) end end).
'encode_option'(S802Enc) -> fun(S803V) -> case S803V of 'error' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"None"/utf8>>)} | []]); {'ok', S804Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Some"/utf8>>)} | [{<<"_arg"/utf8>>, S802Enc(S804Sub)} | []]]) end end.
'decode_per_seat'(S805LocalParamA) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"east"/utf8>>, S805LocalParamA), fun(S806LocalKeyEast) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"north"/utf8>>, S805LocalParamA), fun(S807LocalKeyNorth) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"south"/utf8>>, S805LocalParamA), fun(S808LocalKeySouth) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"west"/utf8>>, S805LocalParamA), fun(S809LocalKeyWest) -> 'SesterlJson.Decode':'pure'(#{east => S806LocalKeyEast, north => S807LocalKeyNorth, south => S808LocalKeySouth, west => S809LocalKeyWest}) end) end) end) end).
'encode_per_seat'(S810LocalParamA) -> fun(S811LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"east"/utf8>>, S810LocalParamA(maps:get(east, S811LocalParamTemp))} | [{<<"north"/utf8>>, S810LocalParamA(maps:get(north, S811LocalParamTemp))} | [{<<"south"/utf8>>, S810LocalParamA(maps:get(south, S811LocalParamTemp))} | [{<<"west"/utf8>>, S810LocalParamA(maps:get(west, S811LocalParamTemp))} | []]]]]) end.
'decode_personal_state'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"game"/utf8>>, 'Tianjiupai.Models':'decode_observable_room_state'()), fun(S812LocalKeyGame) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"logs"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_log'())), fun(S813LocalKeyLogs) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room"/utf8>>, 'Tianjiupai.Models':'decode_room'()), fun(S814LocalKeyRoom) -> 'SesterlJson.Decode':'pure'(#{game => S812LocalKeyGame, logs => S813LocalKeyLogs, room => S814LocalKeyRoom}) end) end) end).
'encode_personal_state'() -> fun(S815LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"game"/utf8>>, begin S816 = 'Tianjiupai.Models':'encode_observable_room_state'(), S816(maps:get(game, S815LocalParamTemp)) end} | [{<<"logs"/utf8>>, begin S817 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_log'()), S817(maps:get(logs, S815LocalParamTemp)) end} | [{<<"room"/utf8>>, begin S818 = 'Tianjiupai.Models':'encode_room'(), S818(maps:get(room, S815LocalParamTemp)) end} | []]]]) end.
'decode_room'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_id"/utf8>>, 'Tianjiupai.Models':'decode_room_id'()), fun(S819LocalKeyRoomId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room_name"/utf8>>, 'Tianjiupai.Models':'decode_room_name'()), fun(S820LocalKeyRoomName) -> 'SesterlJson.Decode':'pure'(#{room_id => S819LocalKeyRoomId, room_name => S820LocalKeyRoomName}) end) end).
'encode_room'() -> fun(S821LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"room_id"/utf8>>, begin S822 = 'Tianjiupai.Models':'encode_room_id'(), S822(maps:get(room_id, S821LocalParamTemp)) end} | [{<<"room_name"/utf8>>, begin S823 = 'Tianjiupai.Models':'encode_room_name'(), S823(maps:get(room_name, S821LocalParamTemp)) end} | []]]) end.
'decode_room_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_room_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_room_name'() -> 'Tianjiupai.Models':'decode_string'().
'encode_room_name'() -> 'Tianjiupai.Models':'encode_string'().
'decode_room_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S824Temp) -> case S824Temp of <<"RoomRequestToEnterRoom"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S825LocalParamTemp) -> {'room_request_to_enter_room', S825LocalParamTemp} end, 'Tianjiupai.Models':'decode_enter_room_request'())); <<"RoomRequestToExitRoom"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S826LocalParamTemp) -> {'room_request_to_exit_room', S826LocalParamTemp} end, 'Tianjiupai.Models':'decode_enter_room_request'())); <<"RoomRequestToSubmitCards"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S827LocalParamTemp) -> {'room_request_to_submit_cards', S827LocalParamTemp} end, 'Tianjiupai.Models':'decode_submit_cards_request'())); S828Other -> 'SesterlJson.Decode':'fail'(S828Other) end end).
'encode_room_request'() -> fun(S829Temp) -> case S829Temp of {'room_request_to_enter_room', S830Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToEnterRoom"/utf8>>)} | [{<<"_arg"/utf8>>, begin S831 = 'Tianjiupai.Models':'encode_enter_room_request'(), S831(S830Sub) end} | []]]); {'room_request_to_exit_room', S832Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToExitRoom"/utf8>>)} | [{<<"_arg"/utf8>>, begin S833 = 'Tianjiupai.Models':'encode_enter_room_request'(), S833(S832Sub) end} | []]]); {'room_request_to_submit_cards', S834Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"RoomRequestToSubmitCards"/utf8>>)} | [{<<"_arg"/utf8>>, begin S835 = 'Tianjiupai.Models':'encode_submit_cards_request'(), S835(S834Sub) end} | []]]) end end.
'decode_room_summary'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"is_playing"/utf8>>, 'Tianjiupai.Models':'decode_bool'()), fun(S836LocalKeyIsPlaying) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"members"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_user'())), fun(S837LocalKeyMembers) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"room"/utf8>>, 'Tianjiupai.Models':'decode_room'()), fun(S838LocalKeyRoom) -> 'SesterlJson.Decode':'pure'(#{is_playing => S836LocalKeyIsPlaying, members => S837LocalKeyMembers, room => S838LocalKeyRoom}) end) end) end).
'encode_room_summary'() -> fun(S839LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"is_playing"/utf8>>, begin S840 = 'Tianjiupai.Models':'encode_bool'(), S840(maps:get(is_playing, S839LocalParamTemp)) end} | [{<<"members"/utf8>>, begin S841 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_user'()), S841(maps:get(members, S839LocalParamTemp)) end} | [{<<"room"/utf8>>, begin S842 = 'Tianjiupai.Models':'encode_room'(), S842(maps:get(room, S839LocalParamTemp)) end} | []]]]) end.
'decode_seat'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S843Temp) -> case S843Temp of <<"SeatA"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_a'); <<"SeatB"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_b'); <<"SeatC"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_c'); <<"SeatD"/utf8>> -> 'SesterlJson.Decode':'pure'('seat_d'); S844Other -> 'SesterlJson.Decode':'fail'(S844Other) end end).
'encode_seat'() -> fun(S845Temp) -> case S845Temp of 'seat_a' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatA"/utf8>>)} | []]); 'seat_b' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatB"/utf8>>)} | []]); 'seat_c' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatC"/utf8>>)} | []]); 'seat_d' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SeatD"/utf8>>)} | []]) end end.
'decode_snapshot_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_snapshot_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_special_inning_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S846Temp) -> case S846Temp of <<"InningEndWithBazhijie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_bazhijie'); <<"InningEndWithQizhijie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_qizhijie'); <<"InningEndWithSidahe"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_sidahe'); <<"InningEndWithYaojie"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_yaojie'); <<"InningEndWithZhizun"/utf8>> -> 'SesterlJson.Decode':'pure'('inning_end_with_zhizun'); S847Other -> 'SesterlJson.Decode':'fail'(S847Other) end end).
'encode_special_inning_end'() -> fun(S848Temp) -> case S848Temp of 'inning_end_with_bazhijie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithBazhijie"/utf8>>)} | []]); 'inning_end_with_qizhijie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithQizhijie"/utf8>>)} | []]); 'inning_end_with_sidahe' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithSidahe"/utf8>>)} | []]); 'inning_end_with_yaojie' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithYaojie"/utf8>>)} | []]); 'inning_end_with_zhizun' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"InningEndWithZhizun"/utf8>>)} | []]) end end.
'decode_special_trick_end'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S849Temp) -> case S849Temp of <<"TrickEndWithSidahe"/utf8>> -> 'SesterlJson.Decode':'pure'('trick_end_with_sidahe'); <<"TrickEndWithZhizun"/utf8>> -> 'SesterlJson.Decode':'pure'('trick_end_with_zhizun'); S850Other -> 'SesterlJson.Decode':'fail'(S850Other) end end).
'encode_special_trick_end'() -> fun(S851Temp) -> case S851Temp of 'trick_end_with_sidahe' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TrickEndWithSidahe"/utf8>>)} | []]); 'trick_end_with_zhizun' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TrickEndWithZhizun"/utf8>>)} | []]) end end.
'decode_string'() -> 'SesterlJson.Decode':'string'().
'encode_string'() -> fun(S852V) -> 'SesterlJson.Encode':'string'(S852V) end.
'decode_submission'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"new_state"/utf8>>, 'Tianjiupai.Models':'decode_observable_game_state'()), fun(S853LocalKeyNewState) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"seat"/utf8>>, 'Tianjiupai.Models':'decode_seat'()), fun(S854LocalKeySeat) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"submitted"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_card'()))), fun(S855LocalKeySubmitted) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"trick_last"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_observable_last'())), fun(S856LocalKeyTrickLast) -> 'SesterlJson.Decode':'pure'(#{new_state => S853LocalKeyNewState, seat => S854LocalKeySeat, submitted => S855LocalKeySubmitted, trick_last => S856LocalKeyTrickLast}) end) end) end) end).
'encode_submission'() -> fun(S857LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"new_state"/utf8>>, begin S858 = 'Tianjiupai.Models':'encode_observable_game_state'(), S858(maps:get(new_state, S857LocalParamTemp)) end} | [{<<"seat"/utf8>>, begin S859 = 'Tianjiupai.Models':'encode_seat'(), S859(maps:get(seat, S857LocalParamTemp)) end} | [{<<"submitted"/utf8>>, begin S860 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_card'())), S860(maps:get(submitted, S857LocalParamTemp)) end} | [{<<"trick_last"/utf8>>, begin S861 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_observable_last'()), S861(maps:get(trick_last, S857LocalParamTemp)) end} | []]]]]) end.
'decode_submit_cards_request'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"cards"/utf8>>, 'Tianjiupai.Models':'decode_list'('Tianjiupai.Models':'decode_card'())), fun(S862LocalKeyCards) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S863LocalKeyUserId) -> 'SesterlJson.Decode':'pure'(#{cards => S862LocalKeyCards, user_id => S863LocalKeyUserId}) end) end).
'encode_submit_cards_request'() -> fun(S864LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"cards"/utf8>>, begin S865 = 'Tianjiupai.Models':'encode_list'('Tianjiupai.Models':'encode_card'()), S865(maps:get(cards, S864LocalParamTemp)) end} | [{<<"user_id"/utf8>>, begin S866 = 'Tianjiupai.Models':'encode_user_id'(), S866(maps:get(user_id, S864LocalParamTemp)) end} | []]]) end.
'decode_submit_cards_response'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"new_state"/utf8>>, 'Tianjiupai.Models':'decode_observable_game_state'()), fun(S867LocalKeyNewState) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"trick_last"/utf8>>, 'Tianjiupai.Models':'decode_option'('Tianjiupai.Models':'decode_last'())), fun(S868LocalKeyTrickLast) -> 'SesterlJson.Decode':'pure'(#{new_state => S867LocalKeyNewState, trick_last => S868LocalKeyTrickLast}) end) end).
'encode_submit_cards_response'() -> fun(S869LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"new_state"/utf8>>, begin S870 = 'Tianjiupai.Models':'encode_observable_game_state'(), S870(maps:get(new_state, S869LocalParamTemp)) end} | [{<<"trick_last"/utf8>>, begin S871 = 'Tianjiupai.Models':'encode_option'('Tianjiupai.Models':'encode_last'()), S871(maps:get(trick_last, S869LocalParamTemp)) end} | []]]) end.
'decode_table'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S872Temp) -> case S872Temp of <<"DoubleBoth"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S873LocalParamTemp) -> {'double_both', S873LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_big_with_design'()))); <<"DoubleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S874LocalParamTemp) -> {'double_wen', S874LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wen'()))); <<"DoubleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S875LocalParamTemp) -> {'double_wu', S875LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wu_number'()))); <<"Quadruple"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S876LocalParamTemp) -> {'quadruple', S876LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_big'()))); <<"SingleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S877LocalParamTemp) -> {'single_wen', S877LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wen'()))); <<"SingleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S878LocalParamTemp) -> {'single_wu', S878LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_wu'()))); <<"Starting"/utf8>> -> 'SesterlJson.Decode':'pure'('starting'); <<"TripleWen"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S879LocalParamTemp) -> {'triple_wen', S879LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_big_with_design'()))); <<"TripleWu"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S880LocalParamTemp) -> {'triple_wu', S880LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_card_big'()))); <<"Wenzun"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S881LocalParamTemp) -> {'wenzun', S881LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_wenzun_element'()))); <<"Wuzun"/utf8>> -> 'SesterlJson.Decode':'field'(<<"_arg"/utf8>>, 'SesterlJson.Decode':'map'(fun(S882LocalParamTemp) -> {'wuzun', S882LocalParamTemp} end, 'Tianjiupai.Models':'decode_exposed'('Tianjiupai.Models':'decode_wuzun_element'()))); S883Other -> 'SesterlJson.Decode':'fail'(S883Other) end end).
'encode_table'() -> fun(S884Temp) -> case S884Temp of {'double_both', S885Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleBoth"/utf8>>)} | [{<<"_arg"/utf8>>, begin S886 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_big_with_design'()), S886(S885Sub) end} | []]]); {'double_wen', S887Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S888 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wen'()), S888(S887Sub) end} | []]]); {'double_wu', S889Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"DoubleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S890 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wu_number'()), S890(S889Sub) end} | []]]); {'quadruple', S891Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Quadruple"/utf8>>)} | [{<<"_arg"/utf8>>, begin S892 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_big'()), S892(S891Sub) end} | []]]); {'single_wen', S893Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SingleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S894 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wen'()), S894(S893Sub) end} | []]]); {'single_wu', S895Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"SingleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S896 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_wu'()), S896(S895Sub) end} | []]]); 'starting' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Starting"/utf8>>)} | []]); {'triple_wen', S897Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TripleWen"/utf8>>)} | [{<<"_arg"/utf8>>, begin S898 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_big_with_design'()), S898(S897Sub) end} | []]]); {'triple_wu', S899Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"TripleWu"/utf8>>)} | [{<<"_arg"/utf8>>, begin S900 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_card_big'()), S900(S899Sub) end} | []]]); {'wenzun', S901Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wenzun"/utf8>>)} | [{<<"_arg"/utf8>>, begin S902 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_wenzun_element'()), S902(S901Sub) end} | []]]); {'wuzun', S903Sub} -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"Wuzun"/utf8>>)} | [{<<"_arg"/utf8>>, begin S904 = 'Tianjiupai.Models':'encode_exposed'('Tianjiupai.Models':'encode_wuzun_element'()), S904(S903Sub) end} | []]]) end end.
'decode_user'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_id"/utf8>>, 'Tianjiupai.Models':'decode_user_id'()), fun(S905LocalKeyUserId) -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"user_name"/utf8>>, 'Tianjiupai.Models':'decode_user_name'()), fun(S906LocalKeyUserName) -> 'SesterlJson.Decode':'pure'(#{user_id => S905LocalKeyUserId, user_name => S906LocalKeyUserName}) end) end).
'encode_user'() -> fun(S907LocalParamTemp) -> 'SesterlJson.Encode':'object_from_list'([{<<"user_id"/utf8>>, begin S908 = 'Tianjiupai.Models':'encode_user_id'(), S908(maps:get(user_id, S907LocalParamTemp)) end} | [{<<"user_name"/utf8>>, begin S909 = 'Tianjiupai.Models':'encode_user_name'(), S909(maps:get(user_name, S907LocalParamTemp)) end} | []]]) end.
'decode_user_id'() -> 'Tianjiupai.Models':'decode_string'().
'encode_user_id'() -> 'Tianjiupai.Models':'encode_string'().
'decode_user_name'() -> 'Tianjiupai.Models':'decode_string'().
'encode_user_name'() -> 'Tianjiupai.Models':'encode_string'().
'decode_wenzun_element'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S910Temp) -> case S910Temp of <<"WenzunMajor"/utf8>> -> 'SesterlJson.Decode':'pure'('wenzun_major'); <<"WenzunMinor"/utf8>> -> 'SesterlJson.Decode':'pure'('wenzun_minor'); S911Other -> 'SesterlJson.Decode':'fail'(S911Other) end end).
'encode_wenzun_element'() -> fun(S912Temp) -> case S912Temp of 'wenzun_major' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WenzunMajor"/utf8>>)} | []]); 'wenzun_minor' -> 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WenzunMinor"/utf8>>)} | []]) end end.
'decode_wuzun_element'() -> 'SesterlJson.Decode':'bind'('SesterlJson.Decode':'field'(<<"_label"/utf8>>, 'SesterlJson.Decode':'string'()), fun(S913Temp) -> case S913Temp of <<"WuzunUnit"/utf8>> -> 'SesterlJson.Decode':'pure'('wuzun_unit'); S914Other -> 'SesterlJson.Decode':'fail'(S914Other) end end).
'encode_wuzun_element'() -> fun(S915Temp) -> begin 'wuzun_unit' = S915Temp, 'SesterlJson.Encode':'object_from_list'([{<<"_label"/utf8>>, 'SesterlJson.Encode':'string'(<<"WuzunUnit"/utf8>>)} | []]) end end.
